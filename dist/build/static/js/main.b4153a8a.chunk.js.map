{"version":3,"sources":["component/helpers/Boxes.js","component/Home/Header.js","helpers/api-helpers.js","api/api.js","api/genericApi.js","component/helpers/PopUp.js","component/Home/Users/EditeUser.js","context/authContext.js","component/Home/Users/UsersTableRow.js","component/helpers/RTLProvider.js","component/Home/Users/UsersTable.js","component/Home/Users/AddUser.js","component/Home/Users/UsersFilters.js","pages/Home.js","layout/NavBar.js","component/ProtectRoutes/ProtectRoute.js","asserts/icon.feddc31d.jpg","asserts/smartSoft.png","api/auth.js","pages/Login.js","component/User/Header.js","component/User/OrdersTable/DeleteOrder.js","component/User/OrdersTable/EditeOrder.js","component/User/OrdersTable/OrderTableRow.js","component/User/OrdersTable/OrdersTable.js","component/User/DeleteUser.js","component/User/Filters.js","pages/User.js","custommHooks/useFormHooks.js","component/helpers/UserSearch.js","component/Flour/Form.js","pages/Flour.js","component/Breed/BreedConfirmForm.js","component/Breed/Form.js","pages/Breed.js","component/Debt/Form.js","pages/Debt.js","component/Paid/Form.js","pages/Paid.js","component/Orders/Header.js","component/Orders/OrdersTableRow.js","component/Orders/OrdersTable.js","component/Orders/Filters.js","pages/Orders.js","component/Admins/EditeAdmin.js","component/Admins/DeleteAdmin.js","component/Admins/AdminsTableRow.js","component/Admins/AdminsTable.js","component/Admins/AddAdmin.js","component/Admins/Header.js","pages/Admins.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","box","display","flexWrap","padding","justifyContent","width","m","height","papers","backgroundColor","color","flexDirection","alignItems","margin","Boxes","SummaryData","style","loading","classes","console","log","Box","className","map","data","index","Paper","background","elevation","CircularProgress","size","Typography","variant","title","value","Header","usersCount","totalFlour","totalBreed","restFlour","totalAccount","totalDebt","totalPayed","restAccount","API_COMMON_STATUS","Object","freeze","SUCCESS","FAILED","VALIDATION_ERROR","RESOURCE_CREATED","PUT_SUCCESS","RESOURCE_DELETED","UNAUTHORIZED","UNAUTHENTICATED","ERROR","BAD_REQUEST","CONFLICT","getUnknownStatusError","responseStatus","message","API_END_POINT","process","axios","create","baseURL","post","url","postData","a","token","localStorage","getItem","api","headers","Authorization","response","status","get","patch","patchDate","deleteRequest","delete","dialog","PopUp","open","handleClose","children","Dialog","onClose","maxWidth","Grid","container","DialogTitle","id","form","inputs","borderRadius","border","buttons","error","EditeUser","user","users","setUsers","history","useHistory","useState","setError","success","setSuccess","initialValues","name","phoneNumber","address","password","note","validationSchema","yup","shape","required","formic","useFormik","onSubmit","values","_id","newUsers","newUser","newUserIndex","findIndex","x","setTimeout","removeItem","push","msg","handleSubmit","Alert","alert","severity","direction","userCount","TextField","label","getFieldProps","inputProps","errors","touched","Button","type","onClick","authContext","createContext","useAuthContext","useContext","AuthContextProvider","isAuth","setIsAuth","admin","setAdmin","useEffect","getData","setItem","Provider","editeIcon","tableCell","disabled","UsersTableRow","openEdite","setOpenEdite","goToUserPage","toggleActiveUsers","isActive","TableRow","hover","role","tabIndex","TableCell","onDoubleClick","align","account","flourAmount","breedAmount","debtAmount","IconButton","isBigManager","canManageUsers","Switch","onChange","checked","createTheme","palette","primary","main","indigo","RTLProvider","ThemeProvider","paper","overflow","tableContainer","maxHeight","overflowY","tableHeader","fontWeight","fontSize","UsersTable","pages","getUsers","TableContainer","Table","stickyHeader","TableHead","column","TableBody","AddUser","setNewUser","length","undefined","resetForm","checkUserMobile","e","target","handleBlur","setFieldError","setFieldValue","onBlur","root","UsersFilters","setData","openAddUser","setOpenAddUser","handleCloseAddUser","handleChange","search","reset","item","xs","sx","minWidth","FormControl","fullWidth","InputLabel","Select","MenuItem","Home","summary","setSummary","setLoading","page","setPage","setPages","pagesNumber","Math","ceil","rowsPerPage","nav","link","textDecoration","button","NavBar","anchorEl","setAnchorEl","setOpen","AppBar","position","Toolbar","activeStyle","exact","to","canManageFlour","canManageBreed","canManageDebts","canManagePaid","event","currentTarget","Menu","MenuListProps","ProtectRoute","Component","component","rest","render","props","login","loginData","loginContainer","header","paddingTop","logo","logoDiv","smartSoft","footer","Login","src","alt","placeholder","href","rel","textContainer","text","number","deleteButton","DeleteOrder","order","userOrders","setUserOrders","deleteOrder","editeButton","EditeOrder","debt","payedAmount","date","moment","Date","format","schema","deleteIcon","OrderTableRow","openDelete","setOpenDelete","handleCloseDeleteOrder","handleCloseEditeOrder","orderCount","currentAccount","toLocaleDateString","OrdersTable","Pagination","count","showFirstButton","showLastButton","filterUrl","DeleteUser","deleteUser","formControl","displayDirection","Filters","setUrl","from","allowKeyboardControl","renderInput","params","invalidDateMessage","User","useParams","setUser","summaryData","setSummaryData","getUserData","useCallback","orders","useFormHooks","setUserCount","openSearch","setOpenSearch","getUser","setUserData","handleUserDataChange","handleCloseSearch","handleOpenSearch","columns","UserSearch","getUrl","handlePageChange","selectUser","breakpoints","down","userName","userCounterContainer","Form","handleGetUser","userId","default","Number","inputVariant","Flour","BreedConfirmForm","confirm","submitForm","openConfirm","setOpenConfirm","handleCloseConfirm","preventDefault","Breed","Debt","amount","Paid","OrdersTableRow","setOrders","getOrders","Orders","ordersCount","checkBoxContainer","EditeAdmin","admins","setAdmins","newAdmins","newAdmin","newAdminIndex","FormControlLabel","control","Checkbox","DeleteAdmin","deleteAdmin","filter","checkedIcon","AdminsTableRow","handleCloseEdite","handleCloseDelete","marginTop","AdminsTable","AddAdmin","Boolean","openAdd","setOpenAdd","handlecloseAdd","Admins","getAdmins","App","jss","plugins","jssPreset","rtl","StylesProvider","utils","DateFnsUtils","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qSAIMA,EAAWC,aAAW,SAACC,GAAD,MAAY,CACtCC,IAAK,CACHC,QAAS,OACTC,SAAU,OACVC,QAAS,OACTC,eAAgB,eAChBC,MAAO,OACP,kBAAmB,CACjBC,EAAG,EACHD,MAAO,IACPE,OAAQ,MAGZC,OAAQ,CACNC,gBAAiB,UACjBC,MAAO,QACPT,QAAS,OACTU,cAAe,SACfC,WAAY,SACZR,eAAgB,SAChBS,OAAQ,iBAyCGC,EArCD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7BC,EAAUrB,IAGhB,OAFAsB,QAAQC,IAAI,CAAEH,YAGZ,cAACI,EAAA,EAAD,CAAKC,UAAWJ,EAAQlB,IAAxB,SACGe,EAAYQ,KAAI,SAACC,EAAMC,GAAP,OACf,cAACC,EAAA,EAAD,CACEV,MAAO,CAAEW,YAAiB,OAALX,QAAK,IAALA,OAAA,EAAAA,EAAOW,aAAc,WAE1CL,UAAWJ,EAAQV,OACnBoB,UAAW,EAJb,SAMGX,EACC,cAACY,EAAA,EAAD,CAAkBC,KAAK,OAAOpB,MAAM,YAEpC,qCACG,IACD,cAACqB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BR,EAAKS,QAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGR,EAAKU,QACY,IAAfV,EAAKU,OAAgBjB,EAGpB,+BACE,cAACY,EAAA,EAAD,CAAkBC,KAAK,OAAOpB,MAAM,cAHtC,SAbLe,SCpBAU,EAdA,SAAC,GAAuB,IAArBX,EAAoB,EAApBA,KAAMP,EAAc,EAAdA,QAChBF,EAAc,CAClB,CAAEkB,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMY,YACxC,CAAEH,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMa,YACtC,CAAEJ,MAAO,gEAAeC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMc,YACrC,CAAEL,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WACxC,CAAEN,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,cACtC,CAAEP,MAAO,yFAAoBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,WAC1C,CAAER,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMkB,YACxC,CAAET,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMmB,cAE1C,OAAO,cAAC,EAAD,CAAO1B,QAASA,EAASF,YAAaA,KCdzC6B,EAAoBC,OAAOC,OAAO,CACtCC,QAAS,IACTC,OAAQ,IACRC,iBAAkB,IAClBC,iBAAkB,IAClBC,YAAa,IACbC,iBAAkB,IAClBC,aAAc,IACdC,gBAAiB,IACjBC,MAAO,IACPC,YAAa,IACbC,SAAU,MAGNC,EAAwB,WAC5B,MAAO,CACLC,eAAgBf,EAAkBW,MAClCK,QAAS,0B,yBChBPC,EAAgBC,OACtB3C,QAAQC,IAAIyC,GACGE,UAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKJ,KCEDK,EAAI,uCAAG,WAAOC,EAAKC,GAAZ,qBAAAC,EAAA,6DACd7C,EAAO,GACL8C,EAAQC,aAAaC,QAAQ,SAFjB,kBAIKC,EAAIP,KAAKC,EAAKC,EAAU,CAC3CM,QAAS,CACPC,cAAc,UAAD,OAAYL,MANb,OAIZM,EAJY,mBASRA,QATQ,IASRA,OATQ,EASRA,EAAUC,OATF,cAUTjC,EAAkBM,iBAVT,yBAWZ1B,EAAI,aACFmC,eAAgBf,EAAkBM,kBAC/B0B,GAbO,6BAiBZpD,EAAOkC,IAjBK,iCAmBTlC,GAnBS,kCAqBZoD,EAAW,KAAEA,SArBD,YAsBRA,QAtBQ,IAsBRA,OAtBQ,EAsBRA,EAAUC,OAtBF,cAuBTjC,EAAkBY,YAvBT,UA6BTZ,EAAkBa,SA7BT,UAmCTb,EAAkBW,MAnCT,UAyCTX,EAAkBS,aAzCT,2BAwBZ7B,EAAI,aACFmC,eAAgBf,EAAkBY,aAC/BoB,GA1BO,oCA8BZpD,EAAI,aACFmC,eAAgBf,EAAkBa,UAC/BmB,GAhCO,oCAoCZpD,EAAI,aACFmC,eAAgBf,EAAkBW,OAC/BqB,GAtCO,oCA0CZpD,EAAO,CACLmC,eAAgBf,EAAkBS,cA3CxB,6BA+CZ7B,EAAOkC,IA/CK,iCAiDTlC,GAjDS,0DAAH,wDAqDJsD,EAAG,uCAAG,WAAOX,GAAP,qBAAAE,EAAA,6DACb7C,EAAO,GACL8C,EAAQC,aAAaC,QAAQ,SAFlB,kBAIMC,EAAIK,IAAIX,EAAK,CAChCO,QAAS,CACPC,cAAc,UAAD,OAAYL,MANd,OAIXM,EAJW,mBASPA,QATO,IASPA,OATO,EASPA,EAAUC,OATH,cAURjC,EAAkBG,QAVV,yBAWXvB,EAAI,aACFmC,eAAgBf,EAAkBG,SAC/B6B,GAbM,6BAiBXpD,EAAOkC,IAjBI,iCAmBRlC,GAnBQ,kCAqBXoD,EAAW,KAAEA,SArBF,YAsBPA,QAtBO,IAsBPA,OAtBO,EAsBPA,EAAUC,OAtBH,cAuBRjC,EAAkBY,YAvBV,UA6BRZ,EAAkBW,MA7BV,UAmCRX,EAAkBS,aAnCV,2BAwBX7B,EAAI,aACFmC,eAAgBf,EAAkBY,aAC/BoB,GA1BM,oCA8BXpD,EAAI,aACFmC,eAAgBf,EAAkBW,OAC/BqB,GAhCM,oCAoCXpD,EAAO,CACLmC,eAAgBf,EAAkBS,cArCzB,6BAyCX7B,EAAOkC,IAzCI,iCA2CRlC,GA3CQ,0DAAH,sDA+CHuD,EAAK,uCAAG,WAAOZ,EAAKa,GAAZ,qBAAAX,EAAA,6DACf7C,EAAO,GACL8C,EAAQC,aAAaC,QAAQ,SAFhB,kBAIIC,EAAIM,MAAMZ,EAAKa,EAAW,CAC7CN,QAAS,CACPC,cAAc,UAAD,OAAYL,MANZ,OAIbM,EAJa,mBASTA,QATS,IASTA,OATS,EASTA,EAAUC,OATD,cAUVjC,EAAkBG,QAVR,yBAWbvB,EAAI,aACFmC,eAAgBf,EAAkBG,SAC/B6B,GAbQ,6BAiBbpD,EAAOkC,IAjBM,iCAmBVlC,GAnBU,kCAqBboD,EAAW,KAAEA,SArBA,YAsBTA,QAtBS,IAsBTA,OAtBS,EAsBTA,EAAUC,OAtBD,cAuBVjC,EAAkBY,YAvBR,UA6BVZ,EAAkBW,MA7BR,UAmCVX,EAAkBa,SAnCR,UAyCVb,EAAkBS,aAzCR,2BAwBb7B,EAAI,aACFmC,eAAgBf,EAAkBY,aAC/BoB,GA1BQ,oCA8BbpD,EAAI,aACFmC,eAAgBf,EAAkBW,OAC/BqB,GAhCQ,oCAoCbpD,EAAI,aACFmC,eAAgBf,EAAkBa,UAC/BmB,GAtCQ,oCA0CbpD,EAAO,CACLmC,eAAgBf,EAAkBS,cA3CvB,6BA+Cb7B,EAAOkC,IA/CM,iCAiDVlC,GAjDU,0DAAH,wDAqDLyD,EAAa,uCAAG,WAAOd,GAAP,qBAAAE,EAAA,6DACvB7C,EAAO,GACL8C,EAAQC,aAAaC,QAAQ,SAFR,kBAIJC,EAAIS,OAAOf,EAAK,CACnCO,QAAS,CACPC,cAAc,UAAD,OAAYL,MANJ,OAIrBM,EAJqB,mBASjBA,QATiB,IASjBA,OATiB,EASjBA,EAAUC,OATO,cAUlBjC,EAAkBG,QAVA,yBAWrBvB,EAAI,aACFmC,eAAgBf,EAAkBG,SAC/B6B,GAbgB,6BAiBrBpD,EAAOkC,IAjBc,iCAmBlBlC,GAnBkB,kCAqBrBoD,EAAW,KAAEA,SArBQ,YAsBjBA,QAtBiB,IAsBjBA,OAtBiB,EAsBjBA,EAAUC,OAtBO,cAuBlBjC,EAAkBY,YAvBA,UA6BlBZ,EAAkBW,MA7BA,UAmClBX,EAAkBS,aAnCA,2BAwBrB7B,EAAI,aACFmC,eAAgBf,EAAkBY,aAC/BoB,GA1BgB,oCA8BrBpD,EAAI,aACFmC,eAAgBf,EAAkBW,OAC/BqB,GAhCgB,oCAoCrBpD,EAAO,CACLmC,eAAgBf,EAAkBS,cArCf,6BAyCrB7B,EAAOkC,IAzCc,iCA2ClBlC,GA3CkB,0DAAH,sD,2GC1JpB3B,EAAWC,aAAW,iBAAO,CACjCqF,OAAQ,CACNhF,QAAS,YAqBEiF,EAjBD,SAAC,GAA4C,IAA1CnD,EAAyC,EAAzCA,MAAOoD,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACnCrE,EAAUrB,IAChB,OACE,cAAC2F,EAAA,EAAD,CACEC,QAASH,EACT,kBAAgB,sBAChBD,KAAMA,EACNK,SAAS,KAJX,SAME,eAACC,EAAA,EAAD,CAAMrE,UAAWJ,EAAQiE,OAAQS,WAAS,EAACxF,eAAe,SAA1D,UACE,cAACyF,EAAA,EAAD,CAAaC,GAAG,sBAAhB,SAAuC7D,IACtCsD,Q,2CCPH1F,GAAWC,aAAW,iBAAO,CACjCiG,KAAM,CACJ1F,MAAO,QAET2F,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEVuF,MAAO,CACLF,OAAQ,qBA0LGG,GAvLG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUlB,EAAkB,EAAlBA,YACpCpE,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAgB,CACpBC,KAAMV,EAAKU,MAAQ,GACnBC,YAAaX,EAAKW,aAAe,GACjCC,QAASZ,EAAKY,SAAW,GACzBC,SAAUb,EAAKa,UAAY,GAC3BC,KAAMd,EAAKc,MAAQ,IAGfC,EAAmBC,MAAaC,MAAM,CAC1CP,KAAMM,MAAaE,WACnBP,YAAaK,MAAaE,WAC1BN,QAASI,MACTH,SAAUG,MAAaE,WACvBJ,KAAME,QAGFG,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,uBAAAvD,EAAA,6DACJ7C,EAAO,CACTyF,YAAaW,EAAOX,YACpBD,KAAMY,EAAOZ,KACbE,QAASU,EAAOV,QAChBE,KAAMQ,EAAOR,KACbD,SAAUb,EAAKa,UANT,SAQapC,EAAM,iBAAD,OAAkBuB,EAAKuB,KAAOrG,GARhD,OAQJoD,EARI,OASRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,SAC5C+E,EADqD,YACtCvB,GACfwB,EAAUnD,EAASpD,KAAK8E,KACxB0B,EAAeF,EAASG,WAAU,SAACC,GAAD,OAAOA,EAAEL,MAAQvB,EAAKuB,OAC5DC,EAASE,GAAgBD,EACzBvB,EAAS,YAAIsB,IACbhB,GAAW,GACXqB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,MA1BjB,2CAAF,mDAAC,KA8BX,OACE,sBAAMX,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,yIAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,eAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAApB,iFAAuCsE,EAAKsC,aAC5C,cAACC,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,uEACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KAAO9F,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KACpC,cAACjF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YACxC/F,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,gGACFrB,EAAOsB,cAAc,iBAE1BtB,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YAC3C,cAAClF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACrCjG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,2FACFrB,EAAOsB,cAAc,cAE1BtB,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACxC,cAACpF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO/B,SAAWO,EAAOyB,QAAQhC,QACpChG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,mFACFrB,EAAOsB,cAAc,aAE1BtB,EAAOwB,OAAO/B,SAAWO,EAAOyB,QAAQhC,QACvC,cAACnF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KAAOlG,EAAQkF,MAAQ,IAEhEpE,QAAQ,WACR8G,MAAM,+CACFrB,EAAOsB,cAAc,UAE1BtB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBkD,QAAS/D,EACTtD,QAAQ,YACRtB,MAAM,UAJR,wDCtMN4I,GAAcC,0BAEPC,GAAiB,WAC5B,OAAOC,qBAAWH,KAGPI,GAAsB,SAAC,GAAkB,IAAhBnE,EAAe,EAAfA,SACpC,EAA4BoB,mBAASpC,aAAaC,QAAQ,oBAA1D,mBAAOmF,EAAP,KAAeC,EAAf,KACA,EAA0BjD,qBAA1B,mBAAOkD,EAAP,KAAcC,EAAd,KAmBA,OAhBAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,4BAAA3F,EAAA,sEACOS,EAAI,mBADX,QACVF,EADU,QAEDjB,iBAAmBf,EAAkBG,SAChD+G,EAASlF,EAASpD,KAAKqI,OACvBtF,aAAa0F,QAAQ,QAASrF,EAASpD,KAAK8C,QACnCM,EAASjB,iBAAmBf,EAAkBS,eACvDuG,GAAU,GACVrF,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,oBARZ,2CAAH,qDAWRyB,GACHG,MAED,CAACH,EAAOC,IAET,cAACR,GAAYY,SAAb,CAAsBhI,MAAO,CAAEyH,SAAQC,YAAWC,QAAOC,YAAzD,SACGvE,K,qBCpBD1F,GAAWC,aAAW,iBAAO,CACjCqK,UAAW,CACTzJ,MAAO,WAET0J,UAAW,CACTjK,QAAS,OAEXkK,SAAU,CACR3J,MAAO,YAuII4J,GAnIO,SAAC,GAAsC,IAApC/D,EAAmC,EAAnCA,MAAOD,EAA4B,EAA5BA,KAAME,EAAsB,EAAtBA,SACpC,GAD0D,EAAZ/E,MACZkF,oBAAS,IAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KACQX,EAAUL,KAAVK,MACF3I,EAAUrB,KACV4G,EAAUC,cAUV+D,EAAe,WACnBhE,EAAQ4B,KAAR,eAAqB/B,EAAKuB,OAGtB6C,EAAiB,uCAAG,kCAAArG,EAAA,sEACHS,EAAI,iBAAD,OAAkBwB,EAAKuB,IAAvB,YADA,QACpBjD,EADoB,QAEXjB,iBAAmBf,EAAkBG,SAC5C+E,EADqD,YACtCvB,IACfwB,EAAUzB,GACNqE,UAAYrE,EAAKqE,SACrB3C,EAAeF,EAASG,WAAU,SAACC,GAAD,OAAOA,EAAEL,MAAQvB,EAAKuB,OAC5DE,EAAQC,GAAgBD,EACxBvB,EAAS,YAAIsB,KACJlD,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAZS,2CAAH,qDAgBvB,OACE,eAACuC,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,cAACC,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,SAKG5E,EAAK6E,QAAU,EAAI,cAAC,KAAD,CAAwBzK,MAAM,cAAiB,OAErE,cAACsK,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,SAKG5E,EAAKsC,YAER,cAACoC,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAMW,cAET,cAAC+D,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAMU,OAET,cAACgE,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAM8E,cAET,cAACJ,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAM+E,cAET,cAACL,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAMgF,aAET,cAACN,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAM5D,aAET,cAACsI,EAAA,EAAD,CACEC,cAAeR,EACfnJ,UAAWJ,EAAQkJ,UACnBc,MAAM,SAHR,gBAKG5E,QALH,IAKGA,OALH,EAKGA,EAAM6E,UAET,cAACH,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACK,EAAA,EAAD,CACElB,WAAU,OAACR,QAAD,IAACA,OAAD,EAACA,EAAO2B,iBAAgB,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAO4B,gBAC1CpC,QA5FgB,WACtBmB,GAAa,IAyFT,SAIE,cAAC,IAAD,CACElJ,WACE,OAACuI,QAAD,IAACA,OAAD,EAACA,EAAO2B,gBAAgB,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAO4B,gBAE5BvK,EAAQiJ,UADRjJ,EAAQmJ,eAMpB,cAACW,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACQ,EAAA,EAAD,CACErB,WAAU,OAACR,QAAD,IAACA,OAAD,EAACA,EAAO2B,iBAAgB,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAO4B,gBAC1CE,SAAUjB,EACVkB,QAAStF,EAAKqE,aAGlB,cAAC,EAAD,CACEtF,KAAMkF,EACNjF,YApHmB,WACvBkF,GAAa,IAoHTvI,MAAM,uHAHR,SAKE,cAAC,GAAD,CAAWqE,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,QA1FAF,EAAKuB,M,8BCzDtD9H,GAAQ8L,aAAY,CACxBlD,UAAW,MACXmD,QAAS,CACPC,QAAS,CACPC,KAAMC,KAAO,SAQJC,GAJK,SAAC,GAAkB,IAAhB3G,EAAe,EAAfA,SACrB,OAAO,cAAC4G,GAAA,EAAD,CAAepM,MAAOA,GAAtB,SAA8BwF,KCCjC1F,GAAWC,aAAW,iBAAO,CACjCsM,MAAO,CACL/L,MAAO,MACPgM,SAAU,UAEZC,eAAgB,CACdC,UAAW,IACXlM,MAAO,OACPmM,UAAW,UAEbC,YAAa,CACXC,WAAY,MACZC,SAAU,OACVhL,WAAY,SACZjB,MAAO,aAII,SAASkM,GAAT,GAA2D,IAArCrG,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SACpCtF,GADiE,EAAnB2L,MAAmB,EAAZC,SAC3CjN,MAoBhB,OACE,cAAC,GAAD,UACE,cAAC6B,EAAA,EAAD,CAAOJ,UAAWJ,EAAQkL,MAA1B,SACE,cAACW,EAAA,EAAD,CAAgBzL,UAAWJ,EAAQoL,eAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,UAzBI,CACd,GACA,sEACA,+FACA,sEACA,iHACA,0DACA,yFACA,kFACA,uCACA,iCACA,iEAeqBrJ,KAAI,SAAC4L,EAAQ1L,GAAT,OACX,cAACuJ,EAAA,EAAD,CACE1J,UAAWJ,EAAQuL,YAEnBvB,MAAM,SAHR,SAKGiC,GAHI1L,UAQb,cAAC2L,EAAA,EAAD,UACG7G,EAAMhF,KAAI,SAAC+E,EAAM7E,GAChB,OACE,cAAC,GAAD,CACE8E,MAAOA,EACPC,SAAUA,EAEVF,KAAMA,EACN7E,MAAOA,GAFFA,iB,aC9DnB5B,GAAWC,aAAW,iBAAO,CACjCiG,KAAM,CACJ1F,MAAO,QAET2F,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEV4H,MAAO,CACLpI,MAAO,OAET+F,MAAO,CACLF,OAAQ,qBA4NGmH,GAzNC,SAAC,GAAsC,IAApC9G,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUlB,EAAkB,EAAlBA,YAC5BpE,EAAUrB,KACV4G,EAAUC,cAChB,EAA8BC,qBAA9B,mBAAOoB,EAAP,KAAgBuF,EAAhB,KACA,EAA0B3G,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KASMO,EAAmBC,MAAaC,MAAM,CAC1CP,KAAMM,MAAaE,SAAS,oFAC5BP,YAAaK,MAEVE,SAAS,oFACT+F,OAAO,GAAI,gJACdrG,QAASI,MACTH,SAAUG,MAAaE,SAAS,oFAChCJ,KAAME,QAGFG,EAASC,YAAU,CACvBL,mBACAN,cArBoB,CACpBC,KAAM,GACNC,YAAa,GACbC,QAAS,GACTE,KAAM,GACND,SAAU,IAiBVQ,SAAS,WAAD,4BAAE,WAAOC,GAAP,mBAAAvD,EAAA,6DACJ7C,EAAO,CACTyF,YAAaW,EAAOX,YACpBD,KAAMY,EAAOZ,KACbE,QAASU,EAAOV,cAAWsG,EAC3BpG,KAAMQ,EAAOR,WAAQoG,EACrBrG,SAAUS,EAAOT,eAAYqG,GANvB,SAQatJ,EAAK,gBAAiB1C,GARnC,OAQJoD,EARI,OASRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAC5C4E,EAD8D,CAClDlD,EAASpD,KAAK8E,MADoC,mBAC3BC,IACvCC,EAAS,YAAIsB,IACbwF,EAAW1I,EAASpD,KAAK8E,MACzBQ,GAAW,GACXF,GAAS,GACTuB,YAAW,WACTrB,GAAW,GACXW,EAAOgG,YACPH,EAAW,QACV,MACM1I,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,KACvBxB,GAAW,IA5BL,2CAAF,mDAAC,KAiCL4G,EAAe,uCAAG,WAAOC,GAAP,mBAAAtJ,EAAA,yDAClBnC,EAAQyL,EAAEC,OAAO1L,MACrBuF,EAAOoG,WAAWF,IACdzL,EAHkB,gCAIC4C,EAAI,6BAAD,OAA8B5C,IAJlC,OAIhB0C,EAJgB,OAKpBzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,WAC5CwD,EAAQ3B,EAASpD,KAAK+E,OAChBgH,OAAS,GACjBpM,QAAQC,IAAImF,GACZkB,EAAOqG,cAAc,cAAe,iIAEpCrG,EAAOsG,cAAc,WAAY7L,IAZjB,2CAAH,sDAiBrB,OACE,sBAAMyF,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,eAAClB,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,cAACH,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,yIAOA,eAAC3G,EAAA,EAAD,CAAYC,QAAQ,KAApB,wFACgB+F,QADhB,IACgBA,OADhB,EACgBA,EAASa,gBAI7B,eAACjD,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,cAACE,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,uEACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KAAO9F,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KACpC,cAACjF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YACxC/F,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,gGACFrB,EAAOsB,cAAc,gBAV3B,IAWEiF,OAAQN,KAETjG,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YAC3C,cAAClF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,SACG+G,EAAOwB,OAAOhC,cAEf,KACJ,cAAC4B,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACrCjG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,2FACFrB,EAAOsB,cAAc,cAE1BtB,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACxC,cAACpF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO/B,SAAWO,EAAOyB,QAAQhC,QACpChG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,mFACFrB,EAAOsB,cAAc,aAE1BtB,EAAOwB,OAAO/B,SAAWO,EAAOyB,QAAQhC,QACvC,cAACnF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KAAOlG,EAAQkF,MAAQ,IAEhEpE,QAAQ,WACR8G,MAAM,+CACFrB,EAAOsB,cAAc,UAE1BtB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBkD,QAAS/D,EACTtD,QAAQ,YACRtB,MAAM,UAJR,wD,wCCpONb,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,OACTE,MAAO,OAET2F,OAAQ,CACNzF,OAAQ,OACRF,MAAO,QACPQ,OAAQ,WAEVA,OAAQ,CACNA,OAAQ,iBA4IGqN,GAxIM,SAAC,GAAmC,IAAjC3H,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUsG,EAAe,EAAfA,SACvC,EAAwBnG,mBAAS,CAC/BK,KAAM,GACNC,YAAa,GACb2B,UAAW,GACXuC,QAAS,KAJX,mBAAO3J,EAAP,KAAa2M,EAAb,KAMA,EAAsCxH,oBAAS,GAA/C,mBAAOyH,EAAP,KAAoBC,EAApB,KACQxE,EAAUL,KAAVK,MACF3I,EAAUrB,KAMVyO,EAAqB,SAACX,GAC1BU,GAAe,IAGXE,EAAe,SAACZ,GACpB,IAAI3G,EAAO2G,EAAEC,OAAO5G,KAChB9E,EAAQyL,EAAEC,OAAO1L,MACrBiM,EAAQ,2BAAK3M,GAAN,mBAAawF,EAAO9E,MAGvBsM,EAAM,uCAAG,4BAAAnK,EAAA,6DACTF,EADS,iBAET3C,EAAKwF,OAAM7C,GAAS,gBAAY3C,EAAKwF,OACrCxF,EAAKoH,YAAWzE,GAAS,qBAAiB3C,EAAKoH,YAC/CpH,EAAKyF,cAAa9C,GAAS,uBAAmB3C,EAAKyF,cACnDzF,EAAK2J,UAAShH,GAAS,mBAAe3C,EAAK2J,UALlC,SAMP2B,EAAS3I,GANF,2CAAH,qDASNsK,EAAK,uCAAG,sBAAApK,EAAA,sFAENyI,EAFM,yBAGZqB,EAAQ,CAAEnH,KAAM,GAAIC,YAAa,GAAI2B,UAAW,GAAIuC,QAAS,KAHjD,2CAAH,qDAMX,OACE,eAACxF,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,gBAAxD,UACE,eAACuF,EAAA,EAAD,CAAMC,WAAS,EAAC8I,MAAI,EAACC,GAAI,GAAI/N,WAAW,SAAxC,UACE,cAACiI,EAAA,EAAD,CACE3G,MAAOV,EAAKoH,UACZ+C,SAAU4C,EACVjN,UAAWJ,EAAQL,OACnBmI,WAAY,CACV1H,UAAWJ,EAAQ8E,QAErB8C,MAAM,sEACN9G,QAAQ,WACRgF,KAAK,cAEP,cAAC6B,EAAA,EAAD,CACE3G,MAAOV,EAAKwF,KACZ2E,SAAU4C,EACVjN,UAAWJ,EAAQL,OACnBmI,WAAY,CACV1H,UAAWJ,EAAQ8E,QAErB8C,MAAM,sEACN9G,QAAQ,WACRgF,KAAK,SAEP,cAAC6B,EAAA,EAAD,CACE3G,MAAOV,EAAKyF,YACZ0E,SAAU4C,EACVjN,UAAWJ,EAAQL,OACnBmI,WAAY,CACV1H,UAAWJ,EAAQ8E,QAErB8C,MAAM,0DACN9G,QAAQ,WACRgF,KAAK,gBAEP,cAAC3F,EAAA,EAAD,CAAKuN,GAAI,CAAEC,SAAU,KAAOvN,UAAWJ,EAAQL,OAA/C,SACE,eAACiO,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,CAAYlJ,GAAG,2BAAf,oGAGA,eAACmJ,GAAA,EAAD,CAEEnJ,GAAG,qBACH5D,MAAOV,EAAK2J,QACZrC,MAAM,yFACN6C,SAAU4C,EACVvH,KAAK,UANP,UAQE,cAACkI,GAAA,EAAD,CAAUhN,MAAO,EAAjB,mDACA,cAACgN,GAAA,EAAD,CAAUhN,MAAO,EAAjB,uEAIN,cAACiH,EAAA,EAAD,CACE7H,UAAWJ,EAAQL,OACnBwI,QAASmF,EACT9N,MAAM,UACNsB,QAAQ,YAJV,gCAQA,cAACmH,EAAA,EAAD,CACE7H,UAAWJ,EAAQL,OACnBwI,QAASoF,EACT/N,MAAM,UACNsB,QAAQ,YAJV,oFASF,cAAC2D,EAAA,EAAD,CAAMC,WAAS,EAAC8I,MAAI,EAACC,GAAI,EAAG/N,WAAW,SAASR,eAAe,WAA/D,SACE,cAAC+I,EAAA,EAAD,CACEkB,WAAU,OAACR,QAAD,IAACA,OAAD,EAACA,EAAO2B,iBAAgB,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAO4B,gBAC1CpC,QAvGkB,SAACsE,GACzBU,GAAe,IAuGT3N,MAAM,UACNsB,QAAQ,YAJV,mFASF,cAAC,EAAD,CACEC,MAAM,+FACNqD,YAAagJ,EACbjJ,KAAM+I,EAHR,SAKE,cAAC,GAAD,CACE9I,YAAagJ,EACb/H,MAAOA,EACPC,SAAUA,UChJd3G,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAGAgP,GAAO,WAClB,MAA8BxI,mBAAS,IAAvC,mBAAOyI,EAAP,KAAgBC,EAAhB,KACA,EAA8B1I,oBAAS,GAAvC,mBAAO1F,EAAP,KAAgBqO,EAAhB,KACA,EAA0B3I,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KACA,EAAwBG,mBAAS,GAAjC,mBAAO4I,EAAP,KAAaC,EAAb,KACA,EAA0B7I,qBAA1B,mBAAOkG,EAAP,KAAc4C,EAAd,KACMhJ,EAAUC,cACVxF,EAAUrB,KAEViN,EAAQ,uCAAG,0CAAAzI,EAAA,6DAAOF,EAAP,+BAAa,iBAC5BmL,GAAW,GADI,SAEMxK,EAAIX,GAFV,OAEXS,EAFW,OAGf0K,GAAW,GACP1K,EAASjB,iBAAmBf,EAAkBG,QAChDyD,EAAS5B,EAASpD,KAAK+E,OACd3B,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WATA,2CAAH,qDA+Bd,OAnBA0B,qBAAU,WACR,IAAMC,EAAO,uCAAG,8BAAA3F,EAAA,6DACdiL,GAAW,GADG,SAEOxK,EAAI,uBAFX,OAEVF,EAFU,OAGd0K,GAAW,GACP1K,EAASjB,iBAAmBf,EAAkBG,SAChDsM,EAAWzK,EAASpD,KAAK4N,SACzB5I,EAAS5B,EAASpD,KAAK+E,MAAMA,OACzBmJ,EAAcC,KAAKC,KAAKhL,EAASpD,KAAK+E,MAAMnE,WAAa,GAC7DqN,EAASC,IACA9K,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAZD,2CAAH,qDAeb2B,MACC,CAACvD,IAGF,eAACd,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC,EAAD,CAAQa,QAASA,EAASO,KAAM4N,IAChC,cAAC,GAAD,CAActC,SAAUA,EAAUtG,SAAUA,EAAUD,MAAOA,IAC7D,cAACqG,GAAD,CACEpG,SAAUA,EACVsG,SAAUA,EACV+C,YAAa,GACbN,KAAMA,EACNC,QAASA,EACTjJ,MAAOA,EACPsG,MAAOA,Q,qGClDThN,GAAWC,aAAW,iBAAO,CACjCgQ,IAAK,CACHnO,WAAY,UAEdoO,KAAM,CACJC,eAAgB,OAChBtP,MAAO,QACPG,OAAQ,WACRV,QAAS,OACT8F,aAAc,OAEhBgK,OAAQ,CACN5P,MAAO,YAwKI6P,GApKA,WACb,IAAMhP,EAAUrB,KACV4G,EAAUC,cAChB,EAAgCC,oBAAS,GAAzC,mBAAOwJ,EAAP,KAAiBC,EAAjB,KACA,EAAwBzJ,oBAAS,GAAjC,mBAAOtB,EAAP,KAAagL,EAAb,KACA,EAAqC7G,KAA7BK,EAAR,EAAQA,MAAOF,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,UAqBvB,OAAOD,EACL,cAAC2G,GAAA,EAAD,CAAQhP,UAAWJ,EAAQ4O,IAAKS,SAAS,SAAzC,SACE,cAACC,GAAA,EAAD,UACE,eAAC7K,EAAA,EAAD,CAAMC,WAAS,EAAChF,WAAW,UAAUR,eAAe,gBAApD,UACE,eAACuF,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,aACfQ,WAAW,UACX8N,MAAI,EACJC,GAAI,GALN,UAOG9E,GACC,cAAC,IAAD,CACE4G,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBW,OAAK,EACLC,GAAG,IANL,SAQE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,sGAGE,OAAL6H,QAAK,IAALA,OAAA,EAAAA,EAAO2B,gBAAP,OAAuB3B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAO+G,gBAC7B,cAAC,IAAD,CACEH,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,SALL,SAQE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,6EAEA,MACE,OAAL6H,QAAK,IAALA,OAAA,EAAAA,EAAO2B,gBAAP,OAAuB3B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOgH,gBAC7B,cAAC,IAAD,CACEJ,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,SALL,SAOE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,iEAEA,MAEE,OAAL6H,QAAK,IAALA,OAAA,EAAAA,EAAO2B,gBAAP,OAAuB3B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOiH,gBAC7B,cAAC,IAAD,CACEL,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,QALL,SAOE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,qDAEA,MACE,OAAL6H,QAAK,IAALA,OAAA,EAAAA,EAAO2B,gBAAP,OAAuB3B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOkH,eAC7B,cAAC,IAAD,CACEN,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,SALL,SAOE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,8EAEA,KACH6H,GACC,cAAC,IAAD,CACE4G,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,UALL,SAOE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,2DAGE,OAAL6H,QAAK,IAALA,OAAA,EAAAA,EAAO2B,cACN,cAAC,IAAD,CACEiF,YAAa,CACX9O,WAAY,WAEdL,UAAWJ,EAAQ6O,KACnBY,GAAG,UALL,SAOE,cAAC5O,EAAA,EAAD,CAAYC,QAAQ,QAApB,sEAEA,QAEL6H,GACC,qCACG,IACD,cAAC0B,EAAA,EAAD,CAAYlC,QAxGA,SAAC2H,GACvBZ,EAAYY,EAAMC,eAClBZ,GAAQ,IAsGE,SACE,cAAC,KAAD,MAEF,eAACa,GAAA,EAAD,CACEpL,GAAG,aACHqK,SAAUA,EACV9K,KAAMA,EACNI,QA3GM,WAClB2K,EAAY,MACZC,GAAQ,IA0GIc,cAAe,CACb,kBAAmB,gBANvB,UASE,cAACjC,GAAA,EAAD,UACE,eAACnN,EAAA,EAAD,CAAYrB,MAAM,UAAlB,UACG,IADH,2CAEWmJ,QAFX,IAEWA,OAFX,EAEWA,EAAO7C,UAGpB,cAACkI,GAAA,EAAD,UACE,eAACnN,EAAA,EAAD,CAAYrB,MAAM,UAAlB,8EACgBmJ,QADhB,IACgBA,OADhB,EACgBA,EAAO5C,iBAGzB,cAACiI,GAAA,EAAD,UACE,cAAC/F,EAAA,EAAD,CACE7H,UAAWJ,EAAQ+O,OACnB5G,QA5IH,WACb9E,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxBwB,GAAU,GACVnD,EAAQ4B,KAAK,UACb+H,EAAY,MACZC,GAAQ,IAuIQ3P,MAAM,YAHR,gGAed,yB,2BClLW0Q,GAZM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,mBACpD5H,EAASpF,aAAaC,QAAQ,mBACpC,OACE,cAAC,IAAD,2BACM+M,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN9H,EAAS,cAAC0H,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUd,GAAG,eCR1C,OAA0B,0CCA1B,OAA0B,sCCK5Be,GAAK,uCAAG,WAAOC,GAAP,mBAAAtN,EAAA,6DACf7C,EAAO,GADQ,kBAGIiD,EAAIP,KAAK,eAAgByN,GAH7B,OAGb/M,EAHa,YAITA,EAASC,OAJA,cAKVjC,EAAkBG,QALR,yBAMbvB,EAAI,aACFmC,eAAgBf,EAAkBG,SAC/B6B,GARQ,6BAYbpD,EAAOkC,IAZM,iCAcVlC,GAdU,kCAgBboD,EAAW,KAAEA,SAhBA,KAiBTA,EAASC,OAjBA,cAkBVjC,EAAkBY,YAlBR,UAwBVZ,EAAkBW,MAxBR,2BAmBb/B,EAAI,aACFmC,eAAgBf,EAAkBY,aAC/BoB,GArBQ,oCAyBbpD,EAAI,aACFmC,eAAgBf,EAAkBW,OAC/BqB,GA3BQ,6BA+BbpD,EAAOkC,IA/BM,iCAiCVlC,GAjCU,0DAAH,sDCYZ3B,GAAWC,aAAW,iBAAO,CACjC8R,eAAgB,CAEdjQ,WAAY,SACZpB,OAAQ,SAEVwF,KAAM,CACJ1F,MAAO,QAETwR,OAAQ,CACNC,WAAY,QAEdC,KAAM,CACJ1R,MAAO,QACPE,OAAQ,QACR0F,aAAc,MACdtE,WAAY,SAEdqQ,QAAS,CACP3R,MAAO,QACPE,OAAQ,SASV0R,UAAW,CACT5R,MAAO,QACPE,OAAQ,QAERM,OAAQ,QAEVmF,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET0P,KAAM,GAINmC,OAAQ,CACN/R,QAAS,gBA6GEgS,GAzGD,WACZ,IAAMjR,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAgC4C,KAAxBM,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,UAMZvC,EAAmBC,MAAaC,MAAM,CAC1CN,YAAaK,MAAaE,WAC1BL,SAAUG,MAAaE,aAGnBC,EAASC,YAAU,CACvBL,mBACAN,cAZoB,CACpBE,YAAa,GACbE,SAAU,IAWVQ,SAAS,WAAD,4BAAE,WAAOC,GAAP,uBAAAvD,EAAA,6DACJ7C,EAAO,CACTyF,YAAaW,EAAOX,YACpBE,SAAUS,EAAOT,UAHX,SAKauK,GAAMlQ,GALnB,QAKJoD,EALI,QAMKjB,iBAAmBf,EAAkBG,SAAU,EACnC6B,EAASpD,KAA1BqI,EADmD,EACnDA,MAAOvF,EAD4C,EAC5CA,MACbC,aAAa0F,QAAQ,QAAS3F,GAC9BC,aAAa0F,QAAQ,mBAAmB,GACxCH,EAASD,GACTD,GAAU,GACVnD,EAAQ4B,KAAK,OAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,MAfjB,2CAAF,mDAAC,KAoBX,OACE,eAAC3C,EAAA,EAAD,CAAMC,WAAS,EAACtE,UAAWJ,EAAQ0Q,eAAnC,UACE,eAACjM,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SACVrH,UAAWJ,EAAQ2Q,OALrB,UAOE,qBAAKvQ,UAAWJ,EAAQ8Q,QAAxB,SAEE,qBAAKI,IAAKL,GAAMM,IAAI,OAAO/Q,UAAWJ,EAAQ6Q,SAEhD,cAAChQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,oFAEF,sBAAM2F,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,SACE,eAACJ,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAMGvC,GACC,cAACoC,EAAA,EAAD,CAAOxG,QAAQ,SAAS0G,SAAS,QAAjC,SACGtC,IAGL,cAACyC,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,uEACR7K,EAAOsB,cAAc,iBAE3B,cAACF,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,gEACZlJ,KAAK,YACD3B,EAAOsB,cAAc,cAE3B,cAACI,EAAA,EAAD,CAAQC,KAAK,SAASpH,QAAQ,YAAYtB,MAAM,UAAhD,sFAKJ,eAACiF,EAAA,EAAD,CACErE,UAAWJ,EAAQgR,OACnBtM,WAAS,EACTxF,eAAe,WACfQ,WAAW,SAJb,UAME,cAACmB,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACE,mBACEV,UAAWJ,EAAQ6O,KACnBwC,KAAK,0BACL3E,OAAO,SACP4E,IAAI,aAJN,gCASF,qBAAKJ,IAAKH,GAAWI,IAAI,OAAO/Q,UAAWJ,EAAQ+Q,mBCnKrDpS,GAAWC,aAAW,iBAAO,CACjC2S,cAAe,CACbtS,QAAS,YAEXuS,KAAM,CACJhS,MAAO,UACPgM,WAAY,MACZ7L,OAAQ,QAEV8R,OAAQ,CACNjS,MAAO,eAyCIyB,GArCA,SAAC,GAA6B,IAA3BmE,EAA0B,EAA1BA,KAAM9E,EAAoB,EAApBA,KAAMP,EAAc,EAAdA,QACtBC,EAAUrB,KACVkB,EAAc,CAClB,CAAEkB,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMa,YACtC,CAAEJ,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WACxC,CAAEN,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,cACtC,CAAEP,MAAO,gEAAeC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMc,YACrC,CAAEL,MAAO,yFAAoBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,WAC1C,CAAER,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMkB,YACxC,CAAET,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMmB,cAE1C,OACE,eAACgD,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,eAACuF,EAAA,EAAD,CACErE,UAAWJ,EAAQuR,cACnB7M,WAAS,EACTxF,eAAe,aACfQ,WAAW,SACX8N,MAAI,EACJC,GAAI,GANN,UAQE,cAAC5M,EAAA,EAAD,CAAYT,UAAWJ,EAAQwR,KAAM1Q,QAAQ,KAA7C,gBACGsE,QADH,IACGA,OADH,EACGA,EAAMU,OAET,oBAAI1F,UAAWJ,EAAQyR,OAAvB,gBAAgCrM,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMsC,eAExC,cAACjD,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC,EAAD,CACEa,QAASA,EACTF,YAAaA,EACbC,MAAO,CAAEW,WAAY,mB,+BC3CzB9B,GAAWC,aAAW,iBAAO,CACjC8S,aAAc,CACZjR,WAAY,MACZjB,MAAO,QACP,UAAW,CACTiB,WAAY,QAGhBwE,QAAS,CACPtF,OAAQ,gBA6CGgS,GAzCK,SAAC,GAOd,IANLC,EAMI,EANJA,MAGAxN,GAGI,EALJyN,WAKI,EAJJC,cAII,EAHJ1N,aACAnB,EAEI,EAFJA,IACA6F,EACI,EADJA,QAEM9I,EAAUrB,KAEVoT,EAAW,uCAAG,4BAAA5O,EAAA,sEACGY,EAAc,kBAAD,OAAmB6N,EAAMjL,MADzC,UACdjD,EADc,OAElBzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,QAHhC,gCAMViH,EAAQ7F,GANE,OAOhBmB,IAPgB,2CAAH,qDAUjB,OACE,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAS,UAAKJ,EAAQiF,QAAb,YAAwBjF,EAAQ0R,cACzC5Q,QAAQ,YACRqH,QAAS4J,EAHX,gCAOA,cAAC9J,EAAA,EAAD,CACEE,QAAS/D,EACThE,UAAWJ,EAAQiF,QACnBnE,QAAQ,YACRtB,MAAM,UAJR,gD,SChCAb,GAAWC,aAAW,iBAAO,CACjCiG,KAAM,CACJ1F,MAAO,QAET2F,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,WACR8L,SAAU,OACVD,WAAY,OAEdwG,YAAa,CACXvR,WAAY,UACZjB,MAAO,QACP,UAAW,CACTiB,WAAY,gBAwJHwR,GAnJI,SAAC,GAOb,IANLL,EAMI,EANJA,MAGAxN,GAGI,EALJyN,WAKI,EAJJC,cAII,EAHJ1N,aACAnB,EAEI,EAFJA,IACA6F,EACI,EADJA,QAEA,EAA0BrD,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACM5F,EAAUrB,KACV4G,EAAUC,cACVK,EAAgB,CACpBsE,YAAayH,EAAMzH,YACnBD,YAAa0H,EAAM1H,YACnBgI,KAAMN,EAAMM,KACZC,YAAaP,EAAMO,YACnBC,KAAMC,GAAO,IAAIC,KAAKV,EAAMQ,OAAOG,OAAO,eAGtCC,EAASpM,MAAaC,MAAM,CAChC8D,YAAa/D,MACb8D,YAAa9D,MACb8L,KAAM9L,MACN+L,YAAa/L,MACbgM,KAAMhM,QAGFG,EAASC,YAAU,CACvBX,gBACAM,iBAAkBqM,EAClB/L,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACT6J,YAAazD,EAAOyD,YACpBD,YAAaxD,EAAOwD,YACpBgI,KAAMxL,EAAOwL,KACbC,YAAazL,EAAOyL,YACpBC,KAAM1L,EAAO0L,MAEfnS,QAAQC,IAAII,GARJ,SASauD,EAAM,kBAAD,OAAmB+N,EAAMjL,KAAOrG,GATlD,UASJoD,EATI,OAURzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,QAX1C,iCAYAiH,EAAQ7F,GAZR,OAaN2C,GAAW,GACXqB,YAAW,WACTrB,GAAW,KACV,KAhBG,wBAiBGlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,MAvBjB,4CAAF,mDAAC,KA4BX,OACE,sBAAMhH,UAAWJ,EAAQ6E,KAAM4B,SAAUF,EAAOc,aAAhD,SACE,eAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,6HAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,cAACE,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,iEACFrB,EAAOsB,cAAc,iBAE1BtB,EAAOyB,QAAQkC,aAAe3D,EAAOwB,OAAOmC,YAC3C,cAACrJ,EAAA,EAAD,CAAYrB,MAAM,YAAYsB,QAAQ,QAAtC,SACGyF,EAAOwB,OAAOmC,cAEf,KACJ,cAACvC,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,2DACFrB,EAAOsB,cAAc,iBAG3B,cAACF,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,mFACFrB,EAAOsB,cAAc,iBAE3B,cAACF,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,6EACFrB,EAAOsB,cAAc,aAG7B,cAACF,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,8CACFrB,EAAOsB,cAAc,SAJ3B,IAKEK,KAAK,UAEN3B,EAAOwB,OAAOqK,MAAQ7L,EAAOyB,QAAQoK,KACpC,cAACvR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAS,UAAKJ,EAAQiF,QAAb,YAAwBjF,EAAQgS,aACzClR,QAAQ,YACRoH,KAAK,SAHP,4CAOA,cAACD,EAAA,EAAD,CACEE,QAAS/D,EACThE,UAAWJ,EAAQiF,QACnBnE,QAAQ,YACRtB,MAAM,UAJR,qDCnKJb,GAAWC,aAAW,iBAAO,CACjCqK,UAAW,CACTzJ,MAAO,WAETiT,WAAY,CACVjT,MAAO,WAET0J,UAAW,CACTjK,QAAS,WAkGEyT,GA/FO,SAAC,GAOhB,IANLd,EAMI,EANJA,MAEAE,GAII,EALJvR,MAKI,EAJJuR,eACAD,EAGI,EAHJA,WACA5O,EAEI,EAFJA,IACA6F,EACI,EADJA,QAEA,EAAkCrD,oBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAoC7D,oBAAS,GAA7C,mBAAOkN,EAAP,KAAmBC,EAAnB,KACM5S,EAAUrB,KAMVkU,EAAyB,WAC7BD,GAAc,IAOVE,EAAwB,WAC5BxJ,GAAa,IAGf,OACE,eAACI,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,cAACC,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG4H,EAAMmB,aAET,cAACjJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,UACQ,OAAL4H,QAAK,IAALA,OAAA,EAAAA,EAAO1H,cAAe,MAEzB,cAACJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,UACQ,OAAL4H,QAAK,IAALA,OAAA,EAAAA,EAAOzH,cAAe,MAEzB,cAACL,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,UACQ,OAAL4H,QAAK,IAALA,OAAA,EAAAA,EAAOO,cAAe,MAEzB,cAACrI,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,UACQ,OAAL4H,QAAK,IAALA,OAAA,EAAAA,EAAOM,OAAQ,MAElB,cAACpI,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACG4H,QADH,IACGA,OADH,EACGA,EAAOoB,iBAEV,cAAClJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGqI,GAAO,IAAIC,KAAJ,OAASV,QAAT,IAASA,OAAT,EAASA,EAAOQ,MAAMa,sBAAsBV,OAClD,gBAGJ,cAACzI,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACK,EAAA,EAAD,CAAYlC,QAlCW,WAC3BmB,GAAa,IAiCT,SACE,cAAC,IAAD,CAAUlJ,UAAWJ,EAAQiJ,gBAGjC,cAACa,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACK,EAAA,EAAD,CAAYlC,QA/CY,WAC5ByK,GAAc,IA8CV,SACE,cAAC,KAAD,CAAYxS,UAAWJ,EAAQyS,iBAGnC,cAAC,EAAD,CACEtO,KAAMwO,EACNvO,YAAayO,EACb9R,MAAM,oKAHR,SAKE,cAAC,GAAD,CACE8Q,WAAYA,EACZD,MAAOA,EACPE,cAAeA,EACf1N,YAAayO,EACb/J,QAASA,EACT7F,IAAKA,MAGT,cAAC,EAAD,CACEkB,KAAMkF,EACNjF,YAAa0O,EACb/R,MAAM,sEAHR,SAKE,cAAC,GAAD,CACE8Q,WAAYA,EACZD,MAAOA,EACPE,cAAeA,EACf1N,YAAa0O,EACbhK,QAASA,EACT7F,IAAKA,UCjGTtE,GAAWC,aAAW,iBAAO,CACjCsM,MAAO,CACL/L,MAAO,MACPgM,SAAU,UAEZC,eAAgB,CACdC,UAAW,IACXlM,MAAO,QAEToM,YAAa,CACXC,WAAY,MACZC,SAAU,OACVhL,WAAY,SACZjB,MAAO,aA+EI0T,GA3EK,SAAC,GASd,IARLrB,EAQI,EARJA,WACAC,EAOI,EAPJA,cACA7O,EAMI,EANJA,IACA6F,EAKI,EALJA,QAEA6C,GAGI,EAJJ0C,KAII,EAHJ1C,OAEA2C,GACI,EAFJC,SAEI,EADJD,SAEMtO,EAAUrB,KAmBhB,OACE,cAAC,GAAD,UACE,eAAC6B,EAAA,EAAD,CAAOJ,UAAWJ,EAAQkL,MAA1B,UACE,cAACW,EAAA,EAAD,CAAgBzL,UAAWJ,EAAQoL,eAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,UAxBI,CACd,0DACA,uCACA,iCACA,uCACA,iCACA,uCACA,6CACA,iCACA,sBAgBqBrJ,KAAI,SAAC4L,EAAQ1L,GAAT,OACX,cAACuJ,EAAA,EAAD,CACE1J,UAAWJ,EAAQuL,YAEnBvB,MAAM,SAHR,SAKGiC,GAHI1L,UAQb,cAAC2L,EAAA,EAAD,UACG2F,EAAWxR,KAAI,SAACuR,EAAOrR,GACtB,OACE,cAAC,GAAD,CACEsR,WAAYA,EACZC,cAAeA,EAEfF,MAAOA,EACPrR,MAAOA,EACP0C,IAAKA,EACL6F,QAASA,GAJJvI,aAWjB,cAAC4S,GAAA,EAAD,CACEC,MAAOzH,EACP0H,iBAAe,EACfC,gBAAc,EACd7I,SA7CiB,SAACgC,EAAG4B,GAC3B,IAAIkF,EAAYtQ,EAChBsQ,GAAqB,gBAAYlF,GACjCC,EAAQD,GACRvF,EAAQyK,Y,UCpDN5U,GAAWC,aAAW,iBAAO,CACjCmQ,OAAQ,CACNpP,OAAQ,YAwCG6T,GApCI,SAAC,GAA2B,IAAzBpO,EAAwB,EAAxBA,KAAMhB,EAAkB,EAAlBA,YACpBpE,EAAUrB,KACV4G,EAAUC,cACViO,EAAU,uCAAG,sBAAAtQ,EAAA,sEACIY,EAAc,iBAAD,OAAkBqB,EAAKuB,MADxC,cAEJlE,iBAAmBf,EAAkBG,SAChD0D,EAAQ4B,KAAK,KAHE,2CAAH,qDAMhB,OACE,eAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,eAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAApB,yKACiC,4BAAIsE,EAAKU,OAD1C,iHAGA,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACEE,QAASsL,EACTrT,UAAWJ,EAAQ+O,OACnBjO,QAAQ,YACRtB,MAAM,YAJR,gCAQA,cAACyI,EAAA,EAAD,CACEE,QAAS/D,EACThE,UAAWJ,EAAQ+O,OACnBjO,QAAQ,YACRtB,MAAM,UAJR,mDCtBFb,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,YAEXU,OAAQ,CACNA,OAAQ,YAEV+T,YAAa,CACX3U,QAAS,OACT4U,iBAAkB,SAClBjU,WAAY,aACZC,OAAQ,YAEViI,MAAO,CACLpI,MAAO,QACPiM,SAAU,QAEZ3G,OAAQ,CACN3F,MAAO,aAqIIyU,GAjIC,SAAC,GAAmD,IAAjDvF,EAAgD,EAAhDA,KAAMvF,EAA0C,EAA1CA,QAAS1D,EAAiC,EAAjCA,KAAMyO,EAA2B,EAA3BA,OAAavF,GAAc,EAAnBrL,IAAmB,EAAdqL,SAC7CtO,EAAUrB,KAChB,EAAwB8G,mBAAS,CAAEqO,KAAM,KAAMrE,GAAI,KAAMsD,WAAY,KAArE,mBAAOzS,EAAP,KAAa2M,EAAb,KACA,EAAwBxH,qBAAxB,mBAAOtB,EAAP,KAAagL,EAAb,KAQM5B,EAAK,uCAAG,WAAOd,GAAP,SAAAtJ,EAAA,6DACZ8J,EAAQ,CAAE6G,KAAM,KAAMrE,GAAI,KAAMsD,WAAY,KAC5Cc,EAAO,iBAAD,OAAkBzO,EAAKuB,IAAvB,MAFM,SAGNmC,EAAQ,iBAAD,OAAkB1D,EAAKuB,IAAvB,iBAAmC0H,IAHpC,OAIZC,EAAQ,GAJI,2CAAH,sDAOLhB,EAAM,uCAAG,WAAOb,GAAP,eAAAtJ,EAAA,6DACToQ,EADS,wBACoBnO,EAAKuB,IADzB,KAETrG,EAAKwT,OAAMP,GAAqB,gBAAYjT,EAAKwT,OACjDxT,EAAKmP,KAAI8D,GAAqB,cAAUjT,EAAKmP,KAC7CnP,EAAKyS,aACPQ,GAAqB,sBAAkBjT,EAAKyS,aAC9Cc,EAAON,GACPA,GAAqB,eAAWlF,GAPnB,SAQPvF,EAAQyK,GARD,2CAAH,sDAWNnP,EAAc,WAClB+K,GAAQ,IAGV,OACE,eAAC1K,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,gBACfkB,UAAWJ,EAAQ+M,KACnBS,MAAI,EACJC,GAAI,GALN,UAOE,eAAChJ,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,aACfQ,WAAW,WACX8N,MAAI,EACJC,GAAI,GALN,UAOE,cAACG,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC/L,EAAA,EAAD,CACE3G,MAAOV,EAAKyS,WACZtI,SA/CW,SAACgC,GACpB,IAAI3G,EAAO2G,EAAEC,OAAO5G,KAChB9E,EAAQyL,EAAEC,OAAO1L,MACrBf,QAAQC,IAAI4F,EAAM9E,GAClBiM,EAAQ,2BAAK3M,GAAN,mBAAawF,EAAO9E,MA4CnB4D,GAAG,OACH9D,QAAQ,WACR8G,MAAM,0DACN9B,KAAK,aACL1F,UAAWJ,EAAQ8E,WAIvB,cAAC8I,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC,KAAD,CACEjJ,SAAU,SAAC2H,GACTnF,EAAQ,2BAAK3M,GAAN,IAAYwT,KAAM1B,MAE3BxK,MAAM,8CACNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACRgF,KAAK,OACL9E,MAAOV,EAAKwT,KACZI,mBAAmB,kIAGvB,cAACtG,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC,KAAD,CACEjJ,SAAU,SAAC2H,GACTnF,EAAQ,2BAAK3M,GAAN,IAAYmP,GAAI2C,MAEzBxK,MAAM,oDACNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACRE,MAAOV,EAAKmP,GACZyE,mBAAmB,8HACnBpO,KAAK,SAGT,cAACmC,EAAA,EAAD,CACEE,QAASmF,EACTlN,UAAWJ,EAAQL,OACnBmB,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACEE,QAASoF,EACTnN,UAAWJ,EAAQL,OACnBmB,QAAQ,YACRtB,MAAM,UAJR,oFASF,cAACiF,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,WACfQ,WAAW,WACX8N,MAAI,EACJC,GAAI,EALN,SAOE,cAACxF,EAAA,EAAD,CACEE,QAAS,kBAAMgH,GAAQ,IACvBrO,QAAQ,YACRtB,MAAM,YAHR,2IAQF,cAAC,EAAD,CAAO2E,KAAMA,EAAMC,YAAaA,EAAhC,SACE,cAAC,GAAD,CAAYA,YAAaA,EAAagB,KAAMA,UCpJ9CzG,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAkEEkV,GA9DF,WACX,IAAQvP,EAAOwP,cAAPxP,GACR,EAAwBa,mBAAS,GAAjC,mBAAO4I,EAAP,KAAaC,EAAb,KACA,EAA0B7I,mBAAS,GAAnC,mBAAOkG,EAAP,KAAc4C,EAAd,KACA,EAAwB9I,qBAAxB,mBAAOL,EAAP,KAAaiP,EAAb,KACA,EAA8B5O,oBAAS,GAAvC,mBAAO1F,EAAP,KAAgBqO,EAAhB,KACA,EAAsC3I,qBAAtC,mBAAO6O,EAAP,KAAoBC,EAApB,KACA,EAAoC9O,qBAApC,mBAAOoM,EAAP,KAAmBC,EAAnB,KACA,EAAsBrM,mBAAS,iBAAD,OAAkBb,EAAlB,MAA9B,mBAAO3B,EAAP,KAAY4Q,EAAZ,KACMtO,EAAUC,cACVxF,EAAUrB,KAEV6V,EAAcC,sBAAW,sBAC7B,0CAAAtR,EAAA,6DAAOF,EAAP,uDAA8B2B,GAC5B3E,QAAQC,IAAI+C,GACZmL,GAAW,GAFb,SAGuBxK,EAAIX,GAH3B,OAGMS,EAHN,OAIEzD,QAAQC,IAAIwD,GACZ0K,GAAW,GACP1K,EAASjB,iBAAmBf,EAAkBG,SAChDwS,EAAQ3Q,EAASpD,KAAK8E,MACtB0M,EAAcpO,EAASpD,KAAK8E,KAAKsP,QACjCH,EAAe7Q,EAASpD,KAAK4N,SAC7BK,EAAS7K,EAASpD,KAAKqL,QACdjI,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAdjB,2CAiBA,CAAC5B,EAASX,IAKZ,OAHAiE,qBAAU,WACR2L,MACC,CAAC5P,EAAIW,EAASiP,IAEf,eAAC/P,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC,GAAD,CAAQa,QAASA,EAASO,KAAMgU,EAAalP,KAAMA,IACnD,cAAC,GAAD,CACEkJ,QAASA,EACTD,KAAMA,EACNpL,IAAKA,EACL4Q,OAAQA,EACRzO,KAAMA,EACN0D,QAAS0L,IAEV3C,GACC,cAAC,GAAD,CACEvD,QAASA,EACTC,SAAUA,EACV5C,MAAOA,EACP0C,KAAMA,EACNpL,IAAKA,EACL4O,WAAYA,EACZ/I,QAAS0L,EACT1C,cAAeA,QCdV6C,GArDM,WACnB,MAAkClP,mBAAS,IAA3C,mBAAOiC,EAAP,KAAkBkN,EAAlB,KACA,EAAwBnP,qBAAxB,mBAAOL,EAAP,KAAaiP,EAAb,KACA,EAAoC5O,oBAAS,GAA7C,mBAAOoP,EAAP,KAAmBC,EAAnB,KAeMC,EAAO,uCAAG,WAAOxO,GAAP,iBAAApD,EAAA,0DACVuE,EADU,gCAEW9D,EAAI,2BAAD,OAA4B8D,IAF1C,OAENhE,EAFM,OAGZzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,UAC5CuD,EAAO1B,EAASpD,KAAK+E,MAAM,MAE7BgP,EAAQjP,GACRmB,EAAOsG,cAAc,SAAUzH,EAAKuB,MAR5B,sBAYZ0N,EAAQ,MAZI,2CAAH,sDAgBPW,EAAW,uCAAG,WAAO5P,EAAMmB,GAAb,SAAApD,EAAA,sDAClBkR,EAAQjP,GACRmB,EAAOsG,cAAc,SAAUzH,EAAKuB,KACpCiO,EAAaxP,EAAKsC,WAHA,2CAAH,wDAKjB,MAAO,CACLkN,eACAlN,YACA2M,UACAjP,OACA6P,qBAvC2B,SAACxI,GAC5B,IAAIzL,EAAQyL,EAAEC,OAAO1L,MACrB4T,EAAa5T,IAsCb+T,UACAF,aACAK,kBAjCwB,SAACzI,GACzBqI,GAAc,IAiCdK,iBAtCuB,SAAC1I,GACxBqI,GAAc,IAsCdE,gBCrCErW,GAAWC,aAAW,iBAAO,CACjCsM,MAAO,CACL/L,MAAO,MACPgM,SAAU,UAEZC,eAAgB,CACdC,UAAW,IACXlM,MAAO,QAEToM,YAAa,CACXC,WAAY,MACZC,SAAU,OACVhL,WAAY,SACZjB,MAAO,SAETsF,OAAQ,CACNnF,OAAQ,OAEVuJ,UAAW,CACTjK,QAAS,YAIPmW,GAAU,CACd,sEACA,sEACA,+FACA,6EAqKaC,GAlKI,SAAC,GAA0C,IAAxCL,EAAuC,EAAvCA,YAAa5Q,EAA0B,EAA1BA,YAAamC,EAAa,EAAbA,OACxCvG,EAAUrB,KAChB,EAA0B8G,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KACA,EAA0BG,mBAAS,GAAnC,mBAAOkG,EAAP,KAAc4C,EAAd,KACA,EAAwB9I,mBAAS,GAAjC,mBAAO4I,EAAP,KAAaC,EAAb,KACA,EAAsB7I,mBAAS,kBAA/B,mBAAOxC,EAAP,KAAY4Q,EAAZ,KACA,EAAwBpO,mBAAS,CAC/BiC,UAAW,GACX5B,KAAM,GACNC,YAAa,KAHf,mBAAOzF,EAAP,KAAa2M,EAAb,KAKM1H,EAAUC,cAEVoG,EAAQ,uCAAG,8BAAAzI,EAAA,6DACXmS,EADW,6BACoBjH,GAC/B/N,EAAKwF,OAAMwP,GAAe,gBAAYhV,EAAKwF,OAC3CxF,EAAKoH,YAAW4N,GAAe,qBAAiBhV,EAAKoH,YACrDpH,EAAKyF,cAAauP,GAAe,uBAAmBhV,EAAKyF,cAC7D8N,EAAOyB,GALQ,SAMM1R,EAAI0R,GANV,OAMX5R,EANW,OAOfzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,SAChDyD,EAAS5B,EAASpD,KAAK+E,OACvBkJ,EAAS7K,EAASpD,KAAKqL,QACdjI,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAdA,4CAAH,qDAkBRkG,EAAe,SAACZ,GACpB,IAAI3G,EAAO2G,EAAEC,OAAO5G,KAChB9E,EAAQyL,EAAEC,OAAO1L,MACrBiM,EAAQ,2BAAK3M,GAAN,mBAAawF,EAAO9E,KAC3B6S,EAAO,mBAOH0B,EAAgB,uCAAG,WAAO9I,EAAG4B,GAAV,SAAAlL,EAAA,6DACvBlD,QAAQC,IAAImO,GADW,SAEjBzC,EAAS,GAAD,OAAI3I,EAAJ,iBAAgBoL,IAFP,OAGvBC,EAAQD,GAHe,2CAAH,wDAWtB,OACE,eAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASQ,WAAW,SAAnD,UACE,eAAC+E,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASQ,WAAW,SAAnD,UACE,cAACiI,EAAA,EAAD,CACE8C,SAAU4C,EACVzF,MAAM,sEACNxH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRE,MAAOV,EAAKoH,UACZ5B,KAAK,cAEP,cAAC6B,EAAA,EAAD,CACE8C,SAAU4C,EACVzF,MAAM,sEACNxH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRgF,KAAK,OACL9E,MAAOV,EAAKwF,OAEd,cAAC6B,EAAA,EAAD,CACE8C,SAAU4C,EACVzF,MAAM,+FACNxH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRgF,KAAK,cACL9E,MAAOV,EAAKyF,cAEd,cAACkC,EAAA,EAAD,CACEE,QAASyD,EACTxL,UAAWJ,EAAQ8E,OACnBhE,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACEE,QAnDM,SAACsE,GACbQ,EAAQ,CAAEvF,UAAW,GAAI5B,KAAM,GAAIC,YAAa,MAmD1C3F,UAAWJ,EAAQ8E,OACnBhE,QAAQ,YACRtB,MAAM,UAJR,oFASF,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASQ,WAAW,SAAnD,SACE,cAAC,GAAD,UACE,eAACc,EAAA,EAAD,CAAOJ,UAAWJ,EAAQkL,MAA1B,UACE,cAACW,EAAA,EAAD,CAAgBzL,UAAWJ,EAAQoL,eAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,UACG0L,GAAQ/U,KAAI,SAAC4L,EAAQ1L,GAAT,OACX,cAACuJ,EAAA,EAAD,CACE1J,UAAWJ,EAAQuL,YAEnBvB,MAAM,SAHR,SAKGiC,GAHI1L,UAQb,cAAC2L,EAAA,EAAD,UACG7G,EAAMhF,KAAI,SAAC+E,EAAM7E,GAChB,OACE,eAACmJ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,WACLC,UAAW,EAHb,UAME,cAACC,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG5E,EAAKsC,YAER,cAACoC,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG5E,EAAKU,OAER,cAACgE,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG5E,EAAKW,cAER,cAAC+D,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAAC/B,EAAA,EAAD,CACEE,QAAS,kBAvFhB,SAAC/C,GAClB4P,EAAY5P,EAAMmB,GAClBnC,IAqFuCoR,CAAWpQ,IAC1BtE,QAAQ,YACRtB,MAAM,UAHR,0CAZG4F,EAAKuB,eA2BtB,cAACwM,GAAA,EAAD,CACEC,MAAOzH,EACP0H,iBAAe,EACfC,gBAAc,EACd7I,SAAU8K,eClLlB5W,GAAWC,aAAW,SAACC,GAAD,MAAY,CACtCgG,KAAM,CACJ1F,MAAO,QAET2F,OAAO,cACLrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OACNN,EAAM4W,YAAYC,KAAK,MAAQ,CAC9BvW,MAAO,QAGX8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEV4H,MAAO,CACLpI,MAAO,OAETwW,SAAU,CACRnW,MAAO,QACPgM,WAAY,OAEdoK,qBAAsB,CACpBzW,MAAO,OAET+F,MAAO,CACLF,OAAQ,qBA+OG6Q,GA3OF,WACX,IAAM7V,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAWI+O,KAVFvP,EADF,EACEA,KACAsC,EAFF,EAEEA,UACAuN,EAHF,EAGEA,qBACAF,EAJF,EAIEA,QACAV,EALF,EAKEA,QACAO,EANF,EAMEA,aACAC,EAPF,EAOEA,WACAK,EARF,EAQEA,kBACAC,EATF,EASEA,iBACAH,EAVF,EAUEA,YAGIc,EAAa,uCAAG,sBAAA3S,EAAA,sDACpB4R,EAAQxO,GADY,2CAAH,qDAIbV,EAAgB,CACpBqE,YAAa,GACb6L,OAAQ,GACR7P,UAAMoG,EACN6F,YAAa,GACbC,KAAMC,GAAO,IAAIC,MAAQC,OAAO,eAG5BpM,EAAmBC,MAAaC,MAAM,CAC1C6D,YAAa9D,MAAaE,WAC1ByP,OAAQ3P,MAAaE,WACrBJ,KAAME,MACN+L,YAAa/L,MAAa4P,QAAQC,OAAO,IACzC7D,KAAMhM,QAGFG,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACT4J,YAAaxD,EAAOwD,YACpB6L,OAAQrP,EAAOqP,OACf7P,KAAMQ,EAAOR,KACbkM,KAAM1L,EAAO0L,KACbD,YAAa8D,OAAOvP,EAAOyL,cAE7BlS,QAAQC,IAAII,GARJ,SASa0C,EAAK,uBAAwB1C,GAT1C,OASJoD,EATI,OAURzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAChDuE,EAAOgG,YACP8H,EAAQ,IACRO,EAAa,IACbhP,GAAW,GACXF,GAAS,GACTuB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,KACvBxB,GAAW,IA3BL,2CAAF,mDAAC,KAoCX,OACE,uBAAMa,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,UACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,mIAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,eAAChD,EAAA,EAAD,CACErE,UAAWJ,EAAQ4V,qBACnBlR,WAAS,EACTxF,eAAe,gBACfQ,WAAW,SAJb,UAME,cAACiI,EAAA,EAAD,CACE8C,SAAUwK,EACV7U,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,sEACN9B,KAAK,YACLoC,KAAK,SACLlH,MAAO0G,EACPI,WAAY,CACV1H,UAAWmG,EAAOwB,OAAOgO,OAAS/V,EAAQkF,MAAQ,IAEpD4H,OAAQgJ,IAEV,cAAC7N,EAAA,EAAD,CACEE,QAASgN,EACT3V,MAAM,UACNsB,QAAQ,YAHV,iGAQF,cAAC6G,EAAA,EAAD,CACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,sEACZtL,KAAK,WACLqD,UAAQ,EACRnI,MAAOoE,EAAOA,EAAKU,KAAO,GAC1BgC,WAAY,CACV1H,UAAWJ,EAAQ2V,YAGvB,cAAChO,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRoH,KAAK,SACLN,MAAM,iEACFrB,EAAOsB,cAAc,gBAL3B,IAMEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOmC,aAAe3D,EAAOyB,QAAQkC,YACxClK,EAAQkF,MACR,OAGTqB,EAAOwB,OAAOmC,aAAe3D,EAAOyB,QAAQkC,YAC3C,cAACrJ,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,kFACNM,KAAK,UACD3B,EAAOsB,cAAc,gBAL3B,IAMEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOoK,aAAe5L,EAAOyB,QAAQmK,YACxCnS,EAAQkF,MACR,OAGTqB,EAAOwB,OAAOoK,aAAe5L,EAAOyB,QAAQmK,YAC3C,cAACtR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAAC,KAAD,2BACM+G,EAAOsB,cAAc,SAD3B,IAEED,MAAM,6CAGNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACR2J,SA9Ge,SAAC2H,GACxB7L,EAAOsG,cAAc,OAAQuF,IA8GrB8D,aAAa,WACb9V,UAAWJ,EAAQ8E,OACnBoP,mBAAmB,iIAEpB3N,EAAOwB,OAAOqK,MAAQ7L,EAAOyB,QAAQoK,KACpC,cAACvR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,8CACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KAAOlG,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,wCAWN,cAAC,EAAD,CACE2E,KAAM0Q,EACNzQ,YAAa8Q,EACbnU,MAAM,uEAHR,SAKE,cAAC,GAAD,CACEwF,OAAQA,EACRyO,YAAaA,EACb5Q,YAAa8Q,UCnRjBvW,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAyBEkX,GArBD,WACZ,IAAQxN,EAAUL,KAAVK,MACFpD,EAAUC,cACVxF,EAAUrB,KAQhB,OAPAkK,qBAAU,WACJF,KACE,OAACA,QAAD,IAACA,OAAD,EAACA,EAAO+G,kBAAkB,OAAC/G,QAAD,IAACA,OAAD,EAACA,EAAO2B,eACpC/E,EAAQ4B,KAAK,QAGhB,QAACwB,QAAD,IAACA,OAAD,EAACA,EAAO+G,eAAR,OAAwB/G,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAO2B,aAAc/E,EAASoD,IAEvD,eAAClE,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,MAAM,cAA/B,2EAGA,cAAC,GAAD,Q,UCxBAb,GAAWC,cAAW,iBAAO,CACjCqG,QAAS,CACPtF,OAAQ,iBAyCGyW,GArCU,SAAC,GAA6B,IAA3B7P,EAA0B,EAA1BA,OAAQnC,EAAkB,EAAlBA,YAC5BpE,EAAUrB,KAEV0X,EAAO,uCAAG,sBAAAlT,EAAA,sEACRoD,EAAO+P,aADC,OAEdlS,IAFc,2CAAH,qDAKb,OACE,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAACuF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,MAAM,cAA/B,wJAIF,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACEE,QAASkO,EACTvV,QAAQ,YACRV,UAAWJ,EAAQiF,QACnBzF,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACEE,QAAS/D,EACTtD,QAAQ,YACRV,UAAWJ,EAAQiF,QACnBzF,MAAM,UAJR,mDCdFb,GAAWC,aAAW,SAACC,GAAD,MAAY,CACtCgG,KAAM,CACJ1F,MAAO,QAET2F,OAAO,cACLrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OACNN,EAAM4W,YAAYC,KAAK,MAAQ,CAC9BvW,MAAO,QAGX8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEV4H,MAAO,CACLpI,MAAO,OAETwW,SAAU,CACRnW,MAAO,QACPgM,WAAY,OAEdoK,qBAAsB,CACpBzW,MAAO,OAET+F,MAAO,CACLF,OAAQ,qBA4QG6Q,GAxQF,WACX,IAAM7V,EAAUrB,KACV4G,EAAUC,cAGhB,EAAsCC,oBAAS,GAA/C,mBAAO8Q,EAAP,KAAoBC,EAApB,KACA,EAA0B/Q,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAWI+O,KAVFvP,EADF,EACEA,KACAsC,EAFF,EAEEA,UACAuN,EAHF,EAGEA,qBACAF,EAJF,EAIEA,QACAV,EALF,EAKEA,QACAO,EANF,EAMEA,aACAC,EAPF,EAOEA,WACAK,EARF,EAQEA,kBACAC,EATF,EASEA,iBACAH,EAVF,EAUEA,YAGIc,EAAa,uCAAG,sBAAA3S,EAAA,sDACpB4R,EAAQxO,GADY,2CAAH,qDAIbV,EAAgB,CACpBsE,YAAa,GACb4L,OAAQ,GACR7P,UAAMoG,EACN6F,YAAa,GACbC,KAAMC,GAAO,IAAIC,MAAQC,OAAO,eAG5BpM,EAAmBC,MAAaC,MAAM,CAC1C8D,YAAa/D,MAAaE,WAC1ByP,OAAQ3P,MAAaE,WACrBJ,KAAME,MACN+L,YAAa/L,MAAa4P,QAAQC,OAAO,IACzC7D,KAAMhM,QAGFG,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACT6J,YAAazD,EAAOyD,YACpB4L,OAAQrP,EAAOqP,OACf7P,KAAMQ,EAAOR,KACbkM,KAAM1L,EAAO0L,KACbD,YAAa8D,OAAOvP,EAAOyL,cANrB,SASanP,EAAK,uBAAwB1C,GAT1C,OASJoD,EATI,OAURzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAChDuE,EAAOgG,YACP8H,EAAQ,IACRO,EAAa,IACbhP,GAAW,GACXF,GAAS,GACTuB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,KACvBxB,GAAW,IA3BL,2CAAF,mDAAC,KAoCL6Q,EAAqB,WACzBD,GAAe,IAGXnP,EAAY,uCAAG,WAAOoF,GAAP,eAAAtJ,EAAA,yDACnBsJ,EAAEiK,iBACIxM,EAFa,OAEC9E,QAFD,IAECA,OAFD,EAECA,EAAM8E,cACN3D,EAAOsB,cAAc,eAAe7G,MACtCkJ,GAJC,uBAKjBsM,GAAe,GALE,0BAQnBjQ,EAAOc,eARY,2CAAH,sDAWlB,OACE,uBAAMZ,SAAUY,EAAcjH,UAAWJ,EAAQ6E,KAAjD,UACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,2GAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,eAAChD,EAAA,EAAD,CACErE,UAAWJ,EAAQ4V,qBACnBlR,WAAS,EACTxF,eAAe,gBACfQ,WAAW,SAJb,UAME,cAACiI,EAAA,EAAD,CACE8C,SAAUwK,EACV7U,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,sEACN9B,KAAK,YACL9E,MAAO0G,EACPI,WAAY,CACV1H,UAAWmG,EAAOwB,OAAOgO,OAAS/V,EAAQkF,MAAQ,IAEpDgD,KAAK,SACL4E,OAAQgJ,IAETvP,EAAOwB,OAAOgO,OACb,cAAClV,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACyI,EAAA,EAAD,CACEE,QAASgN,EACT3V,MAAM,UACNsB,QAAQ,YAHV,iGAQF,cAAC6G,EAAA,EAAD,CACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,sEACZtL,KAAK,WACLqD,UAAQ,EACRnI,MAAOoE,EAAOA,EAAKU,KAAO,GAC1BgC,WAAY,CACV1H,UAAWJ,EAAQ2V,YAGvB,cAAChO,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,2DACFrB,EAAOsB,cAAc,gBAJ3B,IAKEK,KAAK,SACLJ,WAAY,CACV1H,UACEmG,EAAOwB,OAAOoC,aAAe5D,EAAOyB,QAAQmC,YACxCnK,EAAQkF,MACR,OAGTqB,EAAOwB,OAAOoC,aAAe5D,EAAOyB,QAAQmC,YAC3C,cAACtJ,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,kFACNM,KAAK,UACD3B,EAAOsB,cAAc,iBAE1BtB,EAAOwB,OAAOoK,aAAe5L,EAAOyB,QAAQmK,YAC3C,cAACtR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KASJ,cAAC,KAAD,yBACE0W,aAAa,WACb9V,UAAWJ,EAAQ8E,QACfyB,EAAOsB,cAAc,SAH3B,IAIED,MAAM,6CAGNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACR2J,SAtIe,SAAC2H,GACxB7L,EAAOsG,cAAc,OAAQuF,IAsIrB8B,mBAAmB,iIAEpB3N,EAAOwB,OAAOqK,MAAQ7L,EAAOyB,QAAQoK,KACpC,cAACvR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KAEJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,8CACFrB,EAAOsB,cAAc,UAE1BtB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,wCAWN,cAAC,EAAD,CACE2E,KAAM0Q,EACNzQ,YAAa8Q,EACbnU,MAAM,uEAHR,SAKE,cAAC,GAAD,CACEwF,OAAQA,EACRyO,YAAaA,EACb5Q,YAAa8Q,MAGjB,cAAC,EAAD,CACE/Q,KAAMoS,EACNnS,YAAaqS,EACb1V,MAAK,oRAA2DqE,QAA3D,IAA2DA,OAA3D,EAA2DA,EAAM8E,YAAjE,6BAHP,SAKE,cAAC,GAAD,CAAkB3D,OAAQA,EAAQnC,YAAaqS,UCjTjD9X,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAyBE0X,GArBD,WACZ,IAAQhO,EAAUL,KAAVK,MACFpD,EAAUC,cACVxF,EAAUrB,KAQhB,OAPAkK,qBAAU,WACJF,IACGA,EAAMgH,gBAAmBhH,EAAM2B,cAClC/E,EAAQ4B,KAAK,QAGhB,QAACwB,QAAD,IAACA,OAAD,EAACA,EAAOgH,eAAR,OAAwBhH,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAO2B,aAAc/E,EAASoD,IAEvD,eAAClE,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,MAAM,cAA/B,+DAGA,cAAC,GAAD,QCRAb,GAAWC,aAAW,SAACC,GAAD,MAAY,CACtCgG,KAAM,CACJ1F,MAAO,QAET2F,OAAO,cACLrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OACNN,EAAM4W,YAAYC,KAAK,MAAQ,CAC9BvW,MAAO,QAGX8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEV4H,MAAO,CACLpI,MAAO,OAETwW,SAAU,CACRnW,MAAO,QACPgM,WAAY,OAEdoK,qBAAsB,CACpBzW,MAAO,OAET+F,MAAO,CACLF,OAAQ,qBAqPG6Q,GAjPF,WACX,IAAM7V,EAAUrB,KACV4G,EAAUC,cAGhB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAWI+O,KAVFvP,EADF,EACEA,KACAsC,EAFF,EAEEA,UACAuN,EAHF,EAGEA,qBACAF,EAJF,EAIEA,QACAV,EALF,EAKEA,QACAO,EANF,EAMEA,aACAC,EAPF,EAOEA,WACAK,EARF,EAQEA,kBACAC,EATF,EASEA,iBACAH,EAVF,EAUEA,YA8BIc,EAAa,uCAAG,sBAAA3S,EAAA,sDACpB4R,EAAQxO,GADY,2CAAH,qDAQbV,EAAgB,CACpBqM,KAAM,GACN6D,OAAQ,GACR7P,KAAM,GACNkM,KAAMC,GAAO,IAAIC,MAAQC,OAAO,eAG5BpM,EAAmBC,MAAaC,MAAM,CAC1C6L,KAAM9L,MAAaE,WACnByP,OAAQ3P,MAAaE,WACrBJ,KAAME,MACNgM,KAAMhM,QAGFG,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACT4R,KAAMxL,EAAOwL,KACb6D,OAAQrP,EAAOqP,OACf7P,KAAMQ,EAAOR,WAAQoG,EACrB8F,KAAM1L,EAAO0L,MAEfnS,QAAQC,IAAII,GAPJ,SAQa0C,EAAK,sBAAuB1C,GARzC,OAQJoD,EARI,OASRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAChDuE,EAAOgG,YACP8H,EAAQ,IACRO,EAAa,IACbhP,GAAW,GACXF,GAAS,GACTuB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,KACvBxB,GAAW,IA1BL,2CAAF,mDAAC,KA+BX,OACE,uBAAMa,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,UACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,uHAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,eAAChD,EAAA,EAAD,CACErE,UAAWJ,EAAQ4V,qBACnBlR,WAAS,EACTxF,eAAe,gBACfQ,WAAW,SAJb,UAME,cAACiI,EAAA,EAAD,CACE8C,SAAUwK,EACV7U,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,sEACN9B,KAAK,YACLoC,KAAK,SACLlH,MAAO0G,EACPI,WAAY,CACV1H,UAAWmG,EAAOwB,OAAOgO,OAAS/V,EAAQkF,MAAQ,IAEpD4H,OAAQgJ,IAEV,cAAC7N,EAAA,EAAD,CACEE,QAASgN,EACT3V,MAAM,UACNsB,QAAQ,YAHV,iGAQF,cAAC6G,EAAA,EAAD,CACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,sEACZtL,KAAK,WACLqD,UAAQ,EACRnI,MAAOoE,EAAOA,EAAKU,KAAO,GAC1BgC,WAAY,CACV1H,UAAWJ,EAAQ2V,YAGvB,cAAChO,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRoH,KAAK,SACLN,MAAM,2DACFrB,EAAOsB,cAAc,SAL3B,IAMEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOmK,MAAQ3L,EAAOyB,QAAQkK,KAAOlS,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAOmK,MAAQ3L,EAAOyB,QAAQkK,KACpC,cAACrR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAAC,KAAD,yBACE0W,aAAa,WACb9V,UAAWJ,EAAQ8E,QACfyB,EAAOsB,cAAc,SAH3B,IAIED,MAAM,6CAGNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACR2J,SA5Ie,SAAC2H,GACxB7L,EAAOsG,cAAc,OAAQuF,IA4IrB8B,mBAAmB,iIAEpB3N,EAAOwB,OAAOqK,MAAQ7L,EAAOyB,QAAQoK,KACpC,cAACvR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,8CACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KAAOlG,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,wCAWN,cAAC,EAAD,CACE2E,KAAM0Q,EACNzQ,YAAa8Q,EACbnU,MAAM,uEAHR,SAKE,cAAC,GAAD,CACEwF,OAAQA,EACRyO,YAAaA,EACb5Q,YAAa8Q,UCzRjBvW,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAyBE2X,GArBF,WACX,IAAQjO,EAAUL,KAAVK,MACFpD,EAAUC,cACVxF,EAAUrB,KAQhB,OAPAkK,qBAAU,WACJF,KACE,OAACA,QAAD,IAACA,OAAD,EAACA,EAAOiH,kBAAkB,OAACjH,QAAD,IAACA,OAAD,EAACA,EAAO2B,eACpC/E,EAAQ4B,KAAK,QAGhB,QAACwB,QAAD,IAACA,OAAD,EAACA,EAAOiH,eAAR,OAAwBjH,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAO2B,aAAc/E,EAASoD,IAEvD,eAAClE,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,MAAM,cAA/B,mDAGA,cAAC,GAAD,QCRAb,GAAWC,aAAW,SAACC,GAAD,MAAY,CACtCgG,KAAM,CACJ1F,MAAO,QAET2F,OAAO,cACLrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OACNN,EAAM4W,YAAYC,KAAK,MAAQ,CAC9BvW,MAAO,QAGX8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEV4H,MAAO,CACLpI,MAAO,OAETwW,SAAU,CACRnW,MAAO,QACPgM,WAAY,OAEdoK,qBAAsB,CACpBzW,MAAO,OAET+F,MAAO,CACLF,OAAQ,qBA0NG6Q,GAtNF,WACX,IAAM7V,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAWI+O,KAVFvP,EADF,EACEA,KACAsC,EAFF,EAEEA,UACAuN,EAHF,EAGEA,qBACAF,EAJF,EAIEA,QACAV,EALF,EAKEA,QACAO,EANF,EAMEA,aACAC,EAPF,EAOEA,WACAK,EARF,EAQEA,kBACAC,EATF,EASEA,iBACAH,EAVF,EAUEA,YAGIc,EAAa,uCAAG,sBAAA3S,EAAA,sDACpB4R,EAAQxO,GADY,2CAAH,qDAIbV,EAAgB,CACpBgR,OAAQ,GACRd,OAAQ,GACR7P,KAAM,GACNkM,KAAMC,GAAO,IAAIC,MAAQC,OAAO,eAG5BpM,EAAmBC,MAAaC,MAAM,CAC1CwQ,OAAQzQ,MAAaE,WACrByP,OAAQ3P,MAAaE,WACrBJ,KAAME,MACNgM,KAAMhM,QAGFG,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACTuW,OAAQnQ,EAAOmQ,OACfd,OAAQrP,EAAOqP,OACf3D,KAAM1L,EAAO0L,KACblM,KAAMQ,EAAOR,WAAQoG,GAEvBrM,QAAQC,IAAII,GAPJ,SAQa0C,EAAK,sBAAuB1C,GARzC,OAQJoD,EARI,OASRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAChDuE,EAAOgG,YACP8H,EAAQ,IACRO,EAAa,IACbhP,GAAW,GACXF,GAAS,GACTuB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,KACvBxB,GAAW,IA1BL,2CAAF,mDAAC,KAmCX,OACE,uBAAMa,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,UACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,uHAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,eAAChD,EAAA,EAAD,CACErE,UAAWJ,EAAQ4V,qBACnBlR,WAAS,EACTxF,eAAe,gBACfQ,WAAW,SAJb,UAME,cAACiI,EAAA,EAAD,CACE8C,SAAUwK,EACV7U,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,sEACN9B,KAAK,YACLoC,KAAK,SACLlH,MAAO0G,EACPI,WAAY,CACV1H,UAAWmG,EAAOwB,OAAOgO,OAAS/V,EAAQkF,MAAQ,IAEpD4H,OAAQgJ,IAEV,cAAC7N,EAAA,EAAD,CACEE,QAASgN,EACT3V,MAAM,UACNsB,QAAQ,YAHV,iGAQF,cAAC6G,EAAA,EAAD,CACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRsQ,YAAY,sEACZtL,KAAK,WACLqD,UAAQ,EACRnI,MAAOoE,EAAOA,EAAKU,KAAO,GAC1BgC,WAAY,CACV1H,UAAWJ,EAAQ2V,YAGvB,cAAChO,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACRoH,KAAK,SACLN,MAAM,yCACFrB,EAAOsB,cAAc,WAL3B,IAMEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAO8O,QAAUtQ,EAAOyB,QAAQ6O,OACnC7W,EAAQkF,MACR,OAGTqB,EAAOwB,OAAO8O,QAAUtQ,EAAOyB,QAAQ6O,OACtC,cAAChW,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAAC,KAAD,yBACE0W,aAAa,WACb9V,UAAWJ,EAAQ8E,QACfyB,EAAOsB,cAAc,SAH3B,IAIED,MAAM,6CAGNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACR2J,SA9Fe,SAAC2H,GACxB7L,EAAOsG,cAAc,OAAQuF,IA8FrB8B,mBAAmB,iIAEpB3N,EAAOwB,OAAOqK,MAAQ7L,EAAOyB,QAAQoK,KACpC,cAACvR,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,8CACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KAAOlG,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAO7B,MAAQK,EAAOyB,QAAQ9B,KACpC,cAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,wCAWN,cAAC,EAAD,CACE2E,KAAM0Q,EACNzQ,YAAa8Q,EACbnU,MAAM,uEAHR,SAKE,cAAC,GAAD,CACEwF,OAAQA,EACRyO,YAAaA,EACb5Q,YAAa8Q,UC9PjBvW,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAyBE6X,GArBF,WACX,IAAQnO,EAAUL,KAAVK,MACFpD,EAAUC,cACVxF,EAAUrB,KAQhB,OAPAkK,qBAAU,WACJF,KACE,OAACA,QAAD,IAACA,OAAD,EAACA,EAAOkH,iBAAiB,OAAClH,QAAD,IAACA,OAAD,EAACA,EAAO2B,eACnC/E,EAAQ4B,KAAK,QAGhB,QAACwB,QAAD,IAACA,OAAD,EAACA,EAAOkH,cAAR,OAAuBlH,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAO2B,aAAc/E,EAASoD,IAEtD,eAAClE,EAAA,EAAD,CAAMrE,UAAWJ,EAAQ+M,KAAMrI,WAAS,EAACxF,eAAe,SAAxD,UACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,MAAM,cAA/B,4EAGA,cAAC,GAAD,QCbSyB,GAZA,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACVT,EAAc,CAClB,CAAEkB,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMa,YACtC,CAAEJ,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WACxC,CAAEN,MAAO,sEAAgBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,cACtC,CAAEP,MAAO,gEAAeC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMc,YACrC,CAAEL,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMkB,YACxC,CAAET,MAAO,kFAAkBC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMmB,cAE1C,OAAO,cAAC,EAAD,CAAO5B,YAAaA,KCPvBlB,GAAWC,aAAW,iBAAO,CACjCqK,UAAW,CACTzJ,MAAO,WAET0J,UAAW,CACTjK,QAAS,YAuCE8X,GAnCQ,SAAC,GAAwC,EAAtCrC,OAAuC,IAAD,EAA9B9C,EAA8B,EAA9BA,MAC1B5R,GADwD,EAAvBgX,UAAuB,EAAZzW,MAClC5B,MAEhB,OACE,eAAC+K,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,cAACC,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG4H,EAAMmB,aAET,cAACjJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,mBACG4H,EAAMmE,cADT,aACG,EAAcjQ,OAEjB,cAACgE,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACG4H,EAAM1H,cAET,cAACJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACG4H,QADH,IACGA,OADH,EACGA,EAAOzH,cAEV,cAACL,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACG4H,QADH,IACGA,OADH,EACGA,EAAOO,cAEV,cAACrI,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACG4H,QADH,IACGA,OADH,EACGA,EAAOM,OAEV,cAACpI,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACG4H,QADH,IACGA,OADH,EACGA,EAAOoB,iBAEV,cAAClJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGqI,GAAO,IAAIC,KAAJ,OAASV,QAAT,IAASA,OAAT,EAASA,EAAOQ,MAAMa,sBAAsBV,OAClD,oBC7BJ5T,GAAWC,aAAW,iBAAO,CACjCsM,MAAO,CACL/L,MAAO,MACPgM,SAAU,UAEZC,eAAgB,CACdC,UAAW,IACXlM,MAAO,QAEToM,YAAa,CACXC,WAAY,MACZC,SAAU,OACVhL,WAAY,SACZjB,MAAO,aAII,SAAS0T,GAAT,GAOX,IANF5E,EAMC,EANDA,QACAoG,EAKC,EALDA,OACAsC,EAIC,EAJDA,UACArL,EAGC,EAHDA,MACAsL,EAEC,EAFDA,UACAhU,EACC,EADDA,IAEMjD,EAAUrB,KAYV4W,EAAgB,uCAAG,WAAO9I,EAAG4B,GAAV,SAAAlL,EAAA,6DACvBmL,EAAQD,GADe,SAEjB4I,EAAU,GAAD,OAAIhU,EAAJ,iBAAgBoL,IAFR,2CAAH,wDAKtB,OACE,cAAC,GAAD,UACE,cAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,eAACsB,EAAA,EAAD,CAAOJ,UAAWJ,EAAQkL,MAA1B,UACE,cAACW,EAAA,EAAD,CAAgBzL,UAAWJ,EAAQoL,eAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,UAvBE,CACd,oDACA,sEACA,uCACA,iCACA,uCACA,iCACA,uCACA,8CAgBuBrJ,KAAI,SAAC4L,EAAQ1L,GAAT,OACX,cAACuJ,EAAA,EAAD,CACE1J,UAAWJ,EAAQuL,YAEnBvB,MAAM,SAHR,SAKGiC,GAHI1L,UAQb,cAAC2L,EAAA,EAAD,UACGwI,EAAOrU,KAAI,SAACuR,EAAOrR,GAClB,OACE,cAAC,GAAD,CACEmU,OAAQA,EACRsC,UAAWA,EAEXpF,MAAOA,EACPrR,MAAOA,GAFFA,aAUjB,cAAC4S,GAAA,EAAD,CACEC,MAAOzH,EACP0H,iBAAe,EACfC,gBAAc,EACd7I,SAAU8K,WCrFtB,IAAM5W,GAAWC,aAAW,SAACC,GAAD,MAAY,CACtCkO,KAAK,cACH9N,QAAS,YACRJ,EAAM4W,YAAYC,KAAK,MAAQ,CAC9BxW,eAAgB,SAChBQ,WAAY,SACZD,cAAe,WAGnBE,OAAQ,CACNA,OAAQ,aAEV+T,YAAa,CACX3U,QAAS,OACT4U,iBAAkB,SAClBjU,WAAY,aACZC,OAAQ,aAEViI,MAAO,CACLpI,MAAO,QACPiM,SAAU,QAEZ3G,OAAQ,CACN3F,MAAO,aA2GIyU,GAvGC,SAAC,GAAoC,IAAlC9K,EAAiC,EAAjCA,QAASuF,EAAwB,EAAxBA,KAAWwF,GAAa,EAAlB5Q,IAAkB,EAAb4Q,QAC/B7T,EAAUrB,KAChB,EAAwB8G,mBAAS,CAC/BqO,KAAM,KACNrE,GAAI,KACJsD,WAAY,KAHd,mBAAOzS,EAAP,KAAa2M,EAAb,KAaMM,EAAK,uCAAG,WAAOd,GAAP,SAAAtJ,EAAA,6DACZ8J,EAAQ,CAAE6G,KAAM,KAAMrE,GAAI,KAAMsD,WAAY,KAC5Cc,EAAO,mBAFK,SAGN/K,IAHM,2CAAH,sDAMLwE,EAAM,uCAAG,WAAOb,GAAP,eAAAtJ,EAAA,6DACTF,EADS,kBAET3C,EAAKwT,OAAM7Q,GAAS,gBAAY3C,EAAKwT,OACrCxT,EAAKmP,KAAIxM,GAAS,cAAU3C,EAAKmP,KACjCnP,EAAKyS,aAAY9P,GAAS,sBAAkB3C,EAAKyS,aACrD9S,QAAQC,IAAI+C,GACZ4Q,EAAO5Q,GACPA,GAAS,gBAAYoL,GAPR,SAQPvF,EAAQ7F,GARD,2CAAH,sDAWZ,OACE,eAACwB,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,aACfQ,WAAW,WACXU,UAAWJ,EAAQ+M,KACnBS,MAAI,EACJC,GAAI,GANN,UAQE,cAACG,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC/L,EAAA,EAAD,CACE3G,MAAOV,EAAKyS,WACZtI,SApCa,SAACgC,GACpB,IAAI3G,EAAO2G,EAAEC,OAAO5G,KAChB9E,EAAQyL,EAAEC,OAAO1L,MACrBf,QAAQC,IAAI4F,EAAM9E,GAClBiM,EAAQ,2BAAK3M,GAAN,mBAAawF,EAAO9E,MAiCrB4D,GAAG,OACH9D,QAAQ,WACR8G,MAAM,0DACN9B,KAAK,aACL1F,UAAWJ,EAAQ8E,WAIvB,cAAC8I,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC,KAAD,CACEjJ,SAAU,SAAC2H,GACTnF,EAAQ,2BAAK3M,GAAN,IAAYwT,KAAM1B,MAE3BxK,MAAM,8CACNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACRgF,KAAK,OACL9E,MAAOV,EAAKwT,KACZI,mBAAmB,kIAGvB,cAACtG,GAAA,EAAD,CAAaxN,UAAWJ,EAAQ0T,YAAhC,SACE,cAAC,KAAD,CACEjJ,SAAU,SAAC2H,GACTnF,EAAQ,2BAAK3M,GAAN,IAAYmP,GAAI2C,MAEzBxK,MAAM,oDACNmM,sBAAsB,EACtBC,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,eAAesM,KACxC1B,OAAO,aACPzR,QAAQ,SACRE,MAAOV,EAAKmP,GACZyE,mBAAmB,8HACnBpO,KAAK,SAGT,cAACmC,EAAA,EAAD,CACEE,QAASmF,EACTlN,UAAWJ,EAAQL,OACnBmB,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACEE,QAASoF,EACTnN,UAAWJ,EAAQL,OACnBmB,QAAQ,YACRtB,MAAM,UAJR,qFCvHAb,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,gBAgDEiY,GA7CA,WACb,MAA4BzR,mBAAS,IAArC,mBAAOiP,EAAP,KAAesC,EAAf,KACA,EAA8BvR,mBAAS,IAAvC,mBAAOyI,EAAP,KAAgBC,EAAhB,KACA,EAAwB1I,mBAAS,GAAjC,mBAAO4I,EAAP,KAAaC,EAAb,KACA,EAAsB7I,mBAAS,mBAA/B,mBAAOxC,EAAP,KAAY4Q,EAAZ,KACA,EAA0BpO,mBAAS,GAAnC,mBAAOkG,EAAP,KAAc4C,EAAd,KACMhJ,EAAUC,cACVxF,EAAUrB,KAEVsY,EAAYxC,sBAAW,sBAC3B,4CAAAtR,EAAA,6DAAOF,EAAP,+BAAa,iBAAb,SACuBW,EAAIX,GAD3B,QACMS,EADN,QAEejB,iBAAmBf,EAAkBG,SAChDsM,EAAWzK,EAASpD,KAAK4N,SACzB8I,EAAUtT,EAASpD,KAAKoU,OAAOA,QAC3BlG,EAAcC,KAAKC,KAAKhL,EAASpD,KAAKoU,OAAOyC,YAAc,GAC/D5I,EAASC,IACA9K,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAVjB,2CAaA,CAAC5B,IAKH,OAHAsD,qBAAU,WACRoO,MACC,CAAC1R,EAAS0R,IAEX,eAACxS,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASkB,UAAWJ,EAAQ+M,KAA3D,UACE,cAAC,GAAD,CAAQzM,KAAM4N,IACd,cAAC,GAAD,CAASjL,IAAKA,EAAK4Q,OAAQA,EAAQxF,KAAMA,EAAMvF,QAASmO,IACxD,cAAC,GAAD,CACEA,UAAWA,EACXvC,OAAQA,EACRsC,UAAWA,EACXrL,MAAOA,EACP2C,QAASA,EACTrL,IAAKA,EACL4Q,OAAQA,Q,4DCnCVlV,GAAWC,aAAW,iBAAO,CACjCiG,KAAM,CACJ1F,MAAO,QAET2F,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEVuF,MAAO,CACLF,OAAQ,iBAEVoS,kBAAmB,CACjBnY,QAAS,gBA4QEoY,GAzQI,SAAC,GAA+C,IAA7C1O,EAA4C,EAA5CA,MAAO2O,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAWnT,EAAkB,EAAlBA,YACxCpE,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAgB,CACpBC,KAAM6C,EAAM7C,KACZC,YAAa4C,EAAM5C,YACnBE,SAAU0C,EAAM1C,SAChBqE,aAAc3B,EAAM2B,aACpBC,eAAgB5B,EAAM4B,eACtBmF,eAAgB/G,EAAM+G,eACtBC,eAAgBhH,EAAMgH,eACtBC,eAAgBjH,EAAMiH,eACtBC,cAAelH,EAAMkH,eAGjB1J,EAAmBC,MAAaC,MAAM,CAC1CP,KAAMM,MAAaE,WACnBP,YAAaK,MAAaE,WAC1BL,SAAUG,MAAaE,WACvBgE,aAAclE,MAAc4P,SAAQ,GACpCzL,eAAgBnE,MAAc4P,SAAQ,GACtCtG,eAAgBtJ,MAAc4P,SAAQ,GACtCrG,eAAgBvJ,MAAc4P,SAAQ,GACtCpG,eAAgBxJ,MAAc4P,SAAQ,GACtCnG,cAAezJ,MAAc4P,SAAQ,KAGjCzP,EAASC,YAAU,CACvBL,mBACAN,gBACAY,SAAS,WAAD,4BAAE,WAAOC,GAAP,uBAAAvD,EAAA,6DACJ7C,EAAO,CACTwF,KAAMY,EAAOZ,KACbC,YAAaW,EAAOX,YACpBE,SAAUS,EAAOT,SACjBqE,aAAc5D,EAAO4D,aACrBC,eAAgB7D,EAAO6D,eACvBmF,eAAgBhJ,EAAOgJ,eACvBC,eAAgBjJ,EAAOiJ,eACvBC,eAAgBlJ,EAAOkJ,eACvBC,cAAenJ,EAAOmJ,eAExB5P,QAAQC,IAAII,GAZJ,SAaauD,EAAM,WAAD,OAAY8E,EAAMhC,KAAOrG,GAb3C,OAaJoD,EAbI,OAcRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBG,SAC5C2V,EADqD,YACrCF,GAChBG,EAAW/T,EAASpD,KAAKqI,MACzB+O,EAAgBF,EAAUzQ,WAAU,SAACC,GAAD,OAAOA,EAAEL,MAAQgC,EAAMhC,OAC/D6Q,EAAUE,GAAiBD,EAC3BF,EAAU,YAAIC,IACd5R,GAAW,GACXqB,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,MA/BjB,2CAAF,mDAAC,KAoCX,OACE,sBAAMX,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,mIAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,cAACE,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,iEACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KAAO9F,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KACpC,cAACjF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YACxC/F,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,gGACFrB,EAAOsB,cAAc,iBAE1BtB,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YAC3C,cAAClF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACrCjG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,qFACFrB,EAAOsB,cAAc,cAE1BtB,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACxC,cAACpF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,eAACiF,EAAA,EAAD,CACErE,UAAWJ,EAAQoX,kBACnB1S,WAAS,EACTxF,eAAe,SACfQ,WAAW,SAJb,UAME,cAACiY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QAASnE,EAAOG,OAAO4D,cACnB/D,EAAOsB,cAAc,kBAG7BD,MAAM,wEAEPrB,EAAOwB,OAAOuC,cAAgB/D,EAAOyB,QAAQsC,aAC5C,cAACzJ,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAO6D,gBAE1ChE,EAAOsB,cAAc,oBAG7BD,MAAM,0FAEPrB,EAAOwB,OAAOwC,gBAAkBhE,EAAOyB,QAAQuC,eAC9C,cAAC1J,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOgJ,gBAE1CnJ,EAAOsB,cAAc,oBAG7BD,MAAM,mEAEPrB,EAAOwB,OAAO2H,gBAAkBnJ,EAAOyB,QAAQ0H,eAC9C,cAAC7O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOiJ,gBAE1CpJ,EAAOsB,cAAc,oBAG7BD,MAAM,6DAEPrB,EAAOwB,OAAO4H,gBAAkBpJ,EAAOyB,QAAQ2H,eAC9C,cAAC9O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOkJ,gBAE1CrJ,EAAOsB,cAAc,oBAG7BD,MAAM,6DAEPrB,EAAOwB,OAAO6H,gBAAkBrJ,EAAOyB,QAAQ4H,eAC9C,cAAC/O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOmJ,eAE1CtJ,EAAOsB,cAAc,mBAG7BD,MAAM,gFAEPrB,EAAOwB,OAAO8H,eAAiBtJ,EAAOyB,QAAQ6H,cAC7C,cAAChP,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,QAEN,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBkD,QAAS/D,EACTtD,QAAQ,YACRtB,MAAM,UAJR,wDC7RNb,GAAWC,aAAW,iBAAO,CACjCqG,QAAS,CACPtF,OAAQ,OACR6L,WAAY,WA0CDsM,GAtCK,SAAC,GAA+C,IAA7CnP,EAA4C,EAA5CA,MAAO4O,EAAqC,EAArCA,UAAWD,EAA0B,EAA1BA,OAAQlT,EAAkB,EAAlBA,YACzCpE,EAAUrB,KAEVoZ,EAAW,uCAAG,4BAAA5U,EAAA,sEACKY,EAAc,WAAD,OAAY4E,EAAMhC,MADpC,cAELlE,iBAAmBf,EAAkBG,UAC5C2V,EAAYF,EAAOU,QAAO,SAAChR,GAAD,OAAOA,EAAEL,MAAQgC,EAAMhC,OACrD4Q,EAAU,YAAIC,KAJE,2CAAH,qDAQjB,OACE,eAAC/S,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAACuF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,SACE,eAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAApB,mKACgC,kCAAK6H,EAAM7C,QAD3C,SAIF,cAACmC,EAAA,EAAD,CACEE,QAAS4P,EACT3X,UAAWJ,EAAQiF,QACnBnE,QAAQ,YACRtB,MAAM,YAJR,2EAQA,cAACyI,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBkD,QAAS/D,EACTtD,QAAQ,YACRtB,MAAM,UAJR,gDC1BAb,GAAWC,aAAW,iBAAO,CACjCqK,UAAW,CACTzJ,MAAO,WAET0J,UAAW,CACTjK,QAAS,OAEXgZ,YAAa,CACXzY,MAAO,aAgHI0Y,GA5GQ,SAAC,GAAyC,IAAvCZ,EAAsC,EAAtCA,OAAQ3O,EAA8B,EAA9BA,MAAO4O,EAAuB,EAAvBA,UAAWhX,EAAY,EAAZA,MAClD,EAAkCkF,oBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAoC7D,oBAAS,GAA7C,mBAAOkN,EAAP,KAAmBC,EAAnB,KACM5S,EAAUrB,KAEVwZ,EAAmB,WACvB7O,GAAa,IAOT8O,EAAoB,WACxBxF,GAAc,IAOhB,OACE,eAAClJ,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,cAACC,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGzJ,EAAQ,IAEX,cAACuJ,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACGrB,QADH,IACGA,OADH,EACGA,EAAO7C,OAEV,cAACgE,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,gBACGrB,QADH,IACGA,OADH,EACGA,EAAO5C,cAEV,cAAC+D,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAM2B,aACL,cAAC,KAAD,CAAiBlK,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAM2B,cAAgB3B,EAAMgH,eAC3B,cAAC,KAAD,CAAiBvP,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAM+G,gBAAkB/G,EAAM2B,aAC7B,cAAC,KAAD,CAAiBlK,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAMiH,gBAAkBjH,EAAM2B,aAC7B,cAAC,KAAD,CAAiBlK,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAM4B,gBAAkB5B,EAAM2B,aAC7B,cAAC,KAAD,CAAiBlK,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACGrB,EAAMkH,eAAiBlH,EAAM2B,aAC5B,cAAC,KAAD,CAAiBlK,UAAWJ,EAAQiY,cAEpC,cAAC,KAAD,CAAYzY,MAAM,gBAGtB,cAACsK,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACK,EAAA,EAAD,CAAYlC,QAlEM,WACtBmB,GAAa,IAiET,SACE,cAAC,IAAD,CAAUlJ,UAAWJ,EAAQiJ,gBAGjC,cAACa,EAAA,EAAD,CAAW1J,UAAWJ,EAAQkJ,UAAWc,MAAM,SAA/C,SACE,cAACK,EAAA,EAAD,CAAYlC,QA/DO,WACvByK,GAAc,IA8DV,SACE,cAAC,KAAD,CAAYpT,MAAM,kBAGtB,cAAC,EAAD,CACE2E,KAAMkF,EACNjF,YAAa+T,EACbpX,MAAM,iHAHR,SAKE,cAAC,GAAD,CACEqD,YAAa+T,EACbxP,MAAOA,EACP2O,OAAQA,EACRC,UAAWA,MAGf,cAAC,EAAD,CAAOpT,KAAMwO,EAAYvO,YAAagU,EAAtC,SACE,cAAC,GAAD,CACEhU,YAAagU,EACbzP,MAAOA,EACP2O,OAAQA,EACRC,UAAWA,UCjHf5Y,GAAWC,aAAW,iBAAO,CACjCsM,MAAO,CACL/L,MAAO,MACPgM,SAAU,SACVkN,UAAW,QAEbjN,eAAgB,CACdC,UAAW,IACXlM,MAAO,QAEToM,YAAa,CACXC,WAAY,MACZC,SAAU,OACVhL,WAAY,SACZjB,MAAO,aAyDI8Y,GAtDK,SAAC,GAA2B,IAAzBhB,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvBvX,EAAUrB,KAehB,OACE,cAAC,GAAD,UACE,cAAC6B,EAAA,EAAD,CAAOJ,UAAWJ,EAAQkL,MAA1B,SACE,cAACW,EAAA,EAAD,CAAgBzL,UAAWJ,EAAQoL,eAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,UApBI,CACd,IACA,yFACA,gEACA,sEACA,+FACA,qGACA,+FACA,6HACA,oHACA,iCACA,sBAUqBrJ,KAAI,SAAC4L,EAAQ1L,GAAT,OACX,cAACuJ,EAAA,EAAD,CACE1J,UAAWJ,EAAQuL,YAEnBvB,MAAM,SAHR,SAKGiC,GAHI1L,UAQb,cAAC2L,EAAA,EAAD,UACGoL,EAAOjX,KAAI,SAACsI,EAAOpI,GAClB,OACE,cAAC,GAAD,CACE+W,OAAQA,EACRC,UAAWA,EAEX5O,MAAOA,EACPpI,MAAOA,GAFFA,kBCnDnB5B,GAAWC,aAAW,iBAAO,CACjCiG,KAAM,CACJ1F,MAAO,QAET2F,OAAQ,CACNrE,WAAY,QACZd,OAAQ,WACRoF,aAAc,MACdC,OAAQ,OACR7F,MAAO,OAET8F,QAAS,CACP9F,MAAO,MACPQ,OAAQ,YAEVuF,MAAO,CACLF,OAAQ,iBAEVoS,kBAAmB,CACjBnY,QAAS,gBAyQEsZ,GAtQE,SAAC,GAAwC,IAAtCjB,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAWnT,EAAkB,EAAlBA,YAC/BpE,EAAUrB,KACV4G,EAAUC,cAChB,EAA0BC,qBAA1B,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,qBAA9B,mBAAOE,EAAP,KAAgBC,EAAhB,KAaMO,EAAmBC,MAAaC,MAAM,CAC1CP,KAAMM,MAAaE,WACnBP,YAAaK,MAAaE,WAC1BL,SAAUG,MAAaE,WACvBgE,aAAclE,MAAc4P,SAAQ,GACpCzL,eAAgBnE,MAAc4P,SAAQ,GACtCtG,eAAgBtJ,MAAc4P,SAAQ,GACtCrG,eAAgBvJ,MAAc4P,SAAQ,GACtCpG,eAAgBxJ,MAAc4P,SAAQ,GACtCnG,cAAezJ,MAAc4P,SAAQ,KAGjCzP,EAASC,YAAU,CACvBL,mBACAN,cA1BoB,CACpBC,KAAM,GACNC,YAAa,GACbE,SAAU,GACVqE,cAAc,EACdC,gBAAgB,EAChBmF,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,eAAe,GAkBfpJ,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAvD,EAAA,6DACJ7C,EAAO,CACTwF,KAAMY,EAAOZ,KACbC,YAAaW,EAAOX,YACpBE,SAAUS,EAAOT,SACjBqE,aAAckO,QAAQ9R,EAAO4D,cAC7BC,eAAgBiO,QAAQ9R,EAAO6D,gBAC/BmF,eAAgB8I,QAAQ9R,EAAOgJ,gBAC/BC,eAAgB6I,QAAQ9R,EAAOiJ,gBAC/BC,eAAgB4I,QAAQ9R,EAAOkJ,gBAC/BC,cAAe2I,QAAQ9R,EAAOmJ,gBAEhC5P,QAAQC,IAAII,GAZJ,SAaa0C,EAAK,mBAAoB1C,GAbtC,OAaJoD,EAbI,OAcRzD,QAAQC,IAAIwD,GACRA,EAASjB,iBAAmBf,EAAkBM,kBAChDuV,EAAU,GAAD,mBAAKD,GAAL,CAAa5T,EAASpD,KAAKqI,SACpC/C,GAAW,GACXW,EAAOgG,YACPtF,YAAW,WACTrB,GAAW,KACV,MACMlC,EAASjB,iBAAmBf,EAAkBS,cACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,YAEblH,QAAQC,IAAIwD,EAASpD,KAAK8G,KAC1B1B,EAAShC,EAASpD,KAAK8G,MA5BjB,2CAAF,mDAAC,KAiCX,OACE,sBAAMX,SAAUF,EAAOc,aAAcjH,UAAWJ,EAAQ6E,KAAxD,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACGgG,GACC,cAACoC,EAAA,EAAD,CAAOlH,UAAWJ,EAAQuH,MAAOzG,QAAQ,WAAW0G,SAAS,QAA7D,SACGtC,IAGJS,GACC,cAAC2B,EAAA,EAAD,CACElH,UAAWJ,EAAQuH,MACnBzG,QAAQ,WACR0G,SAAS,UAHX,mIAQF,eAAC/C,EAAA,EAAD,CACEC,WAAS,EACTxF,eAAe,SACfQ,WAAW,SACX+H,UAAU,SAJZ,UAME,cAACE,EAAA,EAAD,yBACEvH,UAAWJ,EAAQ8E,OACnBhE,QAAQ,WACR8G,MAAM,iEACFrB,EAAOsB,cAAc,SAJ3B,IAKEC,WAAY,CACV1H,UACEmG,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KAAO9F,EAAQkF,MAAQ,OAGjEqB,EAAOwB,OAAOjC,MAAQS,EAAOyB,QAAQlC,KACpC,cAACjF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YACxC/F,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,gGACFrB,EAAOsB,cAAc,iBAE1BtB,EAAOwB,OAAOhC,aAAeQ,EAAOyB,QAAQjC,YAC3C,cAAClF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmI,EAAA,EAAD,aACEvH,UAAWJ,EAAQ8E,OACnBgD,WAAY,CACV1H,UACEmG,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACrCjG,EAAQkF,MACR,IAERpE,QAAQ,WACR8G,MAAM,qFACFrB,EAAOsB,cAAc,cAE1BtB,EAAOwB,OAAO9B,UAAYM,EAAOyB,QAAQ/B,SACxC,cAACpF,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,eAACiF,EAAA,EAAD,CACErE,UAAWJ,EAAQoX,kBACnB1S,WAAS,EACTxF,eAAe,SACfQ,WAAW,SAJb,UAME,cAACiY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QAASnE,EAAOG,OAAO4D,cACnB/D,EAAOsB,cAAc,kBAG7BD,MAAM,wEAEPrB,EAAOwB,OAAOuC,cAAgB/D,EAAOyB,QAAQsC,aAC5C,cAACzJ,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAO6D,gBAE1ChE,EAAOsB,cAAc,oBAG7BD,MAAM,0FAEPrB,EAAOwB,OAAOwC,gBAAkBhE,EAAOyB,QAAQuC,eAC9C,cAAC1J,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOgJ,gBAE1CnJ,EAAOsB,cAAc,oBAG7BD,MAAM,mEAEPrB,EAAOwB,OAAO2H,gBAAkBnJ,EAAOyB,QAAQ0H,eAC9C,cAAC7O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOiJ,gBAE1CpJ,EAAOsB,cAAc,oBAG7BD,MAAM,6DAEPrB,EAAOwB,OAAO4H,gBAAkBpJ,EAAOyB,QAAQ2H,eAC9C,cAAC9O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOkJ,gBAE1CrJ,EAAOsB,cAAc,oBAG7BD,MAAM,6DAEPrB,EAAOwB,OAAO6H,gBAAkBrJ,EAAOyB,QAAQ4H,eAC9C,cAAC/O,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,KACJ,cAACmY,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,aACEnN,QACEnE,EAAOG,OAAO4D,cAAgB/D,EAAOG,OAAOmJ,eAE1CtJ,EAAOsB,cAAc,mBAG7BD,MAAM,gFAEPrB,EAAOwB,OAAO8H,eAAiBtJ,EAAOyB,QAAQ6H,cAC7C,cAAChP,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,YAAtC,8FAGE,QAEN,eAACiF,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAA/B,UACE,cAAC+I,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBiD,KAAK,SACLpH,QAAQ,YACRtB,MAAM,UAJR,gCAQA,cAACyI,EAAA,EAAD,CACE7H,UAAWJ,EAAQiF,QACnBkD,QAAS/D,EACTtD,QAAQ,YACRtB,MAAM,UAJR,wDCvPGyB,GAlCA,SAAC,GAA2B,IAAzBqW,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACxB,EAA8B9R,oBAAS,GAAvC,mBAAOgT,EAAP,KAAgBC,EAAhB,KAMMC,EAAiB,WACrBD,GAAW,IAGb,OACE,eAACjU,EAAA,EAAD,CAAM+I,MAAI,EAACC,GAAI,GAAI/I,WAAS,EAACxF,eAAe,gBAA5C,UACE,cAAC2B,EAAA,EAAD,CAAYrB,MAAM,cAAcsB,QAAQ,KAAxC,mGAGA,cAACmH,EAAA,EAAD,CAAQE,QAbU,WACpBuQ,GAAW,IAYuB5X,QAAQ,YAAYtB,MAAM,UAA1D,2EAGA,cAAC,EAAD,CACE2E,KAAMsU,EACNrU,YAAauU,EACb5X,MAAM,yFAHR,SAKE,cAAC,GAAD,CACEuW,OAAQA,EACRlT,YAAauU,EACbpB,UAAWA,UCvBf5Y,GAAWC,aAAW,iBAAO,CACjCmO,KAAM,CACJ9N,QAAS,YAyCE2Z,GArCA,WACb,MAA4BnT,mBAAS,IAArC,mBAAO6R,EAAP,KAAeC,EAAf,KACMhS,EAAUC,cACVxF,EAAUrB,KACRgK,EAAUL,KAAVK,MAEFkQ,EAAYpE,sBAAW,sBAC3B,0CAAAtR,EAAA,6DAAOF,EAAP,+BAAa,WAAb,SACuBW,EAAIX,GAD3B,QACMS,EADN,QAEejB,iBAAmBf,EAAkBG,QAChD0V,EAAU7T,EAASpD,KAAKgX,QACf5T,EAASjB,iBAAmBf,EAAkBS,eACvDkB,aAAa6D,WAAW,SACxB7D,aAAa6D,WAAW,mBACxB3B,EAAQ4B,KAAK,WAPjB,2CAUA,CAAC5B,IAYH,OAVAsD,qBAAU,WACJF,KACE,OAACA,QAAD,IAACA,OAAD,EAACA,EAAO2B,cAGVuO,IAFAtT,EAAQ4B,KAAK,QAKhB,QAACwB,QAAD,IAACA,OAAD,EAACA,EAAO2B,aAAc/E,EAASoD,EAAOkQ,IAGvC,eAACpU,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASkB,UAAWJ,EAAQ+M,KAA3D,UACE,cAAC,GAAD,CAAQuK,OAAQA,EAAQC,UAAWA,IACnC,cAAC,GAAD,CAAaD,OAAQA,EAAQC,UAAWA,Q,mBC1BxC1Y,GAAQ8L,aAAY,CACxBlD,UAAW,MACXmD,QAAS,CACPC,QAAS,CACPC,KAAMC,KAAO,SAsCJ+N,OAlCf,WAEE,IAAMC,EAAMjW,aAAO,CAAEkW,QAAQ,GAAD,mBAAMC,eAAYD,SAAlB,CAA2BE,WAEvD,OACE,qBAAK9Y,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC+Y,GAAA,EAAD,CAAgBJ,IAAKA,EAArB,SACE,cAAC9N,GAAA,EAAD,CAAepM,MAAOA,GAAtB,SACE,cAAC,KAAD,CAAyBua,MAAOC,KAAhC,SACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASlJ,UAAWa,KAChC,cAAC,GAAD,CAAczB,OAAK,EAAC8J,KAAK,IAAIlJ,UAAWnC,KACxC,cAAC,GAAD,CAAcuB,OAAK,EAAC8J,KAAK,SAASlJ,UAAW+F,KAC7C,cAAC,GAAD,CAAc3G,OAAK,EAAC8J,KAAK,SAASlJ,UAAWuG,KAC7C,cAAC,GAAD,CAAcnH,OAAK,EAAC8J,KAAK,QAAQlJ,UAAWwG,KAC5C,cAAC,GAAD,CAAcpH,OAAK,EAAC8J,KAAK,SAASlJ,UAAW0G,KAC7C,cAAC,GAAD,CAActH,OAAK,EAAC8J,KAAK,UAAUlJ,UAAW8G,KAC9C,cAAC,GAAD,CAAc1H,OAAK,EAAC8J,KAAK,UAAUlJ,UAAWwI,KAC9C,cAAC,GAAD,CAAcpJ,OAAK,EAAC8J,KAAK,YAAYlJ,UAAW+D,wBCvCrDoF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS1J,OACP,cAAC,IAAM2J,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.b4153a8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Paper, makeStyles, Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  box: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"30px\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n    \"& > :not(style)\": {\r\n      m: 1,\r\n      width: 128,\r\n      height: 100,\r\n    },\r\n  },\r\n  papers: {\r\n    backgroundColor: \"#283593\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px 10px\",\r\n  },\r\n}));\r\n\r\nconst Boxes = ({ SummaryData, style, loading }) => {\r\n  const classes = useStyle();\r\n  console.log({ loading });\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      {SummaryData.map((data, index) => (\r\n        <Paper\r\n          style={{ background: style?.background || \"#283593\" }}\r\n          key={index}\r\n          className={classes.papers}\r\n          elevation={2}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size=\"20px\" color=\"inherit\" />\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <Typography variant=\"h6\">{data.title}</Typography>\r\n              <Typography variant=\"h6\">\r\n                {data.value ||\r\n                  (data.value === 0 || !loading ? (\r\n                    0\r\n                  ) : (\r\n                    <span>\r\n                      <CircularProgress size=\"20px\" color=\"inherit\" />\r\n                    </span>\r\n                  ))}\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Paper>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Boxes;\r\n","import React from \"react\";\r\nimport Boxes from \"../helpers/Boxes\";\r\n\r\nconst Header = ({ data, loading }) => {\r\n  const SummaryData = [\r\n    { title: \"عدد المستخدمين\", value: data?.usersCount },\r\n    { title: \"الدقيق الكلي\", value: data?.totalFlour },\r\n    { title: \"الخبز الكلي\", value: data?.totalBreed },\r\n    { title: \"الدقيق المتبقي\", value: data?.restFlour },\r\n    { title: \"الرصيد الكلي\", value: data?.totalAccount },\r\n    { title: \"الخبز على الحساب\", value: data?.totalDebt },\r\n    { title: \"المبلغ المدفوع\", value: data?.totalPayed },\r\n    { title: \"المبلغ المتبقي\", value: data?.restAccount },\r\n  ];\r\n  return <Boxes loading={loading} SummaryData={SummaryData} />;\r\n};\r\n\r\nexport default Header;\r\n","const API_COMMON_STATUS = Object.freeze({\r\n  SUCCESS: 200,\r\n  FAILED: 500,\r\n  VALIDATION_ERROR: 422,\r\n  RESOURCE_CREATED: 201,\r\n  PUT_SUCCESS: 202,\r\n  RESOURCE_DELETED: 204,\r\n  UNAUTHORIZED: 401,\r\n  UNAUTHENTICATED: 403,\r\n  ERROR: 404,\r\n  BAD_REQUEST: 400,\r\n  CONFLICT: 409,\r\n});\r\n\r\nconst getUnknownStatusError = () => {\r\n  return {\r\n    responseStatus: API_COMMON_STATUS.ERROR,\r\n    message: \"Unknown Error Status!\",\r\n  };\r\n};\r\nexport { API_COMMON_STATUS, getUnknownStatusError };\r\n","import axios from \"axios\";\r\nconst API_END_POINT = process.env.REACT_APP_API_URL;\r\nconsole.log(API_END_POINT);\r\nexport default axios.create({\r\n  baseURL: `${API_END_POINT}`,\r\n});\r\n","import {\r\n  API_COMMON_STATUS,\r\n  getUnknownStatusError,\r\n} from \"../helpers/api-helpers\";\r\nimport api from \"./api\";\r\n\r\nexport const post = async (url, postData) => {\r\n  let data = {};\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    let response = await api.post(url, postData, {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.RESOURCE_CREATED:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.RESOURCE_CREATED,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    let response = e.response;\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.BAD_REQUEST:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.BAD_REQUEST,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.CONFLICT:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.CONFLICT,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.ERROR:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.ERROR,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.UNAUTHORIZED:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.UNAUTHORIZED,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const get = async (url) => {\r\n  let data = {};\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    let response = await api.get(url, {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.SUCCESS:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.SUCCESS,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    let response = e.response;\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.BAD_REQUEST:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.BAD_REQUEST,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.ERROR:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.ERROR,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.UNAUTHORIZED:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.UNAUTHORIZED,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const patch = async (url, patchDate) => {\r\n  let data = {};\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    let response = await api.patch(url, patchDate, {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.SUCCESS:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.SUCCESS,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    let response = e.response;\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.BAD_REQUEST:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.BAD_REQUEST,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.ERROR:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.ERROR,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.CONFLICT:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.CONFLICT,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.UNAUTHORIZED:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.UNAUTHORIZED,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const deleteRequest = async (url) => {\r\n  let data = {};\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    let response = await api.delete(url, {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.SUCCESS:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.SUCCESS,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    let response = e.response;\r\n    switch (response?.status) {\r\n      case API_COMMON_STATUS.BAD_REQUEST:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.BAD_REQUEST,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.ERROR:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.ERROR,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.UNAUTHORIZED:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.UNAUTHORIZED,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  dialog: {\r\n    padding: \"15px\",\r\n  },\r\n}));\r\n\r\nconst PopUp = ({ title, open, handleClose, children }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"lg\"\r\n    >\r\n      <Grid className={classes.dialog} container justifyContent=\"center\">\r\n        <DialogTitle id=\"simple-dialog-title\">{title}</DialogTitle>\r\n        {children}\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { patch } from \"../../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"60%\",\r\n  },\r\n  buttons: {\r\n    width: \"30%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\nconst EditeUser = ({ user, users, setUsers, handleClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const initialValues = {\r\n    name: user.name || \"\",\r\n    phoneNumber: user.phoneNumber || \"\",\r\n    address: user.address || \"\",\r\n    password: user.password || \"\",\r\n    note: user.note || \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    phoneNumber: yup.string().required(),\r\n    address: yup.string(),\r\n    password: yup.string().required(),\r\n    note: yup.string(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        phoneNumber: values.phoneNumber,\r\n        name: values.name,\r\n        address: values.address,\r\n        note: values.note,\r\n        password: user.password,\r\n      };\r\n      let response = await patch(`/admins/users/${user._id}`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        let newUsers = [...users];\r\n        let newUser = response.data.user;\r\n        let newUserIndex = newUsers.findIndex((x) => x._id === user._id);\r\n        newUsers[newUserIndex] = newUser;\r\n        setUsers([...newUsers]);\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم تعديل المستخدم بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Typography variant=\"h6\">رقم المستخدم:{user.userCount}</Typography>\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"اسم المستخدم\"\r\n            {...formic.getFieldProps(\"name\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.name && formic.touched.name ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.name && formic.touched.name ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.phoneNumber && formic.touched.phoneNumber\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"رقم جوال المستخدم\"\r\n            {...formic.getFieldProps(\"phoneNumber\")}\r\n          />\r\n          {formic.errors.phoneNumber && formic.touched.phoneNumber ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.password && formic.touched.password\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\" كلمة سر المستخدم\"\r\n            {...formic.getFieldProps(\"password\")}\r\n          />\r\n          {formic.errors.password && formic.touched.password ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.address && formic.touched.address\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"عنوان المستخدم\"\r\n            {...formic.getFieldProps(\"address\")}\r\n          />\r\n          {formic.errors.address && formic.touched.address ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.note && formic.touched.note ? classes.error : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات \"\r\n            {...formic.getFieldProps(\"note\")}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n            <Button\r\n              className={classes.buttons}\r\n              onClick={handleClose}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              الغاء\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditeUser;\r\n","import { useContext, createContext, useState, useEffect } from \"react\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport { get } from \"../api/genericApi\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport const useAuthContext = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuthenticated\"));\r\n  const [admin, setAdmin] = useState();\r\n  // const {} = withRouter();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let response = await get(\"/admins/refresh\");\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        setAdmin(response.data.admin);\r\n        localStorage.setItem(\"token\", response.data.token);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        setIsAuth(false);\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n      }\r\n    };\r\n    if (!admin) {\r\n      getData();\r\n    }\r\n  }, [admin, setAdmin]);\r\n  return (\r\n    <authContext.Provider value={{ isAuth, setIsAuth, admin, setAdmin }}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { IconButton, makeStyles, Switch } from \"@material-ui/core\";\r\nimport { get } from \"../../../api/genericApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_COMMON_STATUS } from \"../../../helpers/api-helpers\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport EditeUser from \"./EditeUser\";\r\nimport { useAuthContext } from \"../../../context/authContext\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  editeIcon: {\r\n    color: \"#989813\",\r\n  },\r\n  tableCell: {\r\n    padding: \"2px\",\r\n  },\r\n  disabled: {\r\n    color: \"gray\",\r\n  },\r\n}));\r\n\r\nconst UsersTableRow = ({ users, user, setUsers, index }) => {\r\n  const [openEdite, setOpenEdite] = useState(false);\r\n  const { admin } = useAuthContext();\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n\r\n  const handleCloseEdite = () => {\r\n    setOpenEdite(false);\r\n  };\r\n\r\n  const handleOpenEdite = () => {\r\n    setOpenEdite(true);\r\n  };\r\n\r\n  const goToUserPage = () => {\r\n    history.push(`user/${user._id}`);\r\n  };\r\n\r\n  const toggleActiveUsers = async () => {\r\n    let response = await get(`/admins/users/${user._id}/active`);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      let newUsers = [...users];\r\n      let newUser = user;\r\n      newUser.isActive = !user.isActive;\r\n      let newUserIndex = newUsers.findIndex((x) => x._id === user._id);\r\n      newUser[newUserIndex] = newUser;\r\n      setUsers([...newUsers]);\r\n    } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow hover role=\"checkbox\" tabIndex={-1} key={user._id}>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user.account > 0 ? <RadioButtonCheckedIcon color=\"secondary\" /> : null}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user.userCount}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.phoneNumber}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.name}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.flourAmount}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.breedAmount}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.debtAmount}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.totalPayed}\r\n      </TableCell>\r\n      <TableCell\r\n        onDoubleClick={goToUserPage}\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >\r\n        {user?.account}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <IconButton\r\n          disabled={!admin?.isBigManager && !admin?.canManageUsers}\r\n          onClick={handleOpenEdite}\r\n        >\r\n          <EditIcon\r\n            className={\r\n              !admin?.isBigManager && !admin?.canManageUsers\r\n                ? classes.disabled\r\n                : classes.editeIcon\r\n            }\r\n          />\r\n        </IconButton>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <Switch\r\n          disabled={!admin?.isBigManager && !admin?.canManageUsers}\r\n          onChange={toggleActiveUsers}\r\n          checked={user.isActive}\r\n        />\r\n      </TableCell>\r\n      <PopUp\r\n        open={openEdite}\r\n        handleClose={handleCloseEdite}\r\n        title=\"تعديل بيانات المستخدم\"\r\n      >\r\n        <EditeUser user={user} users={users} setUsers={setUsers} />\r\n      </PopUp>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default UsersTableRow;\r\n","import React from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\nconst theme = createTheme({\r\n  direction: \"rtl\",\r\n  palette: {\r\n    primary: {\r\n      main: indigo[\"800\"],\r\n    },\r\n  },\r\n});\r\nconst RTLProvider = ({ children }) => {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default RTLProvider;\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport UsersTableRow from \"./UsersTableRow\";\r\nimport RTLProvider from \"../../helpers/RTLProvider\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 460,\r\n    width: \"100%\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"15px\",\r\n    background: \"orange\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function UsersTable({ users, setUsers, pages, getUsers }) {\r\n  const classes = useStyle();\r\n  const columns = [\r\n    \"\",\r\n    \"رقم المستخدم\",\r\n    \"رقم جوال المستخدم\",\r\n    \"اسم المستخدم\",\r\n    \"كمية الدقيق المتبقية\",\r\n    \"كمية الخبز\",\r\n    \"الخبز على الحساب\",\r\n    \"المبلغ المدفوع\",\r\n    \"الرصيد\",\r\n    \"تعديل\",\r\n    \"تفعيل/ايقاف\",\r\n  ];\r\n\r\n  const handlePageChange = async (e, page) => {\r\n    console.log(page);\r\n    await getUsers(`/admins/users?page=${page}`);\r\n  };\r\n\r\n  return (\r\n    <RTLProvider>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column, index) => (\r\n                  <TableCell\r\n                    className={classes.tableHeader}\r\n                    key={index}\r\n                    align=\"center\"\r\n                  >\r\n                    {column}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map((user, index) => {\r\n                return (\r\n                  <UsersTableRow\r\n                    users={users}\r\n                    setUsers={setUsers}\r\n                    key={index}\r\n                    user={user}\r\n                    index={index}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        {/* <Pagination\r\n          count={pages}\r\n          showFirstButton\r\n          showLastButton\r\n          onChange={handlePageChange}\r\n        /> */}\r\n      </Paper>\r\n    </RTLProvider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post, get } from \"../../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyle = makeStyles(() => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"60%\",\r\n  },\r\n  buttons: {\r\n    width: \"30%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  alert: {\r\n    width: \"70%\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\nconst AddUser = ({ users, setUsers, handleClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [newUser, setNewUser] = useState();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const initialValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    address: \"\",\r\n    note: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"هذا الحقل مطلوب\"),\r\n    phoneNumber: yup\r\n      .string()\r\n      .required(\"هذا الحقل مطلوب\")\r\n      .length(10, \"يجب ان يكون طول الحقل 10 ارقام\"),\r\n    address: yup.string(),\r\n    password: yup.string().required(\"هذا الحقل مطلوب\"),\r\n    note: yup.string(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        phoneNumber: values.phoneNumber,\r\n        name: values.name,\r\n        address: values.address || undefined,\r\n        note: values.note || undefined,\r\n        password: values.password || undefined,\r\n      };\r\n      let response = await post(`/admins/users`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        let newUsers = [response.data.user, ...users];\r\n        setUsers([...newUsers]);\r\n        setNewUser(response.data.user);\r\n        setSuccess(true);\r\n        setError(false);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n          formic.resetForm();\r\n          setNewUser(null);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n        setSuccess(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const checkUserMobile = async (e) => {\r\n    let value = e.target.value;\r\n    formic.handleBlur(e);\r\n    if (value) {\r\n      let response = await get(`/admins/users?phoneNumber=${value}`);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        let users = response.data.users;\r\n        if (users.length > 0) {\r\n          console.log(users);\r\n          formic.setFieldError(\"phoneNumber\", \"رقم الجوال مستخدم من قبل\");\r\n        } else {\r\n          formic.setFieldValue(\"password\", value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Alert\r\n              className={classes.alert}\r\n              variant=\"outlined\"\r\n              severity=\"success\"\r\n            >\r\n              تم اضافة المستخدم بنجاح\r\n            </Alert>\r\n            <Typography variant=\"h6\">\r\n              رقم المستخدم:{newUser?.userCount}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"اسم المستخدم\"\r\n            {...formic.getFieldProps(\"name\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.name && formic.touched.name ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.name && formic.touched.name ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.phoneNumber && formic.touched.phoneNumber\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"رقم جوال المستخدم\"\r\n            {...formic.getFieldProps(\"phoneNumber\")}\r\n            onBlur={checkUserMobile}\r\n          />\r\n          {formic.errors.phoneNumber && formic.touched.phoneNumber ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              {formic.errors.phoneNumber}\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.password && formic.touched.password\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\" كلمة سر المستخدم\"\r\n            {...formic.getFieldProps(\"password\")}\r\n          />\r\n          {formic.errors.password && formic.touched.password ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.address && formic.touched.address\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"عنوان المستخدم\"\r\n            {...formic.getFieldProps(\"address\")}\r\n          />\r\n          {formic.errors.address && formic.touched.address ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.note && formic.touched.note ? classes.error : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات \"\r\n            {...formic.getFieldProps(\"note\")}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n            <Button\r\n              className={classes.buttons}\r\n              onClick={handleClose}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              الغاء\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, makeStyles, Button } from \"@material-ui/core\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport AddUser from \"./AddUser\";\r\nimport { useAuthContext } from \"../../../context/authContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"10px\",\r\n    width: \"90%\",\r\n  },\r\n  inputs: {\r\n    height: \"15px\",\r\n    width: \"120px\",\r\n    margin: \"0px 5px\",\r\n  },\r\n  margin: {\r\n    margin: \"10px 10px\",\r\n  },\r\n}));\r\n\r\nconst UsersFilters = ({ users, setUsers, getUsers }) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    userCount: \"\",\r\n    account: \"\",\r\n  });\r\n  const [openAddUser, setOpenAddUser] = useState(false);\r\n  const { admin } = useAuthContext();\r\n  const classes = useStyle();\r\n\r\n  const handleOpenAddUser = (e) => {\r\n    setOpenAddUser(true);\r\n  };\r\n\r\n  const handleCloseAddUser = (e) => {\r\n    setOpenAddUser(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const search = async () => {\r\n    let url = `/admins/users?`;\r\n    if (data.name) url = url + `&name=${data.name}`;\r\n    if (data.userCount) url = url + `&userCount=${data.userCount}`;\r\n    if (data.phoneNumber) url = url + `&phoneNumber=${data.phoneNumber}`;\r\n    if (data.account) url = url + `&account=${data.account}`;\r\n    await getUsers(url);\r\n  };\r\n\r\n  const reset = async () => {\r\n    let url = `/admins/users?`;\r\n    await getUsers(url);\r\n    setData({ name: \"\", phoneNumber: \"\", userCount: \"\", account: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"space-between\">\r\n      <Grid container item xs={10} alignItems=\"center\">\r\n        <TextField\r\n          value={data.userCount}\r\n          onChange={handleChange}\r\n          className={classes.margin}\r\n          inputProps={{\r\n            className: classes.inputs,\r\n          }}\r\n          label=\"رقم المستخدم\"\r\n          variant=\"standard\"\r\n          name=\"userCount\"\r\n        />\r\n        <TextField\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          className={classes.margin}\r\n          inputProps={{\r\n            className: classes.inputs,\r\n          }}\r\n          label=\"اسم المستخدم\"\r\n          variant=\"standard\"\r\n          name=\"name\"\r\n        />\r\n        <TextField\r\n          value={data.phoneNumber}\r\n          onChange={handleChange}\r\n          className={classes.margin}\r\n          inputProps={{\r\n            className: classes.inputs,\r\n          }}\r\n          label=\"رقم الجوال\"\r\n          variant=\"standard\"\r\n          name=\"phoneNumber\"\r\n        />\r\n        <Box sx={{ minWidth: 150 }} className={classes.margin}>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">\r\n              تصنيف حسب الرصيد\r\n            </InputLabel>\r\n            <Select\r\n              // labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={data.account}\r\n              label=\"تصنيف حسب الرصيد\"\r\n              onChange={handleChange}\r\n              name=\"account\"\r\n            >\r\n              <MenuItem value={2}>له رصيد</MenuItem>\r\n              <MenuItem value={1}>عليه رصيد</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={search}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          بحث\r\n        </Button>\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={reset}\r\n          color=\"default\"\r\n          variant=\"contained\"\r\n        >\r\n          تفريغ الحقول\r\n        </Button>\r\n      </Grid>\r\n      <Grid container item xs={2} alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Button\r\n          disabled={!admin?.isBigManager && !admin?.canManageUsers}\r\n          onClick={handleOpenAddUser}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          اضافة مستخدم\r\n        </Button>\r\n      </Grid>\r\n      <PopUp\r\n        title=\"اضافة مستخدم جديد\"\r\n        handleClose={handleCloseAddUser}\r\n        open={openAddUser}\r\n      >\r\n        <AddUser\r\n          handleClose={handleCloseAddUser}\r\n          users={users}\r\n          setUsers={setUsers}\r\n        />\r\n      </PopUp>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersFilters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport Header from \"../component/Home/Header\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport { get } from \"../api/genericApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UsersTable from \"../component/Home/Users/UsersTable\";\r\nimport UsersFilters from \"../component/Home/Users/UsersFilters\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"30px 0px\",\r\n  },\r\n}));\r\nexport const Home = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState();\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const getUsers = async (url = \"/admins/users?\") => {\r\n    setLoading(true);\r\n    let response = await get(url);\r\n    setLoading(false);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      setUsers(response.data.users);\r\n    } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setLoading(true);\r\n      let response = await get(\"/admins/orders/home\");\r\n      setLoading(false);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        setSummary(response.data.summary);\r\n        setUsers(response.data.users.users);\r\n        let pagesNumber = Math.ceil(response.data.users.usersCount / 5);\r\n        setPages(pagesNumber);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      }\r\n    };\r\n    getData();\r\n  }, [history]);\r\n\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Header loading={loading} data={summary} />\r\n      <UsersFilters getUsers={getUsers} setUsers={setUsers} users={users} />\r\n      <UsersTable\r\n        setUsers={setUsers}\r\n        getUsers={getUsers}\r\n        rowsPerPage={10}\r\n        page={page}\r\n        setPage={setPage}\r\n        users={users}\r\n        pages={pages}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nconst useStyle = makeStyles(() => ({\r\n  nav: {\r\n    background: \"orange\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    margin: \"0px 20px\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { admin, isAuth, setIsAuth } = useAuthContext();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"isAuthenticated\");\r\n    setIsAuth(false);\r\n    history.push(\"/login\");\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  // const open = Boolean(anchorEl);\r\n  const handleOpenMenue = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  return isAuth ? (\r\n    <AppBar className={classes.nav} position=\"static\">\r\n      <Toolbar>\r\n        <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n            item\r\n            xs={10}\r\n          >\r\n            {admin && (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                exact\r\n                to=\"/\"\r\n              >\r\n                <Typography variant=\"body1\">الصفحة الرئيسية</Typography>\r\n              </NavLink>\r\n            )}\r\n            {admin?.isBigManager || admin?.canManageFlour ? (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/flour\"\r\n                // {admin?.isBigManager || admin?.canManageFlour}\r\n              >\r\n                <Typography variant=\"body1\">استلام دقيق</Typography>\r\n              </NavLink>\r\n            ) : null}\r\n            {admin?.isBigManager || admin?.canManageBreed ? (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/breed\"\r\n              >\r\n                <Typography variant=\"body1\">تبديل خبز</Typography>\r\n              </NavLink>\r\n            ) : null}\r\n\r\n            {admin?.isBigManager || admin?.canManageDebts ? (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/debt\"\r\n              >\r\n                <Typography variant=\"body1\">خبز دين</Typography>\r\n              </NavLink>\r\n            ) : null}\r\n            {admin?.isBigManager || admin?.canManagePaid ? (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/payed\"\r\n              >\r\n                <Typography variant=\"body1\">سند قبض نقدي</Typography>\r\n              </NavLink>\r\n            ) : null}\r\n            {admin && (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/orders\"\r\n              >\r\n                <Typography variant=\"body1\">الحركات</Typography>\r\n              </NavLink>\r\n            )}\r\n            {admin?.isBigManager ? (\r\n              <NavLink\r\n                activeStyle={{\r\n                  background: \"#dca237\",\r\n                }}\r\n                className={classes.link}\r\n                to=\"/admins\"\r\n              >\r\n                <Typography variant=\"body1\">المسؤولين</Typography>\r\n              </NavLink>\r\n            ) : null}\r\n          </Grid>\r\n          {admin && (\r\n            <>\r\n              {\" \"}\r\n              <IconButton onClick={handleOpenMenue}>\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  \"aria-labelledby\": \"basic-button\",\r\n                }}\r\n              >\r\n                <MenuItem>\r\n                  <Typography color=\"inherit\">\r\n                    {\" \"}\r\n                    الاسم : {admin?.name}\r\n                  </Typography>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <Typography color=\"inherit\">\r\n                    رقم الجوال : {admin?.phoneNumber}\r\n                  </Typography>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <Button\r\n                    className={classes.button}\r\n                    onClick={logout}\r\n                    color=\"secondary\"\r\n                  >\r\n                    تسجيل الخروج\r\n                  </Button>\r\n                </MenuItem>\r\n              </Menu>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst ProtectRoute = ({ component: Component, ...rest }) => {\r\n  const isAuth = localStorage.getItem(\"isAuthenticated\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to=\"login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectRoute;\r\n","export default __webpack_public_path__ + \"static/media/icon.feddc31d.feddc31d.jpg\";","export default __webpack_public_path__ + \"static/media/smartSoft.27c67284.png\";","import {\r\n  API_COMMON_STATUS,\r\n  getUnknownStatusError,\r\n} from \"../helpers/api-helpers\";\r\nimport api from \"./api\";\r\nexport const login = async (loginData) => {\r\n  let data = {};\r\n  try {\r\n    let response = await api.post(\"admins/login\", loginData);\r\n    switch (response.status) {\r\n      case API_COMMON_STATUS.SUCCESS:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.SUCCESS,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    let response = e.response;\r\n    switch (response.status) {\r\n      case API_COMMON_STATUS.BAD_REQUEST:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.BAD_REQUEST,\r\n          ...response,\r\n        };\r\n        break;\r\n      case API_COMMON_STATUS.ERROR:\r\n        data = {\r\n          responseStatus: API_COMMON_STATUS.ERROR,\r\n          ...response,\r\n        };\r\n        break;\r\n      default:\r\n        data = getUnknownStatusError();\r\n    }\r\n    return data;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport logo from \"../asserts/icon.feddc31d.jpg\";\r\nimport smartSoft from \"../asserts/smartSoft.png\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { login } from \"../api/auth\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyle = makeStyles(() => ({\r\n  loginContainer: {\r\n    // flex: 1,\r\n    background: \"orange\",\r\n    height: \"100vh\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  logo: {\r\n    width: \"180px\",\r\n    height: \"180px\",\r\n    borderRadius: \"50%\",\r\n    background: \"white\",\r\n  },\r\n  logoDiv: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    // borderRadius: \"50%\",\r\n    // background: \"white\",\r\n    // backgroundImage: `url(${logo})`,\r\n    // backgroundPosition: \"center\",\r\n    // backgroundRepeat: \"no-repeat\",\r\n    // backgroundSize: \"contain\",\r\n    // objectFit: \"contain\",\r\n  },\r\n  smartSoft: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    // borderRadius: \"50%\",\r\n    margin: \"10px\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"30%\",\r\n  },\r\n  link: {\r\n    // textDecoration: \"none\",\r\n    // color: \"white\",\r\n  },\r\n  footer: {\r\n    padding: \"0px 20px\",\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const { setAdmin, setIsAuth } = useAuthContext();\r\n  const initialValues = {\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    phoneNumber: yup.string().required(),\r\n    password: yup.string().required(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        phoneNumber: values.phoneNumber,\r\n        password: values.password,\r\n      };\r\n      let response = await login(data);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        let { admin, token } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"isAuthenticated\", true);\r\n        setAdmin(admin);\r\n        setIsAuth(true);\r\n        history.push(\"/\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid container className={classes.loginContainer}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        className={classes.header}\r\n      >\r\n        <div className={classes.logoDiv}>\r\n          {/* style={{ backgroundImage: logo }} */}\r\n          <img src={logo} alt=\"logo\" className={classes.logo} />\r\n        </div>\r\n        <Typography variant=\"h4\">مخبز المدينة</Typography>\r\n      </Grid>\r\n      <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          {error && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"رقم المستخدم\"\r\n            {...formic.getFieldProps(\"phoneNumber\")}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"كلمة المرور\"\r\n            type=\"password\"\r\n            {...formic.getFieldProps(\"password\")}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            تسجيل الدخول\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n      <Grid\r\n        className={classes.footer}\r\n        container\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"body1\">\r\n          <a\r\n            className={classes.link}\r\n            href=\"http://www.smartsoft.ps\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            www.smartsoft.ps\r\n          </a>\r\n        </Typography>\r\n        <img src={smartSoft} alt=\"logo\" className={classes.smartSoft} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Boxes from \"../helpers/Boxes\";\r\nimport { Grid, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  textContainer: {\r\n    padding: \"10px 0px\",\r\n  },\r\n  text: {\r\n    color: \"#cc762d\",\r\n    fontWeight: \"800\",\r\n    margin: \"10px\",\r\n  },\r\n  number: {\r\n    color: \"#cc762d\",\r\n  },\r\n}));\r\n\r\nconst Header = ({ user, data, loading }) => {\r\n  const classes = useStyle();\r\n  const SummaryData = [\r\n    { title: \"الدقيق الكلي\", value: data?.totalFlour },\r\n    { title: \"الدقيق المتبقي\", value: data?.restFlour },\r\n    { title: \"الرصيد الكلي\", value: data?.totalAccount },\r\n    { title: \"الخبز الكلي\", value: data?.totalBreed },\r\n    { title: \"الخبز تحت الحساب\", value: data?.totalDebt },\r\n    { title: \"المبلغ المدفوع\", value: data?.totalPayed },\r\n    { title: \"المبلغ المتبقي\", value: data?.restAccount },\r\n  ];\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid\r\n        className={classes.textContainer}\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        item\r\n        xs={11}\r\n      >\r\n        <Typography className={classes.text} variant=\"h5\">\r\n          {user?.name}\r\n        </Typography>\r\n        <h4 className={classes.number}>{user?.userCount}</h4>\r\n      </Grid>\r\n      <Grid container justifyContent=\"center\">\r\n        <Boxes\r\n          loading={loading}\r\n          SummaryData={SummaryData}\r\n          style={{ background: \"#cc762d\" }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { deleteRequest } from \"../../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../../helpers/api-helpers\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  deleteButton: {\r\n    background: \"red\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      background: \"red\",\r\n    },\r\n  },\r\n  buttons: {\r\n    margin: \"0px 10px\",\r\n  },\r\n}));\r\n\r\nconst DeleteOrder = ({\r\n  order,\r\n  userOrders,\r\n  setUserOrders,\r\n  handleClose,\r\n  url,\r\n  getData,\r\n}) => {\r\n  const classes = useStyle();\r\n\r\n  const deleteOrder = async () => {\r\n    let response = await deleteRequest(`/admins/orders/${order._id}`);\r\n    console.log(response);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      //   let newOrders = userOrders.filter((x) => x._id !== order._id);\r\n      //   setUserOrders([...newOrders]);\r\n      await getData(url);\r\n      handleClose();\r\n    }\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Button\r\n        className={`${classes.buttons} ${classes.deleteButton}`}\r\n        variant=\"contained\"\r\n        onClick={deleteOrder}\r\n      >\r\n        حذف\r\n      </Button>\r\n      <Button\r\n        onClick={handleClose}\r\n        className={classes.buttons}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n      >\r\n        الغاء\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DeleteOrder;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { patch } from \"../../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../../helpers/api-helpers\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nconst useStyle = makeStyles(() => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"60%\",\r\n  },\r\n  buttons: {\r\n    width: \"30%\",\r\n    margin: \"0px 10px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"700\",\r\n  },\r\n  editeButton: {\r\n    background: \"#989813\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      background: \"#989813\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditeOrder = ({\r\n  order,\r\n  userOrders,\r\n  setUserOrders,\r\n  handleClose,\r\n  url,\r\n  getData,\r\n}) => {\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const initialValues = {\r\n    breedAmount: order.breedAmount,\r\n    flourAmount: order.flourAmount,\r\n    debt: order.debt,\r\n    payedAmount: order.payedAmount,\r\n    date: moment(new Date(order.date)).format(\"YYYY-MM-DD\"),\r\n  };\r\n\r\n  const schema = yup.object().shape({\r\n    breedAmount: yup.number(),\r\n    flourAmount: yup.number(),\r\n    debt: yup.number(),\r\n    payedAmount: yup.number(),\r\n    date: yup.date(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    initialValues,\r\n    validationSchema: schema,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        breedAmount: values.breedAmount,\r\n        flourAmount: values.flourAmount,\r\n        debt: values.debt,\r\n        payedAmount: values.payedAmount,\r\n        date: values.date,\r\n      };\r\n      console.log(data);\r\n      let response = await patch(`/admins/orders/${order._id}`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        await getData(url);\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={formic.handleSubmit}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم تعديل الحركة بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"كمية الدقيق\"\r\n            {...formic.getFieldProps(\"flourAmount\")}\r\n          />\r\n          {formic.touched.flourAmount && formic.errors.flourAmount ? (\r\n            <Typography color=\"secondary\" variant=\"body2\">\r\n              {formic.errors.flourAmount}\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"كمية الخبز\"\r\n            {...formic.getFieldProps(\"breedAmount\")}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"المبلغ المدفوع\"\r\n            {...formic.getFieldProps(\"payedAmount\")}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"المبلغ المدين\"\r\n            {...formic.getFieldProps(\"debt\")}\r\n          />\r\n        </Grid>\r\n        <TextField\r\n          className={classes.inputs}\r\n          variant=\"outlined\"\r\n          label=\"التاريخ\"\r\n          {...formic.getFieldProps(\"date\")}\r\n          type=\"date\"\r\n        />\r\n        {formic.errors.date && formic.touched.date ? (\r\n          <Typography variant=\"subtitle2\" color=\"secondary\">\r\n            هذا الحقل مطلوب\r\n          </Typography>\r\n        ) : null}\r\n        <Grid container justifyContent=\"center\">\r\n          <Button\r\n            className={`${classes.buttons} ${classes.editeButton}`}\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            تعديل\r\n          </Button>\r\n          <Button\r\n            onClick={handleClose}\r\n            className={classes.buttons}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n          >\r\n            الغاء\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditeOrder;\r\n","import React, { useState } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport DeleteOrder from \"./DeleteOrder\";\r\nimport EditeOrder from \"./EditeOrder\";\r\nimport * as moment from \"moment\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  editeIcon: {\r\n    color: \"#989813\",\r\n  },\r\n  deleteIcon: {\r\n    color: \"#d21515\",\r\n  },\r\n  tableCell: {\r\n    padding: \"5px\",\r\n  },\r\n}));\r\nconst OrderTableRow = ({\r\n  order,\r\n  index,\r\n  setUserOrders,\r\n  userOrders,\r\n  url,\r\n  getData,\r\n}) => {\r\n  const [openEdite, setOpenEdite] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  const handleOpenDeleteOrder = () => {\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handleCloseDeleteOrder = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const handleOpenEditeOrder = () => {\r\n    setOpenEdite(true);\r\n  };\r\n\r\n  const handleCloseEditeOrder = () => {\r\n    setOpenEdite(false);\r\n  };\r\n\r\n  return (\r\n    <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order.orderCount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.flourAmount || \"_\"}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.breedAmount || \"_\"}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.payedAmount || \"_\"}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.debt || \"_\"}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.currentAccount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {moment(new Date(order?.date).toLocaleDateString()).format(\r\n          \"DD-MM-YYYY\"\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <IconButton onClick={handleOpenEditeOrder}>\r\n          <EditIcon className={classes.editeIcon} />\r\n        </IconButton>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <IconButton onClick={handleOpenDeleteOrder}>\r\n          <DeleteIcon className={classes.deleteIcon} />\r\n        </IconButton>\r\n      </TableCell>\r\n      <PopUp\r\n        open={openDelete}\r\n        handleClose={handleCloseDeleteOrder}\r\n        title=\"هل تريد بالتاكيد حذف هذه الحركة\"\r\n      >\r\n        <DeleteOrder\r\n          userOrders={userOrders}\r\n          order={order}\r\n          setUserOrders={setUserOrders}\r\n          handleClose={handleCloseDeleteOrder}\r\n          getData={getData}\r\n          url={url}\r\n        />\r\n      </PopUp>\r\n      <PopUp\r\n        open={openEdite}\r\n        handleClose={handleCloseEditeOrder}\r\n        title=\"تعديل الحركة\"\r\n      >\r\n        <EditeOrder\r\n          userOrders={userOrders}\r\n          order={order}\r\n          setUserOrders={setUserOrders}\r\n          handleClose={handleCloseEditeOrder}\r\n          getData={getData}\r\n          url={url}\r\n        />\r\n      </PopUp>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default OrderTableRow;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport OrderTableRow from \"./OrderTableRow\";\r\nimport RTLProvider from \"../../helpers/RTLProvider\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    width: \"100%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"15px\",\r\n    background: \"orange\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst OrdersTable = ({\r\n  userOrders,\r\n  setUserOrders,\r\n  url,\r\n  getData,\r\n  page,\r\n  pages,\r\n  setPages,\r\n  setPage,\r\n}) => {\r\n  const classes = useStyle();\r\n  const columns = [\r\n    \"رقم الحركة\",\r\n    \"الدقيق\",\r\n    \"الخبز\",\r\n    \"المبلغ\",\r\n    \"الدين\",\r\n    \"الرصيد\",\r\n    \"التاريخ\",\r\n    \"تعديل\",\r\n    \"حذف\",\r\n  ];\r\n\r\n  const handlePageChange = (e, page) => {\r\n    let filterUrl = url;\r\n    filterUrl = filterUrl + `&page=${page}`;\r\n    setPage(page);\r\n    getData(filterUrl);\r\n  };\r\n  return (\r\n    <RTLProvider>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column, index) => (\r\n                  <TableCell\r\n                    className={classes.tableHeader}\r\n                    key={index}\r\n                    align=\"center\"\r\n                  >\r\n                    {column}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {userOrders.map((order, index) => {\r\n                return (\r\n                  <OrderTableRow\r\n                    userOrders={userOrders}\r\n                    setUserOrders={setUserOrders}\r\n                    key={index}\r\n                    order={order}\r\n                    index={index}\r\n                    url={url}\r\n                    getData={getData}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Pagination\r\n          count={pages}\r\n          showFirstButton\r\n          showLastButton\r\n          onChange={handlePageChange}\r\n        />\r\n      </Paper>\r\n    </RTLProvider>\r\n  );\r\n};\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport { Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { deleteRequest } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyle = makeStyles(() => ({\r\n  button: {\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst DeleteUser = ({ user, handleClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const deleteUser = async () => {\r\n    let response = await deleteRequest(`/admins/users/${user._id}`);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Typography variant=\"h6\">\r\n        هل تريد بالتاكيد حذف المستخدم \"<b>{user.name}</b>\" و حساباته بشكل نهائي\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\">\r\n        <Button\r\n          onClick={deleteUser}\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          نعم\r\n        </Button>\r\n        <Button\r\n          onClick={handleClose}\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n        >\r\n          الغاء\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DeleteUser;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  FormControl,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport DeleteUser from \"./DeleteUser\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n  },\r\n  margin: {\r\n    margin: \"0px 10px\",\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    displayDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  label: {\r\n    color: \"black\",\r\n    fontSize: \"14px\",\r\n  },\r\n  inputs: {\r\n    width: \"150px\",\r\n  },\r\n}));\r\n\r\nconst Filters = ({ page, getData, user, setUrl, url, setPage }) => {\r\n  const classes = useStyle();\r\n  const [data, setData] = useState({ from: null, to: null, orderCount: \"\" });\r\n  const [open, setOpen] = useState();\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    console.log(name, value);\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const reset = async (e) => {\r\n    setData({ from: null, to: null, orderCount: \"\" });\r\n    setUrl(`/admins/users/${user._id}?`);\r\n    await getData(`/admins/users/${user._id}?page=${page}`);\r\n    setPage(1);\r\n  };\r\n\r\n  const search = async (e) => {\r\n    let filterUrl = `/admins/users/${user._id}?`;\r\n    if (data.from) filterUrl = filterUrl + `&from=${data.from}`;\r\n    if (data.to) filterUrl = filterUrl + `&to=${data.to}`;\r\n    if (data.orderCount)\r\n      filterUrl = filterUrl + `&orderCount=${data.orderCount}`;\r\n    setUrl(filterUrl);\r\n    filterUrl = filterUrl + `&page${page}`;\r\n    await getData(filterUrl);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"space-between\"\r\n      className={classes.root}\r\n      item\r\n      xs={11}\r\n    >\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-end\"\r\n        item\r\n        xs={10}\r\n      >\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            value={data.orderCount}\r\n            onChange={handleChange}\r\n            id=\"from\"\r\n            variant=\"standard\"\r\n            label=\"رقم الحركة\"\r\n            name=\"orderCount\"\r\n            className={classes.inputs}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <KeyboardDatePicker\r\n            onChange={(date) => {\r\n              setData({ ...data, from: date });\r\n            }}\r\n            label=\"من تاريخ\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            name=\"from\"\r\n            value={data.from}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <KeyboardDatePicker\r\n            onChange={(date) => {\r\n              setData({ ...data, to: date });\r\n            }}\r\n            label=\"الى تاريخ\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            value={data.to}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n            name=\"to\"\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          onClick={search}\r\n          className={classes.margin}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          بحث\r\n        </Button>\r\n        <Button\r\n          onClick={reset}\r\n          className={classes.margin}\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n        >\r\n          تفريغ الحقول\r\n        </Button>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"flex-end\"\r\n        item\r\n        xs={2}\r\n      >\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          حذف المستخدم بشكل نهائي\r\n        </Button>\r\n      </Grid>\r\n      <PopUp open={open} handleClose={handleClose}>\r\n        <DeleteUser handleClose={handleClose} user={user} />\r\n      </PopUp>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { get } from \"../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport Header from \"../component/User/Header\";\r\nimport OrdersTable from \"../component/User/OrdersTable/OrdersTable\";\r\nimport Filters from \"../component/User/Filters\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"30px 0px\",\r\n  },\r\n}));\r\n\r\nconst User = () => {\r\n  const { id } = useParams();\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [summaryData, setSummaryData] = useState();\r\n  const [userOrders, setUserOrders] = useState();\r\n  const [url, setUrl] = useState(`/admins/users/${id}?`);\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const getUserData = useCallback(\r\n    async (url = `/admins/users/${id}`) => {\r\n      console.log(url);\r\n      setLoading(true);\r\n      let response = await get(url);\r\n      console.log(response);\r\n      setLoading(false);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        setUser(response.data.user);\r\n        setUserOrders(response.data.user.orders);\r\n        setSummaryData(response.data.summary);\r\n        setPages(response.data.pages);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      }\r\n    },\r\n    [history, id]\r\n  );\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, [id, history, getUserData]);\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Header loading={loading} data={summaryData} user={user} />\r\n      <Filters\r\n        setPage={setPage}\r\n        page={page}\r\n        url={url}\r\n        setUrl={setUrl}\r\n        user={user}\r\n        getData={getUserData}\r\n      />\r\n      {userOrders && (\r\n        <OrdersTable\r\n          setPage={setPage}\r\n          setPages={setPages}\r\n          pages={pages}\r\n          page={page}\r\n          url={url}\r\n          userOrders={userOrders}\r\n          getData={getUserData}\r\n          setUserOrders={setUserOrders}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { useState } from \"react\";\r\nimport { get } from \"../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nconst useFormHooks = () => {\r\n  const [userCount, setUserCount] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [openSearch, setOpenSearch] = useState(false);\r\n\r\n  const handleUserDataChange = (e) => {\r\n    let value = e.target.value;\r\n    setUserCount(value);\r\n  };\r\n\r\n  const handleOpenSearch = (e) => {\r\n    setOpenSearch(true);\r\n  };\r\n\r\n  const handleCloseSearch = (e) => {\r\n    setOpenSearch(false);\r\n  };\r\n\r\n  const getUser = async (formic) => {\r\n    if (userCount) {\r\n      const response = await get(`/admins/users?userCount=${userCount}`);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        let user = response.data.users[0];\r\n        if (user) {\r\n          setUser(user);\r\n          formic.setFieldValue(\"userId\", user._id);\r\n        }\r\n      }\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const setUserData = async (user, formic) => {\r\n    setUser(user);\r\n    formic.setFieldValue(\"userId\", user._id);\r\n    setUserCount(user.userCount);\r\n  };\r\n  return {\r\n    setUserCount,\r\n    userCount,\r\n    setUser,\r\n    user,\r\n    handleUserDataChange,\r\n    getUser,\r\n    openSearch,\r\n    handleCloseSearch,\r\n    handleOpenSearch,\r\n    setUserData,\r\n  };\r\n};\r\n\r\nexport default useFormHooks;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport RTLProvider from \"./RTLProvider\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { get } from \"../../api/genericApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    width: \"100%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"15px\",\r\n    background: \"orange\",\r\n    color: \"white\",\r\n  },\r\n  inputs: {\r\n    margin: \"5px\",\r\n  },\r\n  tableCell: {\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  \"رقم المستخدم\",\r\n  \"اسم المتسخدم\",\r\n  \"رقم جوال المستخدم\",\r\n  \"اختر المستخدم\",\r\n];\r\n\r\nconst UserSearch = ({ setUserData, handleClose, formic }) => {\r\n  const classes = useStyle();\r\n  const [users, setUsers] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const [url, setUrl] = useState(\"/admins/users?\");\r\n  const [data, setData] = useState({\r\n    userCount: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  const getUsers = async () => {\r\n    let getUrl = `/admins/users?page=${page}`;\r\n    if (data.name) getUrl = getUrl + `&name=${data.name}`;\r\n    if (data.userCount) getUrl = getUrl + `&userCount=${data.userCount}`;\r\n    if (data.phoneNumber) getUrl = getUrl + `&phoneNumber=${data.phoneNumber}`;\r\n    setUrl(getUrl);\r\n    let response = await get(getUrl);\r\n    console.log(response);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      setUsers(response.data.users);\r\n      setPages(response.data.pages);\r\n    } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    setUrl(\"/admins/users?\");\r\n  };\r\n\r\n  const reset = (e) => {\r\n    setData({ userCount: \"\", name: \"\", phoneNumber: \"\" });\r\n  };\r\n\r\n  const handlePageChange = async (e, page) => {\r\n    console.log(page);\r\n    await getUsers(`${url}?page=${page}`);\r\n    setPage(page);\r\n  };\r\n\r\n  const selectUser = (user) => {\r\n    setUserData(user, formic);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n        <TextField\r\n          onChange={handleChange}\r\n          label=\"رقم المستخدم\"\r\n          className={classes.inputs}\r\n          variant=\"outlined\"\r\n          value={data.userCount}\r\n          name=\"userCount\"\r\n        />\r\n        <TextField\r\n          onChange={handleChange}\r\n          label=\"اسم المستخدم\"\r\n          className={classes.inputs}\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          value={data.name}\r\n        />\r\n        <TextField\r\n          onChange={handleChange}\r\n          label=\"رقم جوال المستخدم\"\r\n          className={classes.inputs}\r\n          variant=\"outlined\"\r\n          name=\"phoneNumber\"\r\n          value={data.phoneNumber}\r\n        />\r\n        <Button\r\n          onClick={getUsers}\r\n          className={classes.inputs}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          بحث\r\n        </Button>\r\n        <Button\r\n          onClick={reset}\r\n          className={classes.inputs}\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n        >\r\n          تفريغ الحقول\r\n        </Button>\r\n      </Grid>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n        <RTLProvider>\r\n          <Paper className={classes.paper}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column, index) => (\r\n                      <TableCell\r\n                        className={classes.tableHeader}\r\n                        key={index}\r\n                        align=\"center\"\r\n                      >\r\n                        {column}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map((user, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={user._id}\r\n                      >\r\n                        <TableCell className={classes.tableCell} align=\"center\">\r\n                          {user.userCount}\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableCell} align=\"center\">\r\n                          {user.name}\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableCell} align=\"center\">\r\n                          {user.phoneNumber}\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableCell} align=\"center\">\r\n                          <Button\r\n                            onClick={() => selectUser(user)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                          >\r\n                            اختر\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination\r\n              count={pages}\r\n              showFirstButton\r\n              showLastButton\r\n              onChange={handlePageChange}\r\n            />\r\n          </Paper>\r\n        </RTLProvider>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useFormHooks from \"../../custommHooks/useFormHooks\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport UserSearch from \"../helpers/UserSearch\";\r\nimport * as moment from \"moment\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"40%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  buttons: {\r\n    width: \"20%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  alert: {\r\n    width: \"30%\",\r\n  },\r\n  userName: {\r\n    color: \"black\",\r\n    fontWeight: \"700\",\r\n  },\r\n  userCounterContainer: {\r\n    width: \"30%\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const {\r\n    user,\r\n    userCount,\r\n    handleUserDataChange,\r\n    getUser,\r\n    setUser,\r\n    setUserCount,\r\n    openSearch,\r\n    handleCloseSearch,\r\n    handleOpenSearch,\r\n    setUserData,\r\n  } = useFormHooks();\r\n\r\n  const handleGetUser = async () => {\r\n    getUser(formic);\r\n  };\r\n\r\n  const initialValues = {\r\n    flourAmount: \"\",\r\n    userId: \"\",\r\n    note: undefined,\r\n    payedAmount: \"\",\r\n    date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    flourAmount: yup.number().required(),\r\n    userId: yup.string().required(),\r\n    note: yup.string(),\r\n    payedAmount: yup.number().default(Number(0)),\r\n    date: yup.date(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        flourAmount: values.flourAmount,\r\n        userId: values.userId,\r\n        note: values.note,\r\n        date: values.date,\r\n        payedAmount: Number(values.payedAmount),\r\n      };\r\n      console.log(data);\r\n      let response = await post(`/admins/orders/flour`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        formic.resetForm();\r\n        setUser(\"\");\r\n        setUserCount(\"\");\r\n        setSuccess(true);\r\n        setError(false);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n        setSuccess(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChangeDate = (date) => {\r\n    formic.setFieldValue(\"date\", date);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم استلام الدقيق بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid\r\n            className={classes.userCounterContainer}\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              onChange={handleUserDataChange}\r\n              className={classes.inputs}\r\n              variant=\"outlined\"\r\n              label=\"رقم المستخدم\"\r\n              name=\"userCount\"\r\n              type=\"number\"\r\n              value={userCount}\r\n              inputProps={{\r\n                className: formic.errors.userId ? classes.error : \"\",\r\n              }}\r\n              onBlur={handleGetUser}\r\n            />\r\n            <Button\r\n              onClick={handleOpenSearch}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              بحث عن المستخدم\r\n            </Button>\r\n          </Grid>\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"اسم المستخدم\"\r\n            name=\"userName\"\r\n            disabled\r\n            value={user ? user.name : \"\"}\r\n            inputProps={{\r\n              className: classes.userName,\r\n            }}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            label=\"كمية الدقيق\"\r\n            {...formic.getFieldProps(\"flourAmount\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.flourAmount && formic.touched.flourAmount\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.flourAmount && formic.touched.flourAmount ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"المبلغ المدفوع\"\r\n            type=\"number\"\r\n            {...formic.getFieldProps(\"payedAmount\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.payedAmount && formic.touched.payedAmount\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.payedAmount && formic.touched.payedAmount ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <KeyboardDatePicker\r\n            {...formic.getFieldProps(\"date\")}\r\n            label=\"التاريخ\"\r\n            // openTo=\"year\"\r\n            // type=\"date\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            onChange={handleChangeDate}\r\n            inputVariant=\"outlined\"\r\n            className={classes.inputs}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          />\r\n          {formic.errors.date && formic.touched.date ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات\"\r\n            {...formic.getFieldProps(\"note\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.note && formic.touched.note ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <PopUp\r\n        open={openSearch}\r\n        handleClose={handleCloseSearch}\r\n        title=\"بحث عن مستخدم\"\r\n      >\r\n        <UserSearch\r\n          formic={formic}\r\n          setUserData={setUserData}\r\n          handleClose={handleCloseSearch}\r\n        />\r\n      </PopUp>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport Form from \"../component/Flour/Form\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\n\r\nconst Flour = () => {\r\n  const { admin } = useAuthContext();\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  useEffect(() => {\r\n    if (admin) {\r\n      if (!admin?.canManageFlour && !admin?.isBigManager) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [admin?.canManageFlour, admin?.isBigManager, history, admin]);\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Typography variant=\"h4\" color=\"textPrimary\">\r\n        استلام دقيق\r\n      </Typography>\r\n      <Form />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Flour;\r\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  buttons: {\r\n    margin: \"10px 10px\",\r\n  },\r\n}));\r\n\r\nconst BreedConfirmForm = ({ formic, handleClose }) => {\r\n  const classes = useStyle();\r\n\r\n  const confirm = async () => {\r\n    await formic.submitForm();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid container justifyContent=\"center\">\r\n        <Typography variant=\"h6\" color=\"textPrimary\">\r\n          هل تريد بالتاكيد بيع الخبز\r\n        </Typography>\r\n      </Grid>\r\n      <Grid container justifyContent=\"center\">\r\n        <Button\r\n          onClick={confirm}\r\n          variant=\"contained\"\r\n          className={classes.buttons}\r\n          color=\"primary\"\r\n        >\r\n          نعم\r\n        </Button>\r\n        <Button\r\n          onClick={handleClose}\r\n          variant=\"contained\"\r\n          className={classes.buttons}\r\n          color=\"default\"\r\n        >\r\n          الغاء\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BreedConfirmForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useFormHooks from \"../../custommHooks/useFormHooks\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport UserSearch from \"../helpers/UserSearch\";\r\nimport * as moment from \"moment\";\r\nimport BreedConfirmForm from \"./BreedConfirmForm\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nconst useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"40%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  buttons: {\r\n    width: \"20%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  alert: {\r\n    width: \"30%\",\r\n  },\r\n  userName: {\r\n    color: \"black\",\r\n    fontWeight: \"700\",\r\n  },\r\n  userCounterContainer: {\r\n    width: \"30%\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  // const [userCount, setUserCount] = useState(\"\");\r\n  // const [user, setUser] = useState();\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const {\r\n    user,\r\n    userCount,\r\n    handleUserDataChange,\r\n    getUser,\r\n    setUser,\r\n    setUserCount,\r\n    openSearch,\r\n    handleCloseSearch,\r\n    handleOpenSearch,\r\n    setUserData,\r\n  } = useFormHooks();\r\n\r\n  const handleGetUser = async () => {\r\n    getUser(formic);\r\n  };\r\n\r\n  const initialValues = {\r\n    breedAmount: \"\",\r\n    userId: \"\",\r\n    note: undefined,\r\n    payedAmount: \"\",\r\n    date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    breedAmount: yup.number().required(),\r\n    userId: yup.string().required(),\r\n    note: yup.string(),\r\n    payedAmount: yup.number().default(Number(0)),\r\n    date: yup.date(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        breedAmount: values.breedAmount,\r\n        userId: values.userId,\r\n        note: values.note,\r\n        date: values.date,\r\n        payedAmount: Number(values.payedAmount),\r\n      };\r\n\r\n      let response = await post(`/admins/orders/breed`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        formic.resetForm();\r\n        setUser(\"\");\r\n        setUserCount(\"\");\r\n        setSuccess(true);\r\n        setError(false);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n        setSuccess(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChangeDate = (date) => {\r\n    formic.setFieldValue(\"date\", date);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const flourAmount = user?.flourAmount;\r\n    const breedAmount = formic.getFieldProps(\"breedAmount\").value;\r\n    if (breedAmount > flourAmount) {\r\n      setOpenConfirm(true);\r\n      return;\r\n    }\r\n    formic.handleSubmit();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم بيع الخبز بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid\r\n            className={classes.userCounterContainer}\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              onChange={handleUserDataChange}\r\n              className={classes.inputs}\r\n              variant=\"outlined\"\r\n              label=\"رقم المستخدم\"\r\n              name=\"userCount\"\r\n              value={userCount}\r\n              inputProps={{\r\n                className: formic.errors.userId ? classes.error : \"\",\r\n              }}\r\n              type=\"number\"\r\n              onBlur={handleGetUser}\r\n            />\r\n            {formic.errors.userId ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <Button\r\n              onClick={handleOpenSearch}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              بحث عن المستخدم\r\n            </Button>\r\n          </Grid>\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"اسم المستخدم\"\r\n            name=\"userName\"\r\n            disabled\r\n            value={user ? user.name : \"\"}\r\n            inputProps={{\r\n              className: classes.userName,\r\n            }}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"كمية الخبز\"\r\n            {...formic.getFieldProps(\"breedAmount\")}\r\n            type=\"number\"\r\n            inputProps={{\r\n              className:\r\n                formic.errors.breedAmount && formic.touched.breedAmount\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.breedAmount && formic.touched.breedAmount ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"المبلغ المدفوع\"\r\n            type=\"number\"\r\n            {...formic.getFieldProps(\"payedAmount\")}\r\n          />\r\n          {formic.errors.payedAmount && formic.touched.payedAmount ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          {/* <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"التاريخ\"\r\n            {...formic.getFieldProps(\"date\")}\r\n            type=\"date\"\r\n          /> */}\r\n          {/* <MuiPickersUtilsProvider utils={DateFnsUtils}> */}\r\n          <KeyboardDatePicker\r\n            inputVariant=\"outlined\"\r\n            className={classes.inputs}\r\n            {...formic.getFieldProps(\"date\")}\r\n            label=\"التاريخ\"\r\n            // openTo=\"year\"\r\n            // type=\"date\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            onChange={handleChangeDate}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          />\r\n          {formic.errors.date && formic.touched.date ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          {/* </MuiPickersUtilsProvider> */}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات\"\r\n            {...formic.getFieldProps(\"note\")}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <PopUp\r\n        open={openSearch}\r\n        handleClose={handleCloseSearch}\r\n        title=\"بحث عن مستخدم\"\r\n      >\r\n        <UserSearch\r\n          formic={formic}\r\n          setUserData={setUserData}\r\n          handleClose={handleCloseSearch}\r\n        />\r\n      </PopUp>\r\n      <PopUp\r\n        open={openConfirm}\r\n        handleClose={handleCloseConfirm}\r\n        title={`  كمية الخبز الملطوبة اكبر من كمية الدقيق المتبقية  : ${user?.flourAmount} كيلو`}\r\n      >\r\n        <BreedConfirmForm formic={formic} handleClose={handleCloseConfirm} />\r\n      </PopUp>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport Form from \"../component/Breed/Form\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\n\r\nconst Breed = () => {\r\n  const { admin } = useAuthContext();\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  useEffect(() => {\r\n    if (admin) {\r\n      if (!admin.canManageBreed && !admin.isBigManager) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [admin?.canManageBreed, admin?.isBigManager, history, admin]);\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Typography variant=\"h4\" color=\"textPrimary\">\r\n        تبديل خبز\r\n      </Typography>\r\n      <Form />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Breed;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useFormHooks from \"../../custommHooks/useFormHooks\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport UserSearch from \"../helpers/UserSearch\";\r\nimport * as moment from \"moment\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"40%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  buttons: {\r\n    width: \"20%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  alert: {\r\n    width: \"30%\",\r\n  },\r\n  userName: {\r\n    color: \"black\",\r\n    fontWeight: \"700\",\r\n  },\r\n  userCounterContainer: {\r\n    width: \"30%\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  // const [userCount, setUserCount] = useState(\"\");\r\n  // const [user, setUser] = useState();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const {\r\n    user,\r\n    userCount,\r\n    handleUserDataChange,\r\n    getUser,\r\n    setUser,\r\n    setUserCount,\r\n    openSearch,\r\n    handleCloseSearch,\r\n    handleOpenSearch,\r\n    setUserData,\r\n  } = useFormHooks();\r\n\r\n  // const handleUserDataChange = (e) => {\r\n  //   let value = e.target.value;\r\n  //   if (value) {\r\n  //     setUserCount(value);\r\n  //     return;\r\n  //   }\r\n  //   setUserCount(null);\r\n  //   setUser(null);\r\n  //   formic.setFieldValue(\"userId\", undefined);\r\n  // };\r\n\r\n  // const getUser = async () => {\r\n  //   if (userCount) {\r\n  //     const response = await get(`/admins/users?userCount=${userCount}`);\r\n  //     console.log(response);\r\n  //     if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n  //       let user = response.data.users[0];\r\n  //       if (user) {\r\n  //         setUser(user);\r\n  //         formic.setFieldValue(\"userId\", user._id);\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     setUser(null);\r\n  //   }\r\n  // };\r\n\r\n  const handleGetUser = async () => {\r\n    getUser(formic);\r\n  };\r\n\r\n  const handleChangeDate = (date) => {\r\n    formic.setFieldValue(\"date\", date);\r\n  };\r\n\r\n  const initialValues = {\r\n    debt: \"\",\r\n    userId: \"\",\r\n    note: \"\",\r\n    date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    debt: yup.number().required(),\r\n    userId: yup.string().required(),\r\n    note: yup.string(),\r\n    date: yup.date(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        debt: values.debt,\r\n        userId: values.userId,\r\n        note: values.note || undefined,\r\n        date: values.date,\r\n      };\r\n      console.log(data);\r\n      let response = await post(`/admins/orders/debt`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        formic.resetForm();\r\n        setUser(\"\");\r\n        setUserCount(\"\");\r\n        setSuccess(true);\r\n        setError(false);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n        setSuccess(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم اضافة الدين بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid\r\n            className={classes.userCounterContainer}\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              onChange={handleUserDataChange}\r\n              className={classes.inputs}\r\n              variant=\"outlined\"\r\n              label=\"رقم المستخدم\"\r\n              name=\"userCount\"\r\n              type=\"number\"\r\n              value={userCount}\r\n              inputProps={{\r\n                className: formic.errors.userId ? classes.error : \"\",\r\n              }}\r\n              onBlur={handleGetUser}\r\n            />\r\n            <Button\r\n              onClick={handleOpenSearch}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              بحث عن المستخدم\r\n            </Button>\r\n          </Grid>\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"اسم المستخدم\"\r\n            name=\"userName\"\r\n            disabled\r\n            value={user ? user.name : \"\"}\r\n            inputProps={{\r\n              className: classes.userName,\r\n            }}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            label=\"مبلغ الدين\"\r\n            {...formic.getFieldProps(\"debt\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.debt && formic.touched.debt ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.debt && formic.touched.debt ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <KeyboardDatePicker\r\n            inputVariant=\"outlined\"\r\n            className={classes.inputs}\r\n            {...formic.getFieldProps(\"date\")}\r\n            label=\"التاريخ\"\r\n            // openTo=\"year\"\r\n            // type=\"date\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            onChange={handleChangeDate}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          />\r\n          {formic.errors.date && formic.touched.date ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات\"\r\n            {...formic.getFieldProps(\"note\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.note && formic.touched.note ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <PopUp\r\n        open={openSearch}\r\n        handleClose={handleCloseSearch}\r\n        title=\"بحث عن مستخدم\"\r\n      >\r\n        <UserSearch\r\n          formic={formic}\r\n          setUserData={setUserData}\r\n          handleClose={handleCloseSearch}\r\n        />\r\n      </PopUp>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport Form from \"../component/Debt/Form\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\n\r\nconst Debt = () => {\r\n  const { admin } = useAuthContext();\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  useEffect(() => {\r\n    if (admin) {\r\n      if (!admin?.canManageDebts && !admin?.isBigManager) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [admin?.canManageDebts, admin?.isBigManager, history, admin]);\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Typography variant=\"h4\" color=\"textPrimary\">\r\n        خبز دين\r\n      </Typography>\r\n      <Form />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Debt;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useFormHooks from \"../../custommHooks/useFormHooks\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport UserSearch from \"../helpers/UserSearch\";\r\nimport * as moment from \"moment\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"40%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  buttons: {\r\n    width: \"20%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  alert: {\r\n    width: \"30%\",\r\n  },\r\n  userName: {\r\n    color: \"black\",\r\n    fontWeight: \"700\",\r\n  },\r\n  userCounterContainer: {\r\n    width: \"30%\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const {\r\n    user,\r\n    userCount,\r\n    handleUserDataChange,\r\n    getUser,\r\n    setUser,\r\n    setUserCount,\r\n    openSearch,\r\n    handleCloseSearch,\r\n    handleOpenSearch,\r\n    setUserData,\r\n  } = useFormHooks();\r\n\r\n  const handleGetUser = async () => {\r\n    getUser(formic);\r\n  };\r\n\r\n  const initialValues = {\r\n    amount: \"\",\r\n    userId: \"\",\r\n    note: \"\",\r\n    date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    amount: yup.number().required(),\r\n    userId: yup.string().required(),\r\n    note: yup.string(),\r\n    date: yup.date(),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        amount: values.amount,\r\n        userId: values.userId,\r\n        date: values.date,\r\n        note: values.note || undefined,\r\n      };\r\n      console.log(data);\r\n      let response = await post(`/admins/orders/paid`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        formic.resetForm();\r\n        setUser(\"\");\r\n        setUserCount(\"\");\r\n        setSuccess(true);\r\n        setError(false);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n        setSuccess(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChangeDate = (date) => {\r\n    formic.setFieldValue(\"date\", date);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم اضافة السند بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid\r\n            className={classes.userCounterContainer}\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              onChange={handleUserDataChange}\r\n              className={classes.inputs}\r\n              variant=\"outlined\"\r\n              label=\"رقم المستخدم\"\r\n              name=\"userCount\"\r\n              type=\"number\"\r\n              value={userCount}\r\n              inputProps={{\r\n                className: formic.errors.userId ? classes.error : \"\",\r\n              }}\r\n              onBlur={handleGetUser}\r\n            />\r\n            <Button\r\n              onClick={handleOpenSearch}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              بحث عن المستخدم\r\n            </Button>\r\n          </Grid>\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            placeholder=\"اسم المستخدم\"\r\n            name=\"userName\"\r\n            disabled\r\n            value={user ? user.name : \"\"}\r\n            inputProps={{\r\n              className: classes.userName,\r\n            }}\r\n          />\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            label=\"المبلغ \"\r\n            {...formic.getFieldProps(\"amount\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.amount && formic.touched.amount\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.amount && formic.touched.amount ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <KeyboardDatePicker\r\n            inputVariant=\"outlined\"\r\n            className={classes.inputs}\r\n            {...formic.getFieldProps(\"date\")}\r\n            label=\"التاريخ\"\r\n            // openTo=\"year\"\r\n            // type=\"date\"\r\n            allowKeyboardControl={true}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            format=\"dd-MM-yyyy\"\r\n            variant=\"inline\"\r\n            onChange={handleChangeDate}\r\n            invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          />\r\n          {formic.errors.date && formic.touched.date ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"ملاحظات\"\r\n            {...formic.getFieldProps(\"note\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.note && formic.touched.note ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.note && formic.touched.note ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <PopUp\r\n        open={openSearch}\r\n        handleClose={handleCloseSearch}\r\n        title=\"بحث عن مستخدم\"\r\n      >\r\n        <UserSearch\r\n          formic={formic}\r\n          setUserData={setUserData}\r\n          handleClose={handleCloseSearch}\r\n        />\r\n      </PopUp>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport Form from \"../component/Paid/Form\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\n\r\nconst Paid = () => {\r\n  const { admin } = useAuthContext();\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  useEffect(() => {\r\n    if (admin) {\r\n      if (!admin?.canManagePaid && !admin?.isBigManager) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [admin?.canManagePaid, admin?.isBigManager, history, admin]);\r\n  return (\r\n    <Grid className={classes.root} container justifyContent=\"center\">\r\n      <Typography variant=\"h4\" color=\"textPrimary\">\r\n        سند قبض نقدي\r\n      </Typography>\r\n      <Form />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Paid;\r\n","import React from \"react\";\r\nimport Boxes from \"../helpers/Boxes\";\r\n\r\nconst Header = ({ data }) => {\r\n  const SummaryData = [\r\n    { title: \"الدقيق الكلي\", value: data?.totalFlour },\r\n    { title: \"الدقيق المتبقي\", value: data?.restFlour },\r\n    { title: \"الرصيد الكلي\", value: data?.totalAccount },\r\n    { title: \"الخبز الكلي\", value: data?.totalBreed },\r\n    { title: \"المبلغ المدفوع\", value: data?.totalPayed },\r\n    { title: \"المبلغ المتبقي\", value: data?.restAccount },\r\n  ];\r\n  return <Boxes SummaryData={SummaryData} />;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport * as moment from \"moment\";\r\nconst useStyle = makeStyles(() => ({\r\n  editeIcon: {\r\n    color: \"#989813\",\r\n  },\r\n  tableCell: {\r\n    padding: \"12px\",\r\n  },\r\n}));\r\n\r\nconst OrdersTableRow = ({ orders, order, setOrders, index }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order.orderCount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order.userId?.name}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order.flourAmount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.breedAmount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.payedAmount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.debt}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {order?.currentAccount}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {moment(new Date(order?.date).toLocaleDateString()).format(\r\n          \"DD-MM-YYYY\"\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersTableRow;\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport OrderTableRow from \"./OrdersTableRow\";\r\nimport RTLProvider from \"../helpers/RTLProvider\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    width: \"100%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"15px\",\r\n    background: \"orange\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function OrdersTable({\r\n  setPage,\r\n  orders,\r\n  setOrders,\r\n  pages,\r\n  getOrders,\r\n  url,\r\n}) {\r\n  const classes = useStyle();\r\n  const columns = [\r\n    \"رقم الطلب\",\r\n    \"اسم المستخدم\",\r\n    \"الدقيق\",\r\n    \"الخبز\",\r\n    \"المبلغ\",\r\n    \"الدين\",\r\n    \"الرصيد\",\r\n    \"التاريخ\",\r\n  ];\r\n\r\n  const handlePageChange = async (e, page) => {\r\n    setPage(page);\r\n    await getOrders(`${url}&page=${page}`);\r\n  };\r\n\r\n  return (\r\n    <RTLProvider>\r\n      <Grid container justifyContent=\"center\">\r\n        <Paper className={classes.paper}>\r\n          <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column, index) => (\r\n                    <TableCell\r\n                      className={classes.tableHeader}\r\n                      key={index}\r\n                      align=\"center\"\r\n                    >\r\n                      {column}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders.map((order, index) => {\r\n                  return (\r\n                    <OrderTableRow\r\n                      orders={orders}\r\n                      setOrders={setOrders}\r\n                      key={index}\r\n                      order={order}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <Pagination\r\n            count={pages}\r\n            showFirstButton\r\n            showLastButton\r\n            onChange={handlePageChange}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </RTLProvider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  FormControl,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"20px 0px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  margin: {\r\n    margin: \"10px 10px\",\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    displayDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: \"10px 10px\",\r\n  },\r\n  label: {\r\n    color: \"black\",\r\n    fontSize: \"14px\",\r\n  },\r\n  inputs: {\r\n    width: \"150px\",\r\n  },\r\n}));\r\n\r\nconst Filters = ({ getData, page, url, setUrl }) => {\r\n  const classes = useStyle();\r\n  const [data, setData] = useState({\r\n    from: null,\r\n    to: null,\r\n    orderCount: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    console.log(name, value);\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const reset = async (e) => {\r\n    setData({ from: null, to: null, orderCount: \"\" });\r\n    setUrl(`/admins/orders?`);\r\n    await getData();\r\n  };\r\n\r\n  const search = async (e) => {\r\n    let url = `/admins/orders?`;\r\n    if (data.from) url = url + `&from=${data.from}`;\r\n    if (data.to) url = url + `&to=${data.to}`;\r\n    if (data.orderCount) url = url + `&orderCount=${data.orderCount}`;\r\n    console.log(url);\r\n    setUrl(url);\r\n    url = url + `&page=${page}`;\r\n    await getData(url);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-end\"\r\n      className={classes.root}\r\n      item\r\n      xs={11}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          value={data.orderCount}\r\n          onChange={handleChange}\r\n          id=\"from\"\r\n          variant=\"standard\"\r\n          label=\"رقم الحركة\"\r\n          name=\"orderCount\"\r\n          className={classes.inputs}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <KeyboardDatePicker\r\n          onChange={(date) => {\r\n            setData({ ...data, from: date });\r\n          }}\r\n          label=\"من تاريخ\"\r\n          allowKeyboardControl={true}\r\n          renderInput={(params) => <TextField {...params} />}\r\n          format=\"dd-MM-yyyy\"\r\n          variant=\"inline\"\r\n          name=\"from\"\r\n          value={data.from}\r\n          invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <KeyboardDatePicker\r\n          onChange={(date) => {\r\n            setData({ ...data, to: date });\r\n          }}\r\n          label=\"الى تاريخ\"\r\n          allowKeyboardControl={true}\r\n          renderInput={(params) => <TextField {...params} />}\r\n          format=\"dd-MM-yyyy\"\r\n          variant=\"inline\"\r\n          value={data.to}\r\n          invalidDateMessage=\"التاريخ المدخل غير صحيح\"\r\n          name=\"to\"\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        onClick={search}\r\n        className={classes.margin}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        بحث\r\n      </Button>\r\n      <Button\r\n        onClick={reset}\r\n        className={classes.margin}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n      >\r\n        تفريغ الحقول\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Header from \"../component/Orders/Header\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport { get } from \"../api/genericApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport OrdersTable from \"../component/Orders/OrdersTable\";\r\nimport Filters from \"../component/Orders/Filters\";\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"30px 0px\",\r\n  },\r\n}));\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [url, setUrl] = useState(\"/admins/orders?\");\r\n  const [pages, setPages] = useState(1);\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const getOrders = useCallback(\r\n    async (url = \"/admins/orders\") => {\r\n      let response = await get(url);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        setSummary(response.data.summary);\r\n        setOrders(response.data.orders.orders);\r\n        let pagesNumber = Math.ceil(response.data.orders.ordersCount / 5);\r\n        setPages(pagesNumber);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, [history, getOrders]);\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Header data={summary} />\r\n      <Filters url={url} setUrl={setUrl} page={page} getData={getOrders} />\r\n      <OrdersTable\r\n        getOrders={getOrders}\r\n        orders={orders}\r\n        setOrders={setOrders}\r\n        pages={pages}\r\n        setPage={setPage}\r\n        url={url}\r\n        setUrl={setUrl}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { patch } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"60%\",\r\n  },\r\n  buttons: {\r\n    width: \"30%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n  checkBoxContainer: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\nconst EditeAdmin = ({ admin, admins, setAdmins, handleClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const initialValues = {\r\n    name: admin.name,\r\n    phoneNumber: admin.phoneNumber,\r\n    password: admin.password,\r\n    isBigManager: admin.isBigManager,\r\n    canManageUsers: admin.canManageUsers,\r\n    canManageFlour: admin.canManageFlour,\r\n    canManageBreed: admin.canManageBreed,\r\n    canManageDebts: admin.canManageDebts,\r\n    canManagePaid: admin.canManagePaid,\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    phoneNumber: yup.string().required(),\r\n    password: yup.string().required(),\r\n    isBigManager: yup.boolean().default(false),\r\n    canManageUsers: yup.boolean().default(false),\r\n    canManageFlour: yup.boolean().default(false),\r\n    canManageBreed: yup.boolean().default(false),\r\n    canManageDebts: yup.boolean().default(false),\r\n    canManagePaid: yup.boolean().default(false),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        name: values.name,\r\n        phoneNumber: values.phoneNumber,\r\n        password: values.password,\r\n        isBigManager: values.isBigManager,\r\n        canManageUsers: values.canManageUsers,\r\n        canManageFlour: values.canManageFlour,\r\n        canManageBreed: values.canManageBreed,\r\n        canManageDebts: values.canManageDebts,\r\n        canManagePaid: values.canManagePaid,\r\n      };\r\n      console.log(data);\r\n      let response = await patch(`/admins/${admin._id}`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        let newAdmins = [...admins];\r\n        let newAdmin = response.data.admin;\r\n        let newAdminIndex = newAdmins.findIndex((x) => x._id === admin._id);\r\n        newAdmins[newAdminIndex] = newAdmin;\r\n        setAdmins([...newAdmins]);\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم تعديل المسؤول بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"اسم المسؤول\"\r\n            {...formic.getFieldProps(\"name\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.name && formic.touched.name ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.name && formic.touched.name ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.phoneNumber && formic.touched.phoneNumber\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"رقم جوال المسسؤول\"\r\n            {...formic.getFieldProps(\"phoneNumber\")}\r\n          />\r\n          {formic.errors.phoneNumber && formic.touched.phoneNumber ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.password && formic.touched.password\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\" كلمة سر المسؤول\"\r\n            {...formic.getFieldProps(\"password\")}\r\n          />\r\n          {formic.errors.password && formic.touched.password ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid\r\n            className={classes.checkBoxContainer}\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={formic.values.isBigManager}\r\n                  {...formic.getFieldProps(\"isBigManager\")}\r\n                />\r\n              }\r\n              label=\"مسؤول النظام\"\r\n            />\r\n            {formic.errors.isBigManager && formic.touched.isBigManager ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageUsers\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageUsers\")}\r\n                />\r\n              }\r\n              label=\"يدير المستخدمين\"\r\n            />\r\n            {formic.errors.canManageUsers && formic.touched.canManageUsers ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageFlour\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageFlour\")}\r\n                />\r\n              }\r\n              label=\"يدير الدقيق \"\r\n            />\r\n            {formic.errors.canManageFlour && formic.touched.canManageFlour ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageBreed\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageFlour\")}\r\n                />\r\n              }\r\n              label=\"يدير الخبز \"\r\n            />\r\n            {formic.errors.canManageBreed && formic.touched.canManageBreed ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageDebts\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageDebts\")}\r\n                />\r\n              }\r\n              label=\"يدير الدين \"\r\n            />\r\n            {formic.errors.canManageDebts && formic.touched.canManageDebts ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManagePaid\r\n                  }\r\n                  {...formic.getFieldProps(\"canManagePaid\")}\r\n                />\r\n              }\r\n              label=\"يدير سند القبض \"\r\n            />\r\n            {formic.errors.canManagePaid && formic.touched.canManagePaid ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n            <Button\r\n              className={classes.buttons}\r\n              onClick={handleClose}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              الغاء\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditeAdmin;\r\n","import React from \"react\";\r\nimport { Button, Grid, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { deleteRequest } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nconst useStyle = makeStyles(() => ({\r\n  buttons: {\r\n    margin: \"15px\",\r\n    fontWeight: \"700\",\r\n  },\r\n}));\r\n\r\nconst DeleteAdmin = ({ admin, setAdmins, admins, handleClose }) => {\r\n  const classes = useStyle();\r\n\r\n  const deleteAdmin = async () => {\r\n    const response = await deleteRequest(`/admins/${admin._id}`);\r\n    if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n      let newAdmins = admins.filter((x) => x._id !== admin._id);\r\n      setAdmins([...newAdmins]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid container justifyContent=\"center\">\r\n        <Typography variant=\"h6\">\r\n          هل تريد بالتاكيد حذف المسؤول \"<b> {admin.name}</b>\"\r\n        </Typography>\r\n      </Grid>\r\n      <Button\r\n        onClick={deleteAdmin}\r\n        className={classes.buttons}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        حذف المسؤول\r\n      </Button>\r\n      <Button\r\n        className={classes.buttons}\r\n        onClick={handleClose}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n      >\r\n        الغاء\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DeleteAdmin;\r\n","import React, { useState } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport EditeAdmin from \"./EditeAdmin\";\r\nimport DeleteAdmin from \"./DeleteAdmin\";\r\nconst useStyle = makeStyles(() => ({\r\n  editeIcon: {\r\n    color: \"#989813\",\r\n  },\r\n  tableCell: {\r\n    padding: \"2px\",\r\n  },\r\n  checkedIcon: {\r\n    color: \"green\",\r\n  },\r\n}));\r\n\r\nconst AdminsTableRow = ({ admins, admin, setAdmins, index }) => {\r\n  const [openEdite, setOpenEdite] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  const handleCloseEdite = () => {\r\n    setOpenEdite(false);\r\n  };\r\n\r\n  const handleOpenEdite = () => {\r\n    setOpenEdite(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const handleOpenDelete = () => {\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  return (\r\n    <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {index + 1}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin?.name}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin?.phoneNumber}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.isBigManager ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.isBigManager || admin.canManageBreed ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.canManageFlour || admin.isBigManager ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.canManageDebts || admin.isBigManager ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.canManageUsers || admin.isBigManager ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        {admin.canManagePaid || admin.isBigManager ? (\r\n          <CheckCircleIcon className={classes.checkedIcon} />\r\n        ) : (\r\n          <CancelIcon color=\"secondary\" />\r\n        )}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <IconButton onClick={handleOpenEdite}>\r\n          <EditIcon className={classes.editeIcon} />\r\n        </IconButton>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell} align=\"center\">\r\n        <IconButton onClick={handleOpenDelete}>\r\n          <DeleteIcon color=\"secondary\" />\r\n        </IconButton>\r\n      </TableCell>\r\n      <PopUp\r\n        open={openEdite}\r\n        handleClose={handleCloseEdite}\r\n        title=\"تعديل بيانات المسؤول\"\r\n      >\r\n        <EditeAdmin\r\n          handleClose={handleCloseEdite}\r\n          admin={admin}\r\n          admins={admins}\r\n          setAdmins={setAdmins}\r\n        />\r\n      </PopUp>\r\n      <PopUp open={openDelete} handleClose={handleCloseDelete}>\r\n        <DeleteAdmin\r\n          handleClose={handleCloseDelete}\r\n          admin={admin}\r\n          admins={admins}\r\n          setAdmins={setAdmins}\r\n        />\r\n      </PopUp>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default AdminsTableRow;\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport AdminsTableRow from \"./AdminsTableRow\";\r\nimport RTLProvider from \"../helpers/RTLProvider\";\r\nconst useStyle = makeStyles(() => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    overflow: \"hidden\",\r\n    marginTop: \"40px\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    width: \"100%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"15px\",\r\n    background: \"orange\",\r\n    color: \"white\",\r\n  },\r\n}));\r\nconst AdminsTable = ({ admins, setAdmins }) => {\r\n  const classes = useStyle();\r\n  const columns = [\r\n    \"#\",\r\n    \"رقم جوال المسؤول\",\r\n    \"اسم المسؤول\",\r\n    \"مسؤول النظام\",\r\n    \"يمكنه ادارة الخبز\",\r\n    \"يمكنه ادارة الدقيق\",\r\n    \"يمكنه ادارة الدين\",\r\n    \"يمكنه ادارة المستخدمين\",\r\n    \"يمكنه ادارة  سند القبض \",\r\n    \"تعديل\",\r\n    \"حذف\",\r\n  ];\r\n\r\n  return (\r\n    <RTLProvider>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column, index) => (\r\n                  <TableCell\r\n                    className={classes.tableHeader}\r\n                    key={index}\r\n                    align=\"center\"\r\n                  >\r\n                    {column}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {admins.map((admin, index) => {\r\n                return (\r\n                  <AdminsTableRow\r\n                    admins={admins}\r\n                    setAdmins={setAdmins}\r\n                    key={index}\r\n                    admin={admin}\r\n                    index={index}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </RTLProvider>\r\n  );\r\n};\r\n\r\nexport default AdminsTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { post } from \"../../api/genericApi\";\r\nimport { API_COMMON_STATUS } from \"../../helpers/api-helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  inputs: {\r\n    background: \"white\",\r\n    margin: \"10px 0px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    width: \"60%\",\r\n  },\r\n  buttons: {\r\n    width: \"30%\",\r\n    margin: \"0px 10px\",\r\n  },\r\n  error: {\r\n    border: \"1px solid red\",\r\n  },\r\n  checkBoxContainer: {\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\nconst AddAdmin = ({ admins, setAdmins, handleClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const initialValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    isBigManager: false,\r\n    canManageUsers: false,\r\n    canManageFlour: false,\r\n    canManageBreed: false,\r\n    canManageDebts: false,\r\n    canManagePaid: false,\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    phoneNumber: yup.string().required(),\r\n    password: yup.string().required(),\r\n    isBigManager: yup.boolean().default(false),\r\n    canManageUsers: yup.boolean().default(false),\r\n    canManageFlour: yup.boolean().default(false),\r\n    canManageBreed: yup.boolean().default(false),\r\n    canManageDebts: yup.boolean().default(false),\r\n    canManagePaid: yup.boolean().default(false),\r\n  });\r\n\r\n  const formic = useFormik({\r\n    validationSchema,\r\n    initialValues,\r\n    onSubmit: async (values) => {\r\n      let data = {\r\n        name: values.name,\r\n        phoneNumber: values.phoneNumber,\r\n        password: values.password,\r\n        isBigManager: Boolean(values.isBigManager),\r\n        canManageUsers: Boolean(values.canManageUsers),\r\n        canManageFlour: Boolean(values.canManageFlour),\r\n        canManageBreed: Boolean(values.canManageBreed),\r\n        canManageDebts: Boolean(values.canManageDebts),\r\n        canManagePaid: Boolean(values.canManagePaid),\r\n      };\r\n      console.log(data);\r\n      let response = await post(`/admins/register`, data);\r\n      console.log(response);\r\n      if (response.responseStatus === API_COMMON_STATUS.RESOURCE_CREATED) {\r\n        setAdmins([...admins, response.data.admin]);\r\n        setSuccess(true);\r\n        formic.resetForm();\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 3000);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        console.log(response.data.msg);\r\n        setError(response.data.msg);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formic.handleSubmit} className={classes.form}>\r\n      <Grid container justifyContent=\"center\">\r\n        {error && (\r\n          <Alert className={classes.alert} variant=\"outlined\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert\r\n            className={classes.alert}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            تم اضافة المسؤول بنجاح\r\n          </Alert>\r\n        )}\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <TextField\r\n            className={classes.inputs}\r\n            variant=\"outlined\"\r\n            label=\"اسم المسؤول\"\r\n            {...formic.getFieldProps(\"name\")}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.name && formic.touched.name ? classes.error : \"\",\r\n            }}\r\n          />\r\n          {formic.errors.name && formic.touched.name ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.phoneNumber && formic.touched.phoneNumber\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\"رقم جوال المسسؤول\"\r\n            {...formic.getFieldProps(\"phoneNumber\")}\r\n          />\r\n          {formic.errors.phoneNumber && formic.touched.phoneNumber ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.inputs}\r\n            inputProps={{\r\n              className:\r\n                formic.errors.password && formic.touched.password\r\n                  ? classes.error\r\n                  : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            label=\" كلمة سر المسؤول\"\r\n            {...formic.getFieldProps(\"password\")}\r\n          />\r\n          {formic.errors.password && formic.touched.password ? (\r\n            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n              هذا الحقل مطلوب\r\n            </Typography>\r\n          ) : null}\r\n          <Grid\r\n            className={classes.checkBoxContainer}\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={formic.values.isBigManager}\r\n                  {...formic.getFieldProps(\"isBigManager\")}\r\n                />\r\n              }\r\n              label=\"مسؤول النظام\"\r\n            />\r\n            {formic.errors.isBigManager && formic.touched.isBigManager ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageUsers\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageUsers\")}\r\n                />\r\n              }\r\n              label=\"يدير المستخدمين\"\r\n            />\r\n            {formic.errors.canManageUsers && formic.touched.canManageUsers ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageFlour\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageFlour\")}\r\n                />\r\n              }\r\n              label=\"يدير الدقيق \"\r\n            />\r\n            {formic.errors.canManageFlour && formic.touched.canManageFlour ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageBreed\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageBreed\")}\r\n                />\r\n              }\r\n              label=\"يدير الخبز \"\r\n            />\r\n            {formic.errors.canManageBreed && formic.touched.canManageBreed ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManageDebts\r\n                  }\r\n                  {...formic.getFieldProps(\"canManageDebts\")}\r\n                />\r\n              }\r\n              label=\"يدير الدين \"\r\n            />\r\n            {formic.errors.canManageDebts && formic.touched.canManageDebts ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={\r\n                    formic.values.isBigManager || formic.values.canManagePaid\r\n                  }\r\n                  {...formic.getFieldProps(\"canManagePaid\")}\r\n                />\r\n              }\r\n              label=\"يدير سند القبض \"\r\n            />\r\n            {formic.errors.canManagePaid && formic.touched.canManagePaid ? (\r\n              <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                هذا الحقل مطلوب\r\n              </Typography>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              className={classes.buttons}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              حفظ\r\n            </Button>\r\n            <Button\r\n              className={classes.buttons}\r\n              onClick={handleClose}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              الغاء\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddAdmin;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport AddAdmin from \"./AddAdmin\";\r\n\r\nconst Header = ({ admins, setAdmins }) => {\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  };\r\n\r\n  const handlecloseAdd = () => {\r\n    setOpenAdd(false);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={11} container justifyContent=\"space-between\">\r\n      <Typography color=\"textPrimary\" variant=\"h4\">\r\n        ادارة المسؤولين\r\n      </Typography>\r\n      <Button onClick={handleOpenAdd} variant=\"contained\" color=\"primary\">\r\n        اضافة مسؤول\r\n      </Button>\r\n      <PopUp\r\n        open={openAdd}\r\n        handleClose={handlecloseAdd}\r\n        title=\"اضافة مسؤول جديد\"\r\n      >\r\n        <AddAdmin\r\n          admins={admins}\r\n          handleClose={handlecloseAdd}\r\n          setAdmins={setAdmins}\r\n        />\r\n      </PopUp>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useAuthContext } from \"../context/authContext\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { API_COMMON_STATUS } from \"../helpers/api-helpers\";\r\nimport { get } from \"../api/genericApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AdminsTable from \"../component/Admins/AdminsTable\";\r\nimport Header from \"../component/Admins/Header\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Admins = () => {\r\n  const [admins, setAdmins] = useState([]);\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  const { admin } = useAuthContext();\r\n\r\n  const getAdmins = useCallback(\r\n    async (url = \"/admins?\") => {\r\n      let response = await get(url);\r\n      if (response.responseStatus === API_COMMON_STATUS.SUCCESS) {\r\n        setAdmins(response.data.admins);\r\n      } else if (response.responseStatus === API_COMMON_STATUS.UNAUTHORIZED) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n        history.push(\"/login\");\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n  useEffect(() => {\r\n    if (admin) {\r\n      if (!admin?.isBigManager) {\r\n        history.push(\"/\");\r\n      } else {\r\n        getAdmins();\r\n      }\r\n    }\r\n  }, [admin?.isBigManager, history, admin, getAdmins]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Header admins={admins} setAdmins={setAdmins} />\r\n      <AdminsTable admins={admins} setAdmins={setAdmins} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Admins;\r\n","// import \"./App.css\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\nimport NavBar from \"./layout/NavBar\";\r\nimport ProtectRoute from \"./component/ProtectRoutes/ProtectRoute\";\r\nimport Login from \"./pages/Login\";\r\nimport { AuthContextProvider } from \"./context/authContext\";\r\nimport User from \"./pages/User\";\r\nimport Flour from \"./pages/Flour\";\r\nimport Breed from \"./pages/Breed\";\r\nimport Debt from \"./pages/Debt\";\r\nimport Paid from \"./pages/Paid\";\r\nimport Orders from \"./pages/Orders\";\r\nimport Admins from \"./pages/Admins\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nconst theme = createTheme({\r\n  direction: \"rtl\",\r\n  palette: {\r\n    primary: {\r\n      main: indigo[\"800\"],\r\n    },\r\n  },\r\n});\r\nfunction App() {\r\n  // #0b1e86\r\n  const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <StylesProvider jss={jss}>\r\n          <ThemeProvider theme={theme}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <AuthContextProvider>\r\n                <Router>\r\n                  <NavBar />\r\n                  <Switch>\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <ProtectRoute exact path=\"/\" component={Home} />\r\n                    <ProtectRoute exact path=\"/flour\" component={Flour} />\r\n                    <ProtectRoute exact path=\"/breed\" component={Breed} />\r\n                    <ProtectRoute exact path=\"/debt\" component={Debt} />\r\n                    <ProtectRoute exact path=\"/payed\" component={Paid} />\r\n                    <ProtectRoute exact path=\"/orders\" component={Orders} />\r\n                    <ProtectRoute exact path=\"/admins\" component={Admins} />\r\n                    <ProtectRoute exact path=\"/user/:id\" component={User} />\r\n                  </Switch>\r\n                </Router>\r\n              </AuthContextProvider>\r\n            </MuiPickersUtilsProvider>\r\n          </ThemeProvider>\r\n        </StylesProvider>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}